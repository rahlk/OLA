<java.util.Locale$LocaleNameGetter: java.lang.String getObject(java.util.spi.LocaleNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/switch/instruction18	18	<java.util.Locale$LocaleNameGetter: java.lang.String getObject(java.util.spi.LocaleNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/l5#_2269	<java.util.Locale$LocaleNameGetter: java.lang.String getObject(java.util.spi.LocaleNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: long getTransitionEpochSecond(int)>/switch/instruction36	36	<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: long getTransitionEpochSecond(int)>/$stack11	<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: long getTransitionEpochSecond(int)>
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int lengthOfMonth(int,int)>/switch/instruction3	3	<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int lengthOfMonth(int,int)>/l1#_0	<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int lengthOfMonth(int,int)>
<java.lang.UNIXProcess: void initStreams(int[])>/switch/instruction7	7	<java.lang.UNIXProcess: void initStreams(int[])>/$stack5	<java.lang.UNIXProcess: void initStreams(int[])>
<java.lang.UNIXProcess: void destroy(boolean)>/switch/instruction7	7	<java.lang.UNIXProcess: void destroy(boolean)>/$stack8	<java.lang.UNIXProcess: void destroy(boolean)>
<sun.security.ssl.HandshakeMessage$CertificateVerify: java.security.Signature getSignature(sun.security.ssl.ProtocolVersion,java.lang.String)>/switch/instruction28	28	<sun.security.ssl.HandshakeMessage$CertificateVerify: java.security.Signature getSignature(sun.security.ssl.ProtocolVersion,java.lang.String)>/l3_$$A_4#_1658	<sun.security.ssl.HandshakeMessage$CertificateVerify: java.security.Signature getSignature(sun.security.ssl.ProtocolVersion,java.lang.String)>
<sun.security.ssl.InputRecord: java.lang.String contentName(int)>/switch/instruction2	2	<sun.security.ssl.InputRecord: java.lang.String contentName(int)>/l0#_0	<sun.security.ssl.InputRecord: java.lang.String contentName(int)>
<java.time.Ser: void writeInternal(byte,java.lang.Object,java.io.ObjectOutput)>/switch/instruction5	5	<java.time.Ser: void writeInternal(byte,java.lang.Object,java.io.ObjectOutput)>/l0#_0	<java.time.Ser: void writeInternal(byte,java.lang.Object,java.io.ObjectOutput)>
<java.time.Ser: java.lang.Object readInternal(byte,java.io.ObjectInput)>/switch/instruction3	3	<java.time.Ser: java.lang.Object readInternal(byte,java.io.ObjectInput)>/l0#_0	<java.time.Ser: java.lang.Object readInternal(byte,java.io.ObjectInput)>
<jdk.internal.util.xml.impl.ParserSAX: void parse()>/switch/instruction17	17	<jdk.internal.util.xml.impl.ParserSAX: void parse()>/$stack7	<jdk.internal.util.xml.impl.ParserSAX: void parse()>
<jdk.internal.util.xml.impl.ParserSAX: void parse()>/switch/instruction35	35	<jdk.internal.util.xml.impl.ParserSAX: void parse()>/l1#9_$$A_2#_457	<jdk.internal.util.xml.impl.ParserSAX: void parse()>
<java.io.ObjectStreamClass$FieldReflector: void getPrimFieldValues(java.lang.Object,byte[])>/switch/instruction19	19	<java.io.ObjectStreamClass$FieldReflector: void getPrimFieldValues(java.lang.Object,byte[])>/$stack11	<java.io.ObjectStreamClass$FieldReflector: void getPrimFieldValues(java.lang.Object,byte[])>
<java.io.ObjectStreamClass$FieldReflector: void setPrimFieldValues(java.lang.Object,byte[])>/switch/instruction22	22	<java.io.ObjectStreamClass$FieldReflector: void setPrimFieldValues(java.lang.Object,byte[])>/$stack12	<java.io.ObjectStreamClass$FieldReflector: void setPrimFieldValues(java.lang.Object,byte[])>
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getHttpProxyAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>/switch/instruction65	65	<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getHttpProxyAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>/$stack59	<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getHttpProxyAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>
<java.lang.invoke.LambdaForm$Name: boolean typesMatch(java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>/switch/instruction17	17	<java.lang.invoke.LambdaForm$Name: boolean typesMatch(java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>/$stack5	<java.lang.invoke.LambdaForm$Name: boolean typesMatch(java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getServerAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>/switch/instruction84	84	<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getServerAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>/$stack60	<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getServerAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>
<sun.invoke.util.VerifyAccess: boolean isMemberAccessible(java.lang.Class,java.lang.Class,int,java.lang.Class,int)>/switch/instruction28	28	<sun.invoke.util.VerifyAccess: boolean isMemberAccessible(java.lang.Class,java.lang.Class,int,java.lang.Class,int)>/$stack7	<sun.invoke.util.VerifyAccess: boolean isMemberAccessible(java.lang.Class,java.lang.Class,int,java.lang.Class,int)>
<java.lang.CharacterData00: byte getDirectionality(int)>/switch/instruction8	8	<java.lang.CharacterData00: byte getDirectionality(int)>/l1#_0	<java.lang.CharacterData00: byte getDirectionality(int)>
<java.util.Calendar: java.util.Calendar createCalendar(java.util.TimeZone,java.util.Locale)>/switch/instruction42	42	<java.util.Calendar: java.util.Calendar createCalendar(java.util.TimeZone,java.util.Locale)>/l6_$$A_4#_1678	<java.util.Calendar: java.util.Calendar createCalendar(java.util.TimeZone,java.util.Locale)>
<java.util.Calendar: java.lang.String[] getFieldStrings(int,int,java.text.DateFormatSymbols)>/switch/instruction10	10	<java.util.Calendar: java.lang.String[] getFieldStrings(int,int,java.text.DateFormatSymbols)>/l1#_0	<java.util.Calendar: java.lang.String[] getFieldStrings(int,int,java.text.DateFormatSymbols)>
<java.time.Duration: java.time.Duration plus(long,java.time.temporal.TemporalUnit)>/switch/instruction28	28	<java.time.Duration: java.time.Duration plus(long,java.time.temporal.TemporalUnit)>/$stack20	<java.time.Duration: java.time.Duration plus(long,java.time.temporal.TemporalUnit)>
<sun.security.ssl.ClientHandshaker: void processMessage(byte,int)>/switch/instruction16	16	<sun.security.ssl.ClientHandshaker: void processMessage(byte,int)>/l1#_0	<sun.security.ssl.ClientHandshaker: void processMessage(byte,int)>
<sun.security.ssl.ClientHandshaker: void processMessage(byte,int)>/switch/instruction58	58	<sun.security.ssl.ClientHandshaker: void processMessage(byte,int)>/$stack57	<sun.security.ssl.ClientHandshaker: void processMessage(byte,int)>
<sun.security.ssl.ClientHandshaker: void serverHelloDone(sun.security.ssl.HandshakeMessage$ServerHelloDone)>/switch/instruction170	170	<sun.security.ssl.ClientHandshaker: void serverHelloDone(sun.security.ssl.HandshakeMessage$ServerHelloDone)>/$stack16	<sun.security.ssl.ClientHandshaker: void serverHelloDone(sun.security.ssl.HandshakeMessage$ServerHelloDone)>
<sun.security.ssl.ClientHandshaker: void serverHelloDone(sun.security.ssl.HandshakeMessage$ServerHelloDone)>/switch/instruction391	391	<sun.security.ssl.ClientHandshaker: void serverHelloDone(sun.security.ssl.HandshakeMessage$ServerHelloDone)>/$stack31	<sun.security.ssl.ClientHandshaker: void serverHelloDone(sun.security.ssl.HandshakeMessage$ServerHelloDone)>
<sun.nio.fs.UnixFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>/switch/instruction29	29	<sun.nio.fs.UnixFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>/$stack30	<sun.nio.fs.UnixFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>
<java.text.NumberFormat: java.text.NumberFormat getInstance(sun.util.locale.provider.LocaleProviderAdapter,java.util.Locale,int)>/switch/instruction6	6	<java.text.NumberFormat: java.text.NumberFormat getInstance(sun.util.locale.provider.LocaleProviderAdapter,java.util.Locale,int)>/l2#_0	<java.text.NumberFormat: java.text.NumberFormat getInstance(sun.util.locale.provider.LocaleProviderAdapter,java.util.Locale,int)>
<java.time.LocalTime: int get0(java.time.temporal.TemporalField)>/switch/instruction7	7	<java.time.LocalTime: int get0(java.time.temporal.TemporalField)>/$stack6	<java.time.LocalTime: int get0(java.time.temporal.TemporalField)>
<java.time.LocalTime: java.time.LocalTime with(java.time.temporal.TemporalField,long)>/switch/instruction11	11	<java.time.LocalTime: java.time.LocalTime with(java.time.temporal.TemporalField,long)>/$stack11	<java.time.LocalTime: java.time.LocalTime with(java.time.temporal.TemporalField,long)>
<java.lang.invoke.BoundMethodHandle$Factory: int typeLoadOp(char)>/switch/instruction2	2	<java.lang.invoke.BoundMethodHandle$Factory: int typeLoadOp(char)>/l0#_0	<java.lang.invoke.BoundMethodHandle$Factory: int typeLoadOp(char)>
<java.time.LocalTime: java.time.LocalTime plus(long,java.time.temporal.TemporalUnit)>/switch/instruction10	10	<java.time.LocalTime: java.time.LocalTime plus(long,java.time.temporal.TemporalUnit)>/$stack10	<java.time.LocalTime: java.time.LocalTime plus(long,java.time.temporal.TemporalUnit)>
<java.time.LocalTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/switch/instruction14	14	<java.time.LocalTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/$stack14	<java.time.LocalTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.text.SimpleDateFormat: void subFormat(int,int,java.text.Format$FieldDelegate,java.lang.StringBuffer,boolean)>/switch/instruction62	62	<java.text.SimpleDateFormat: void subFormat(int,int,java.text.Format$FieldDelegate,java.lang.StringBuffer,boolean)>/l1_$$A_2#_1120	<java.text.SimpleDateFormat: void subFormat(int,int,java.text.Format$FieldDelegate,java.lang.StringBuffer,boolean)>
<sun.nio.fs.UnixFileModeAttribute: int toUnixMode(java.util.Set)>/switch/instruction17	17	<sun.nio.fs.UnixFileModeAttribute: int toUnixMode(java.util.Set)>/$stack9	<sun.nio.fs.UnixFileModeAttribute: int toUnixMode(java.util.Set)>
<java.net.SocksSocketImpl: void connectV4(java.io.InputStream,java.io.OutputStream,java.net.InetSocketAddress,long)>/switch/instruction65	65	<java.net.SocksSocketImpl: void connectV4(java.io.InputStream,java.io.OutputStream,java.net.InetSocketAddress,long)>/$stack24	<java.net.SocksSocketImpl: void connectV4(java.io.InputStream,java.io.OutputStream,java.net.InetSocketAddress,long)>
<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$ASCIIToBinaryConverter parseHexString(java.lang.String)>/switch/instruction193	193	<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$ASCIIToBinaryConverter parseHexString(java.lang.String)>/l18_$$A_5#_2297	<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$ASCIIToBinaryConverter parseHexString(java.lang.String)>
<java.text.SimpleDateFormat: int subParse(java.lang.String,int,int,int,boolean,boolean[],java.text.ParsePosition,boolean,java.text.CalendarBuilder)>/switch/instruction107	107	<java.text.SimpleDateFormat: int subParse(java.lang.String,int,int,int,boolean,boolean[],java.text.ParsePosition,boolean,java.text.CalendarBuilder)>/l3_$$A_2#_1831	<java.text.SimpleDateFormat: int subParse(java.lang.String,int,int,int,boolean,boolean[],java.text.ParsePosition,boolean,java.text.CalendarBuilder)>
<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/switch/instruction317	317	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/$stack48	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>
<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/switch/instruction319	319	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/$stack58	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>
<java.net.SocksSocketImpl: void bindV4(java.io.InputStream,java.io.OutputStream,java.net.InetAddress,int)>/switch/instruction76	76	<java.net.SocksSocketImpl: void bindV4(java.io.InputStream,java.io.OutputStream,java.net.InetAddress,int)>/$stack24	<java.net.SocksSocketImpl: void bindV4(java.io.InputStream,java.io.OutputStream,java.net.InetAddress,int)>
<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>/switch/instruction282	282	<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>/$stack45	<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>
<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>/switch/instruction284	284	<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>/$stack56	<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>
<java.net.SocksSocketImpl: void acceptFrom(java.net.SocketImpl,java.net.InetSocketAddress)>/switch/instruction14	14	<java.net.SocksSocketImpl: void acceptFrom(java.net.SocketImpl,java.net.InetSocketAddress)>/l4#_932	<java.net.SocksSocketImpl: void acceptFrom(java.net.SocketImpl,java.net.InetSocketAddress)>
<java.net.SocksSocketImpl: void acceptFrom(java.net.SocketImpl,java.net.InetSocketAddress)>/switch/instruction16	16	<java.net.SocksSocketImpl: void acceptFrom(java.net.SocketImpl,java.net.InetSocketAddress)>/l4_$$A_1#_941	<java.net.SocksSocketImpl: void acceptFrom(java.net.SocketImpl,java.net.InetSocketAddress)>
<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>/switch/instruction26	26	<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>/l9#_2504	<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeArgument parseTypeArgument()>/switch/instruction6	6	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeArgument parseTypeArgument()>/l4#_415	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeArgument parseTypeArgument()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature parseTypeSignature()>/switch/instruction3	3	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature parseTypeSignature()>/$stack1	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature parseTypeSignature()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.BaseType parseBaseType()>/switch/instruction3	3	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.BaseType parseBaseType()>/$stack1	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.BaseType parseBaseType()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature[] parseZeroOrMoreTypeSignatures()>/switch/instruction11	11	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature[] parseZeroOrMoreTypeSignatures()>/$stack8	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature[] parseZeroOrMoreTypeSignatures()>
<java.time.format.DateTimeFormatterBuilder$SettingsParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>/switch/instruction6	6	<java.time.format.DateTimeFormatterBuilder$SettingsParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>/$stack4	<java.time.format.DateTimeFormatterBuilder$SettingsParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>/switch/instruction3	3	<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>/$stack1	<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>
<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>/switch/instruction23	23	<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>/l3#_2778	<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>
<java.text.RBTableBuilder: int increment(int,int)>/switch/instruction4	4	<java.text.RBTableBuilder: int increment(int,int)>/l1#_0	<java.text.RBTableBuilder: int increment(int,int)>
<java.io.ObjectInputStream$BlockDataInputStream: long readUTFSpan(java.lang.StringBuilder,long)>/switch/instruction35	35	<java.io.ObjectInputStream$BlockDataInputStream: long readUTFSpan(java.lang.StringBuilder,long)>/$stack41	<java.io.ObjectInputStream$BlockDataInputStream: long readUTFSpan(java.lang.StringBuilder,long)>
<java.io.ObjectInputStream$BlockDataInputStream: int readUTFChar(java.lang.StringBuilder,long)>/switch/instruction7	7	<java.io.ObjectInputStream$BlockDataInputStream: int readUTFChar(java.lang.StringBuilder,long)>/$stack8	<java.io.ObjectInputStream$BlockDataInputStream: int readUTFChar(java.lang.StringBuilder,long)>
<java.lang.invoke.InvokerBytecodeGenerator: void emitIconstInsn(int)>/switch/instruction3	3	<java.lang.invoke.InvokerBytecodeGenerator: void emitIconstInsn(int)>/l1#_0	<java.lang.invoke.InvokerBytecodeGenerator: void emitIconstInsn(int)>
<java.lang.invoke.InvokerBytecodeGenerator: int loadInsnOpcode(java.lang.invoke.LambdaForm$BasicType)>/switch/instruction6	6	<java.lang.invoke.InvokerBytecodeGenerator: int loadInsnOpcode(java.lang.invoke.LambdaForm$BasicType)>/$stack4	<java.lang.invoke.InvokerBytecodeGenerator: int loadInsnOpcode(java.lang.invoke.LambdaForm$BasicType)>
<java.lang.invoke.InvokerBytecodeGenerator: int storeInsnOpcode(java.lang.invoke.LambdaForm$BasicType)>/switch/instruction6	6	<java.lang.invoke.InvokerBytecodeGenerator: int storeInsnOpcode(java.lang.invoke.LambdaForm$BasicType)>/$stack4	<java.lang.invoke.InvokerBytecodeGenerator: int storeInsnOpcode(java.lang.invoke.LambdaForm$BasicType)>
<java.lang.invoke.InvokerBytecodeGenerator: byte arrayTypeCode(sun.invoke.util.Wrapper)>/switch/instruction6	6	<java.lang.invoke.InvokerBytecodeGenerator: byte arrayTypeCode(sun.invoke.util.Wrapper)>/$stack4	<java.lang.invoke.InvokerBytecodeGenerator: byte arrayTypeCode(sun.invoke.util.Wrapper)>
<java.lang.invoke.InvokerBytecodeGenerator: int arrayInsnOpcode(byte,int)>/switch/instruction11	11	<java.lang.invoke.InvokerBytecodeGenerator: int arrayInsnOpcode(byte,int)>/l1#_0	<java.lang.invoke.InvokerBytecodeGenerator: int arrayInsnOpcode(byte,int)>
<java.lang.invoke.InvokerBytecodeGenerator: void emitReturnInsn(java.lang.invoke.LambdaForm$BasicType)>/switch/instruction6	6	<java.lang.invoke.InvokerBytecodeGenerator: void emitReturnInsn(java.lang.invoke.LambdaForm$BasicType)>/$stack5	<java.lang.invoke.InvokerBytecodeGenerator: void emitReturnInsn(java.lang.invoke.LambdaForm$BasicType)>
<java.time.zone.Ser: void writeInternal(byte,java.lang.Object,java.io.DataOutput)>/switch/instruction5	5	<java.time.zone.Ser: void writeInternal(byte,java.lang.Object,java.io.DataOutput)>/l0#_0	<java.time.zone.Ser: void writeInternal(byte,java.lang.Object,java.io.DataOutput)>
<java.time.zone.Ser: java.lang.Object readInternal(byte,java.io.DataInput)>/switch/instruction3	3	<java.time.zone.Ser: java.lang.Object readInternal(byte,java.io.DataInput)>/l0#_0	<java.time.zone.Ser: java.lang.Object readInternal(byte,java.io.DataInput)>
<java.lang.invoke.InvokerBytecodeGenerator: byte[] generateCustomizedCodeBytes()>/switch/instruction68	68	<java.lang.invoke.InvokerBytecodeGenerator: byte[] generateCustomizedCodeBytes()>/$stack31	<java.lang.invoke.InvokerBytecodeGenerator: byte[] generateCustomizedCodeBytes()>
<java.lang.invoke.InvokerBytecodeGenerator: int refKindOpcode(byte)>/switch/instruction3	3	<java.lang.invoke.InvokerBytecodeGenerator: int refKindOpcode(byte)>/l1#_0	<java.lang.invoke.InvokerBytecodeGenerator: int refKindOpcode(byte)>
<java.lang.invoke.InvokerBytecodeGenerator: void emitPrimCast(sun.invoke.util.Wrapper,sun.invoke.util.Wrapper)>/switch/instruction21	21	<java.lang.invoke.InvokerBytecodeGenerator: void emitPrimCast(sun.invoke.util.Wrapper,sun.invoke.util.Wrapper)>/$stack8	<java.lang.invoke.InvokerBytecodeGenerator: void emitPrimCast(sun.invoke.util.Wrapper,sun.invoke.util.Wrapper)>
<java.lang.invoke.InvokerBytecodeGenerator: void emitI2X(sun.invoke.util.Wrapper)>/switch/instruction6	6	<java.lang.invoke.InvokerBytecodeGenerator: void emitI2X(sun.invoke.util.Wrapper)>/$stack4	<java.lang.invoke.InvokerBytecodeGenerator: void emitI2X(sun.invoke.util.Wrapper)>
<java.lang.invoke.InvokerBytecodeGenerator: void emitX2I(sun.invoke.util.Wrapper)>/switch/instruction6	6	<java.lang.invoke.InvokerBytecodeGenerator: void emitX2I(sun.invoke.util.Wrapper)>/$stack4	<java.lang.invoke.InvokerBytecodeGenerator: void emitX2I(sun.invoke.util.Wrapper)>
<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.String,boolean)>/switch/instruction20	20	<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.String,boolean)>/$stack5	<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.String,boolean)>
<sun.net.util.IPAddressUtil: byte[] textToNumericFormatV4(java.lang.String)>/switch/instruction67	67	<sun.net.util.IPAddressUtil: byte[] textToNumericFormatV4(java.lang.String)>/l4_$$A_1#_79	<sun.net.util.IPAddressUtil: byte[] textToNumericFormatV4(java.lang.String)>
<java.time.chrono.JapaneseDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/switch/instruction11	11	<java.time.chrono.JapaneseDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/$stack14	<java.time.chrono.JapaneseDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.chrono.JapaneseDate: long getLong(java.time.temporal.TemporalField)>/switch/instruction9	9	<java.time.chrono.JapaneseDate: long getLong(java.time.temporal.TemporalField)>/$stack8	<java.time.chrono.JapaneseDate: long getLong(java.time.temporal.TemporalField)>
<sun.security.x509.X509CertImpl: java.util.Collection makeAltNames(sun.security.x509.GeneralNames)>/switch/instruction24	24	<sun.security.x509.X509CertImpl: java.util.Collection makeAltNames(sun.security.x509.GeneralNames)>/$stack20	<sun.security.x509.X509CertImpl: java.util.Collection makeAltNames(sun.security.x509.GeneralNames)>
<java.time.chrono.JapaneseChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>/switch/instruction6	6	<java.time.chrono.JapaneseChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>/$stack6	<java.time.chrono.JapaneseChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<java.text.PatternEntry: void addToBuffer(java.lang.StringBuffer,boolean,boolean,java.text.PatternEntry)>/switch/instruction29	29	<java.text.PatternEntry: void addToBuffer(java.lang.StringBuffer,boolean,boolean,java.text.PatternEntry)>/$stack5	<java.text.PatternEntry: void addToBuffer(java.lang.StringBuffer,boolean,boolean,java.text.PatternEntry)>
<sun.security.util.DerInputBuffer: java.util.Date getTime(int,boolean)>/switch/instruction203	203	<sun.security.util.DerInputBuffer: java.util.Date getTime(int,boolean)>/l11_$$A_1#_354	<sun.security.util.DerInputBuffer: java.util.Date getTime(int,boolean)>
<java.time.chrono.MinguoDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/switch/instruction11	11	<java.time.chrono.MinguoDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/$stack16	<java.time.chrono.MinguoDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.chrono.MinguoDate: long getLong(java.time.temporal.TemporalField)>/switch/instruction9	9	<java.time.chrono.MinguoDate: long getLong(java.time.temporal.TemporalField)>/$stack8	<java.time.chrono.MinguoDate: long getLong(java.time.temporal.TemporalField)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate with(java.time.temporal.TemporalField,long)>/switch/instruction14	14	<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate with(java.time.temporal.TemporalField,long)>/$stack13	<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate with(java.time.temporal.TemporalField,long)>
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate with(java.time.temporal.TemporalField,long)>/switch/instruction28	28	<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate with(java.time.temporal.TemporalField,long)>/$stack25	<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate with(java.time.temporal.TemporalField,long)>
<sun.security.ssl.SignatureAndHashAlgorithm$HashAlgorithm: sun.security.ssl.SignatureAndHashAlgorithm$HashAlgorithm valueOf(int)>/switch/instruction3	3	<sun.security.ssl.SignatureAndHashAlgorithm$HashAlgorithm: sun.security.ssl.SignatureAndHashAlgorithm$HashAlgorithm valueOf(int)>/l0#_0	<sun.security.ssl.SignatureAndHashAlgorithm$HashAlgorithm: sun.security.ssl.SignatureAndHashAlgorithm$HashAlgorithm valueOf(int)>
<sun.security.ssl.SupportedEllipticPointFormatsExtension: java.lang.String toString(byte)>/switch/instruction3	3	<sun.security.ssl.SupportedEllipticPointFormatsExtension: java.lang.String toString(byte)>/l1#_83	<sun.security.ssl.SupportedEllipticPointFormatsExtension: java.lang.String toString(byte)>
<java.lang.reflect.Proxy$KeyFactory: java.lang.Object apply(java.lang.ClassLoader,java.lang.Class[])>/switch/instruction5	5	<java.lang.reflect.Proxy$KeyFactory: java.lang.Object apply(java.lang.ClassLoader,java.lang.Class[])>/$stack3	<java.lang.reflect.Proxy$KeyFactory: java.lang.Object apply(java.lang.ClassLoader,java.lang.Class[])>
<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType basicType(char)>/switch/instruction2	2	<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType basicType(char)>/l0#_0	<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType basicType(char)>
<java.lang.ConditionalSpecialCasing: boolean isConditionMet(java.lang.String,int,java.util.Locale,int)>/switch/instruction5	5	<java.lang.ConditionalSpecialCasing: boolean isConditionMet(java.lang.String,int,java.util.Locale,int)>/l3#_0	<java.lang.ConditionalSpecialCasing: boolean isConditionMet(java.lang.String,int,java.util.Locale,int)>
<sun.net.www.http.ChunkedInputStream: void processRaw()>/switch/instruction9	9	<sun.net.www.http.ChunkedInputStream: void processRaw()>/$stack9	<sun.net.www.http.ChunkedInputStream: void processRaw()>
<java.util.JapaneseImperialCalendar: void add(int,int)>/switch/instruction74	74	<java.util.JapaneseImperialCalendar: void add(int,int)>/l1#_0	<java.util.JapaneseImperialCalendar: void add(int,int)>
<sun.security.ssl.Alerts: java.lang.String alertDescription(byte)>/switch/instruction2	2	<sun.security.ssl.Alerts: java.lang.String alertDescription(byte)>/l0#_0	<sun.security.ssl.Alerts: java.lang.String alertDescription(byte)>
<sun.security.ssl.Alerts: javax.net.ssl.SSLException getSSLException(byte,java.lang.Throwable,java.lang.String)>/switch/instruction12	12	<sun.security.ssl.Alerts: javax.net.ssl.SSLException getSSLException(byte,java.lang.Throwable,java.lang.String)>/l0#_0	<sun.security.ssl.Alerts: javax.net.ssl.SSLException getSSLException(byte,java.lang.Throwable,java.lang.String)>
<java.util.Calendar$Builder: java.util.Calendar build()>/switch/instruction61	61	<java.util.Calendar$Builder: java.util.Calendar build()>/l3_$$A_5#_1481	<java.util.Calendar$Builder: java.util.Calendar build()>
<java.util.JapaneseImperialCalendar: void roll(int,int)>/switch/instruction14	14	<java.util.JapaneseImperialCalendar: void roll(int,int)>/l1#_0	<java.util.JapaneseImperialCalendar: void roll(int,int)>
<jdk.internal.org.objectweb.asm.TypePath: java.lang.String toString()>/switch/instruction12	12	<jdk.internal.org.objectweb.asm.TypePath: java.lang.String toString()>/$stack8	<jdk.internal.org.objectweb.asm.TypePath: java.lang.String toString()>
<java.lang.invoke.AbstractValidatingLambdaMetafactory: void validateMetafactoryArgs()>/switch/instruction3	3	<java.lang.invoke.AbstractValidatingLambdaMetafactory: void validateMetafactoryArgs()>/$stack17	<java.lang.invoke.AbstractValidatingLambdaMetafactory: void validateMetafactoryArgs()>
<java.util.JapaneseImperialCalendar: int getActualMinimum(int)>/switch/instruction15	15	<java.util.JapaneseImperialCalendar: int getActualMinimum(int)>/l1#_0	<java.util.JapaneseImperialCalendar: int getActualMinimum(int)>
<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>/switch/instruction12	12	<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>/l1#_0	<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>
<sun.security.ssl.X509KeyManagerImpl$CheckType: sun.security.ssl.X509KeyManagerImpl$CheckResult check(java.security.cert.X509Certificate,java.util.Date,java.util.List,java.lang.String)>/switch/instruction55	55	<sun.security.ssl.X509KeyManagerImpl$CheckType: sun.security.ssl.X509KeyManagerImpl$CheckResult check(java.security.cert.X509Certificate,java.util.Date,java.util.List,java.lang.String)>/l10_$$A_5#_574	<sun.security.ssl.X509KeyManagerImpl$CheckType: sun.security.ssl.X509KeyManagerImpl$CheckResult check(java.security.cert.X509Certificate,java.util.Date,java.util.List,java.lang.String)>
<java.io.StreamTokenizer: int nextToken()>/switch/instruction281	281	<java.io.StreamTokenizer: int nextToken()>/l2_$$A_20#_645	<java.io.StreamTokenizer: int nextToken()>
<java.io.StreamTokenizer: java.lang.String toString()>/switch/instruction3	3	<java.io.StreamTokenizer: java.lang.String toString()>/$stack3	<java.io.StreamTokenizer: java.lang.String toString()>
<java.io.ObjectInputStream: java.lang.Object readObject0(boolean)>/switch/instruction35	35	<java.io.ObjectInputStream: java.lang.Object readObject0(boolean)>/l3#9#_1502	<java.io.ObjectInputStream: java.lang.Object readObject0(boolean)>
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/switch/instruction132	132	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/l9#27_$$A_6#_2418	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>
<java.io.ObjectInputStream: void skipCustomData()>/switch/instruction13	13	<java.io.ObjectInputStream: void skipCustomData()>/$stack5	<java.io.ObjectInputStream: void skipCustomData()>
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plus(long,java.time.temporal.TemporalUnit)>/switch/instruction10	10	<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plus(long,java.time.temporal.TemporalUnit)>/$stack12	<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plus(long,java.time.temporal.TemporalUnit)>
<java.time.chrono.ChronoLocalDateTimeImpl: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/switch/instruction22	22	<java.time.chrono.ChronoLocalDateTimeImpl: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/$stack32	<java.time.chrono.ChronoLocalDateTimeImpl: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>/switch/instruction6	6	<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>/l1#_0	<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>
<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>/switch/instruction30	30	<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>/l2#_0	<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>
<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>/switch/instruction93	93	<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>/l2#_0	<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>
<java.util.GregorianCalendar: void add(int,int)>/switch/instruction125	125	<java.util.GregorianCalendar: void add(int,int)>/l1#_0	<java.util.GregorianCalendar: void add(int,int)>
<java.util.GregorianCalendar: void roll(int,int)>/switch/instruction14	14	<java.util.GregorianCalendar: void roll(int,int)>/l1#_0	<java.util.GregorianCalendar: void roll(int,int)>
<java.util.GregorianCalendar: int getMaximum(int)>/switch/instruction3	3	<java.util.GregorianCalendar: int getMaximum(int)>/l1#_0	<java.util.GregorianCalendar: int getMaximum(int)>
<java.util.GregorianCalendar: int getLeastMaximum(int)>/switch/instruction3	3	<java.util.GregorianCalendar: int getLeastMaximum(int)>/l1#_0	<java.util.GregorianCalendar: int getLeastMaximum(int)>
<java.util.GregorianCalendar: int getActualMaximum(int)>/switch/instruction13	13	<java.util.GregorianCalendar: int getActualMaximum(int)>/l1#_0	<java.util.GregorianCalendar: int getActualMaximum(int)>
<java.math.RoundingMode: java.math.RoundingMode valueOf(int)>/switch/instruction2	2	<java.math.RoundingMode: java.math.RoundingMode valueOf(int)>/l0#_0	<java.math.RoundingMode: java.math.RoundingMode valueOf(int)>
<sun.security.ssl.SSLSocketImpl: void writeRecord(sun.security.ssl.OutputRecord,boolean)>/switch/instruction7	7	<sun.security.ssl.SSLSocketImpl: void writeRecord(sun.security.ssl.OutputRecord,boolean)>/$stack40	<sun.security.ssl.SSLSocketImpl: void writeRecord(sun.security.ssl.OutputRecord,boolean)>
<sun.security.ssl.SSLSocketImpl: void readRecord(sun.security.ssl.InputRecord,boolean)>/switch/instruction133	133	<sun.security.ssl.SSLSocketImpl: void readRecord(sun.security.ssl.InputRecord,boolean)>/$stack20	<sun.security.ssl.SSLSocketImpl: void readRecord(sun.security.ssl.InputRecord,boolean)>
<sun.security.ssl.SSLSocketImpl: void initHandshaker()>/switch/instruction3	3	<sun.security.ssl.SSLSocketImpl: void initHandshaker()>/$stack1	<sun.security.ssl.SSLSocketImpl: void initHandshaker()>
<sun.security.ssl.SSLSocketImpl: void kickstartHandshake()>/switch/instruction3	3	<sun.security.ssl.SSLSocketImpl: void kickstartHandshake()>/$stack1	<sun.security.ssl.SSLSocketImpl: void kickstartHandshake()>
<sun.security.ssl.SSLSocketImpl: boolean checkEOF()>/switch/instruction3	3	<sun.security.ssl.SSLSocketImpl: boolean checkEOF()>/$stack2	<sun.security.ssl.SSLSocketImpl: boolean checkEOF()>
<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/switch/instruction24	24	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/l2#_1622	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>
<sun.security.x509.X509CertInfo: void set(java.lang.String,java.lang.Object)>/switch/instruction22	22	<sun.security.x509.X509CertInfo: void set(java.lang.String,java.lang.Object)>/l4#_368	<sun.security.x509.X509CertInfo: void set(java.lang.String,java.lang.Object)>
<sun.security.x509.X509CertInfo: void delete(java.lang.String)>/switch/instruction21	21	<sun.security.x509.X509CertInfo: void delete(java.lang.String)>/l3#_457	<sun.security.x509.X509CertInfo: void delete(java.lang.String)>
<java.security.Signature: java.lang.String toString()>/switch/instruction4	4	<java.security.Signature: java.lang.String toString()>/$stack2	<java.security.Signature: java.lang.String toString()>
<sun.security.x509.X509CertInfo: java.lang.Object get(java.lang.String)>/switch/instruction19	19	<sun.security.x509.X509CertInfo: java.lang.Object get(java.lang.String)>/l3#_537	<sun.security.x509.X509CertInfo: java.lang.Object get(java.lang.String)>
<java.time.LocalDate: java.time.LocalDate create(int,int,int)>/switch/instruction6	6	<java.time.LocalDate: java.time.LocalDate create(int,int,int)>/l1#_0	<java.time.LocalDate: java.time.LocalDate create(int,int,int)>
<java.time.LocalDate: java.time.LocalDate resolvePreviousValid(int,int,int)>/switch/instruction4	4	<java.time.LocalDate: java.time.LocalDate resolvePreviousValid(int,int,int)>/l1#_0	<java.time.LocalDate: java.time.LocalDate resolvePreviousValid(int,int,int)>
<java.time.LocalDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/switch/instruction11	11	<java.time.LocalDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/$stack13	<java.time.LocalDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.LocalDate: int get0(java.time.temporal.TemporalField)>/switch/instruction7	7	<java.time.LocalDate: int get0(java.time.temporal.TemporalField)>/$stack5	<java.time.LocalDate: int get0(java.time.temporal.TemporalField)>
<java.time.LocalDate: int lengthOfMonth()>/switch/instruction3	3	<java.time.LocalDate: int lengthOfMonth()>/$stack1	<java.time.LocalDate: int lengthOfMonth()>
<java.time.LocalDate: java.time.LocalDate with(java.time.temporal.TemporalField,long)>/switch/instruction11	11	<java.time.LocalDate: java.time.LocalDate with(java.time.temporal.TemporalField,long)>/$stack11	<java.time.LocalDate: java.time.LocalDate with(java.time.temporal.TemporalField,long)>
<java.time.LocalDate: java.time.LocalDate plus(long,java.time.temporal.TemporalUnit)>/switch/instruction10	10	<java.time.LocalDate: java.time.LocalDate plus(long,java.time.temporal.TemporalUnit)>/$stack10	<java.time.LocalDate: java.time.LocalDate plus(long,java.time.temporal.TemporalUnit)>
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String getName(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,int,java.lang.String)>/switch/instruction32	32	<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String getName(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,int,java.lang.String)>/l7_$$A_4#_239	<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String getName(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,int,java.lang.String)>
<java.time.LocalDate: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/switch/instruction11	11	<java.time.LocalDate: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/$stack10	<java.time.LocalDate: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<sun.text.normalizer.NormalizerBase: java.lang.String normalize(java.lang.String,java.text.Normalizer$Form,int)>/switch/instruction43	43	<sun.text.normalizer.NormalizerBase: java.lang.String normalize(java.lang.String,java.text.Normalizer$Form,int)>/$stack11	<sun.text.normalizer.NormalizerBase: java.lang.String normalize(java.lang.String,java.text.Normalizer$Form,int)>
<sun.text.normalizer.NormalizerBase: boolean isNormalized(java.lang.String,java.text.Normalizer$Form,int)>/switch/instruction7	7	<sun.text.normalizer.NormalizerBase: boolean isNormalized(java.lang.String,java.text.Normalizer$Form,int)>/$stack5	<sun.text.normalizer.NormalizerBase: boolean isNormalized(java.lang.String,java.text.Normalizer$Form,int)>
<java.time.format.DateTimeTextProvider: java.util.Iterator getTextIterator(java.time.chrono.Chronology,java.time.temporal.TemporalField,java.time.format.TextStyle,java.util.Locale)>/switch/instruction16	16	<java.time.format.DateTimeTextProvider: java.util.Iterator getTextIterator(java.time.chrono.Chronology,java.time.temporal.TemporalField,java.time.format.TextStyle,java.util.Locale)>/$stack18	<java.time.format.DateTimeTextProvider: java.util.Iterator getTextIterator(java.time.chrono.Chronology,java.time.temporal.TemporalField,java.time.format.TextStyle,java.util.Locale)>
<sun.security.x509.AVA: boolean isDerString(sun.security.util.DerValue,boolean)>/switch/instruction11	11	<sun.security.x509.AVA: boolean isDerString(sun.security.util.DerValue,boolean)>/$stack2	<sun.security.x509.AVA: boolean isDerString(sun.security.util.DerValue,boolean)>
<java.time.Year: long getLong(java.time.temporal.TemporalField)>/switch/instruction9	9	<java.time.Year: long getLong(java.time.temporal.TemporalField)>/$stack7	<java.time.Year: long getLong(java.time.temporal.TemporalField)>
<java.time.Year: java.time.Year with(java.time.temporal.TemporalField,long)>/switch/instruction11	11	<java.time.Year: java.time.Year with(java.time.temporal.TemporalField,long)>/$stack11	<java.time.Year: java.time.Year with(java.time.temporal.TemporalField,long)>
<java.time.Year: java.time.Year plus(long,java.time.temporal.TemporalUnit)>/switch/instruction10	10	<java.time.Year: java.time.Year plus(long,java.time.temporal.TemporalUnit)>/$stack10	<java.time.Year: java.time.Year plus(long,java.time.temporal.TemporalUnit)>
<java.time.Year: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/switch/instruction16	16	<java.time.Year: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/$stack16	<java.time.Year: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getType(char[],int)>/switch/instruction4	4	<jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getType(char[],int)>/$stack3	<jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type getType(char[],int)>
<jdk.internal.org.objectweb.asm.Type: java.lang.String getClassName()>/switch/instruction3	3	<jdk.internal.org.objectweb.asm.Type: java.lang.String getClassName()>/$stack3	<jdk.internal.org.objectweb.asm.Type: java.lang.String getClassName()>
<sun.security.x509.GeneralName: void <init>(sun.security.util.DerValue,boolean)>/switch/instruction11	11	<sun.security.x509.GeneralName: void <init>(sun.security.util.DerValue,boolean)>/l3#_87	<sun.security.x509.GeneralName: void <init>(sun.security.util.DerValue,boolean)>
<java.time.chrono.HijrahChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>/switch/instruction10	10	<java.time.chrono.HijrahChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>/$stack7	<java.time.chrono.HijrahChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<sun.security.x509.AVAKeyword: boolean isCompliant(int)>/switch/instruction3	3	<sun.security.x509.AVAKeyword: boolean isCompliant(int)>/l1#_0	<sun.security.x509.AVAKeyword: boolean isCompliant(int)>
<java.time.chrono.HijrahChronology: void loadCalendarData()>/switch/instruction83	83	<java.time.chrono.HijrahChronology: void loadCalendarData()>/l14_$$A_6#_922	<java.time.chrono.HijrahChronology: void loadCalendarData()>
<java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)>/switch/instruction18	18	<java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)>/$stack16	<java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)>
<sun.security.ssl.SSLEngineImpl: void initHandshaker()>/switch/instruction3	3	<sun.security.ssl.SSLEngineImpl: void initHandshaker()>/$stack1	<sun.security.ssl.SSLEngineImpl: void initHandshaker()>
<sun.security.ssl.SSLEngineImpl: void kickstartHandshake()>/switch/instruction3	3	<sun.security.ssl.SSLEngineImpl: void kickstartHandshake()>/$stack1	<sun.security.ssl.SSLEngineImpl: void kickstartHandshake()>
<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus readRecord(sun.security.ssl.EngineArgs)>/switch/instruction48	48	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus readRecord(sun.security.ssl.EngineArgs)>/$stack18	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus readRecord(sun.security.ssl.EngineArgs)>
<sun.security.ssl.SSLAlgorithmDecomposer: java.util.Set decomposes(sun.security.ssl.CipherSuite$KeyExchange)>/switch/instruction9	9	<sun.security.ssl.SSLAlgorithmDecomposer: java.util.Set decomposes(sun.security.ssl.CipherSuite$KeyExchange)>/$stack6	<sun.security.ssl.SSLAlgorithmDecomposer: java.util.Set decomposes(sun.security.ssl.CipherSuite$KeyExchange)>
<java.lang.Shutdown: void exit(int)>/switch/instruction10	10	<java.lang.Shutdown: void exit(int)>/$stack6	<java.lang.Shutdown: void exit(int)>
<java.lang.Shutdown: void shutdown()>/switch/instruction5	5	<java.lang.Shutdown: void shutdown()>/$stack4	<java.lang.Shutdown: void shutdown()>
<java.time.chrono.ThaiBuddhistChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>/switch/instruction6	6	<java.time.chrono.ThaiBuddhistChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>/$stack5	<java.time.chrono.ThaiBuddhistChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<java.security.cert.X509CertSelector: sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int,java.lang.Object)>/switch/instruction27	27	<java.security.cert.X509CertSelector: sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int,java.lang.Object)>/l0#_0	<java.security.cert.X509CertSelector: sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int,java.lang.Object)>
<java.security.cert.X509CertSelector: sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int,java.lang.Object)>/switch/instruction97	97	<java.security.cert.X509CertSelector: sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int,java.lang.Object)>/l0#_0	<java.security.cert.X509CertSelector: sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int,java.lang.Object)>
<java.security.cert.X509CertSelector: java.security.cert.Extension getExtensionObject(java.security.cert.X509Certificate,int)>/switch/instruction6	6	<java.security.cert.X509CertSelector: java.security.cert.Extension getExtensionObject(java.security.cert.X509Certificate,int)>/l1#_0	<java.security.cert.X509CertSelector: java.security.cert.Extension getExtensionObject(java.security.cert.X509Certificate,int)>
<java.security.cert.X509CertSelector: java.security.cert.Extension getExtensionObject(java.security.cert.X509Certificate,int)>/switch/instruction29	29	<java.security.cert.X509CertSelector: java.security.cert.Extension getExtensionObject(java.security.cert.X509Certificate,int)>/l1#_0	<java.security.cert.X509CertSelector: java.security.cert.Extension getExtensionObject(java.security.cert.X509Certificate,int)>
<java.util.stream.SliceOps: java.util.Spliterator sliceSpliterator(java.util.stream.StreamShape,java.util.Spliterator,long,long)>/switch/instruction17	17	<java.util.stream.SliceOps: java.util.Spliterator sliceSpliterator(java.util.stream.StreamShape,java.util.Spliterator,long,long)>/$stack12	<java.util.stream.SliceOps: java.util.Spliterator sliceSpliterator(java.util.stream.StreamShape,java.util.Spliterator,long,long)>
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>/switch/instruction66	66	<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>/$stack24	<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: void <init>(java.lang.String,sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator,int)>/switch/instruction13	13	<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: void <init>(java.lang.String,sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator,int)>/$stack6	<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: void <init>(java.lang.String,sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator,int)>
<java.io.ObjectInputStream$HandleTable: void markDependency(int,int)>/switch/instruction12	12	<java.io.ObjectInputStream$HandleTable: void markDependency(int,int)>/$stack6	<java.io.ObjectInputStream$HandleTable: void markDependency(int,int)>
<java.io.ObjectInputStream$HandleTable: void finish(int)>/switch/instruction22	22	<java.io.ObjectInputStream$HandleTable: void finish(int)>/$stack7	<java.io.ObjectInputStream$HandleTable: void finish(int)>
<java.io.ObjectInputStream$HandleTable: void setObject(int,java.lang.Object)>/switch/instruction6	6	<java.io.ObjectInputStream$HandleTable: void setObject(int,java.lang.Object)>/$stack4	<java.io.ObjectInputStream$HandleTable: void setObject(int,java.lang.Object)>
<sun.security.util.DerValue: sun.security.util.DerInputStream init(byte,java.lang.String)>/switch/instruction5	5	<sun.security.util.DerValue: sun.security.util.DerInputStream init(byte,java.lang.String)>/l1#_0	<sun.security.util.DerValue: sun.security.util.DerInputStream init(byte,java.lang.String)>
<java.lang.invoke.MethodHandles$Lookup: java.lang.String toString()>/switch/instruction5	5	<java.lang.invoke.MethodHandles$Lookup: java.lang.String toString()>/$stack4	<java.lang.invoke.MethodHandles$Lookup: java.lang.String toString()>
<sun.security.util.DerValue: boolean isPrintableStringChar(char)>/switch/instruction10	10	<sun.security.util.DerValue: boolean isPrintableStringChar(char)>/l0#_0	<sun.security.util.DerValue: boolean isPrintableStringChar(char)>
<java.lang.CharacterData: java.lang.CharacterData of(int)>/switch/instruction7	7	<java.lang.CharacterData: java.lang.CharacterData of(int)>/$stack2	<java.lang.CharacterData: java.lang.CharacterData of(int)>
<sun.security.provider.NativePRNG$1: sun.security.provider.NativePRNG$RandomIO run()>/switch/instruction6	6	<sun.security.provider.NativePRNG$1: sun.security.provider.NativePRNG$RandomIO run()>/$stack9	<sun.security.provider.NativePRNG$1: sun.security.provider.NativePRNG$RandomIO run()>
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/switch/instruction21	21	<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/$stack20	<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>
<java.time.LocalDateTime: java.time.LocalDateTime plus(long,java.time.temporal.TemporalUnit)>/switch/instruction10	10	<java.time.LocalDateTime: java.time.LocalDateTime plus(long,java.time.temporal.TemporalUnit)>/$stack10	<java.time.LocalDateTime: java.time.LocalDateTime plus(long,java.time.temporal.TemporalUnit)>
<java.security.Signature$Delegate: void init(java.security.SignatureSpi,int,java.security.Key,java.security.SecureRandom)>/switch/instruction6	6	<java.security.Signature$Delegate: void init(java.security.SignatureSpi,int,java.security.Key,java.security.SecureRandom)>/l2#_0	<java.security.Signature$Delegate: void init(java.security.SignatureSpi,int,java.security.Key,java.security.SecureRandom)>
<java.time.LocalDateTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/switch/instruction38	38	<java.time.LocalDateTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/$stack43	<java.time.LocalDateTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/switch/instruction157	157	<java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/l26_$$A_2#_3193	<java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
<sun.invoke.util.Wrapper: java.lang.Object wrap(java.lang.Object)>/switch/instruction10	10	<sun.invoke.util.Wrapper: java.lang.Object wrap(java.lang.Object)>/$stack5	<sun.invoke.util.Wrapper: java.lang.Object wrap(java.lang.Object)>
<sun.invoke.util.Wrapper: java.lang.Object wrap(int)>/switch/instruction8	8	<sun.invoke.util.Wrapper: java.lang.Object wrap(int)>/$stack3	<sun.invoke.util.Wrapper: java.lang.Object wrap(int)>
<java.util.stream.Nodes: java.util.stream.Node emptyNode(java.util.stream.StreamShape)>/switch/instruction5	5	<java.util.stream.Nodes: java.util.stream.Node emptyNode(java.util.stream.StreamShape)>/$stack3	<java.util.stream.Nodes: java.util.stream.Node emptyNode(java.util.stream.StreamShape)>
<java.util.stream.Nodes: java.util.stream.Node conc(java.util.stream.StreamShape,java.util.stream.Node,java.util.stream.Node)>/switch/instruction7	7	<java.util.stream.Nodes: java.util.stream.Node conc(java.util.stream.StreamShape,java.util.stream.Node,java.util.stream.Node)>/$stack5	<java.util.stream.Nodes: java.util.stream.Node conc(java.util.stream.StreamShape,java.util.stream.Node,java.util.stream.Node)>
<sun.security.timestamp.TSResponse: java.lang.String getStatusCodeAsText()>/switch/instruction3	3	<sun.security.timestamp.TSResponse: java.lang.String getStatusCodeAsText()>/$stack1	<sun.security.timestamp.TSResponse: java.lang.String getStatusCodeAsText()>
<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedLambdaForm(java.lang.invoke.MemberName)>/switch/instruction19	19	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedLambdaForm(java.lang.invoke.MemberName)>/$stack8	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedLambdaForm(java.lang.invoke.MemberName)>
<java.lang.invoke.MemberName: boolean referenceKindIsConsistentWith(int)>/switch/instruction7	7	<java.lang.invoke.MemberName: boolean referenceKindIsConsistentWith(int)>/l1#_0	<java.lang.invoke.MemberName: boolean referenceKindIsConsistentWith(int)>
<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/switch/instruction17	17	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/l1#_0	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>
<sun.security.ssl.SignatureAndHashAlgorithm$SignatureAlgorithm: sun.security.ssl.SignatureAndHashAlgorithm$SignatureAlgorithm valueOf(int)>/switch/instruction3	3	<sun.security.ssl.SignatureAndHashAlgorithm$SignatureAlgorithm: sun.security.ssl.SignatureAndHashAlgorithm$SignatureAlgorithm valueOf(int)>/l0#_0	<sun.security.ssl.SignatureAndHashAlgorithm$SignatureAlgorithm: sun.security.ssl.SignatureAndHashAlgorithm$SignatureAlgorithm valueOf(int)>
<java.lang.invoke.DirectMethodHandle: boolean shouldBeInitialized(java.lang.invoke.MemberName)>/switch/instruction3	3	<java.lang.invoke.DirectMethodHandle: boolean shouldBeInitialized(java.lang.invoke.MemberName)>/$stack2	<java.lang.invoke.DirectMethodHandle: boolean shouldBeInitialized(java.lang.invoke.MemberName)>
<java.lang.invoke.MemberName: java.lang.invoke.MemberName asSpecial()>/switch/instruction3	3	<java.lang.invoke.MemberName: java.lang.invoke.MemberName asSpecial()>/$stack1	<java.lang.invoke.MemberName: java.lang.invoke.MemberName asSpecial()>
<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedFieldLambdaForm(java.lang.invoke.MemberName)>/switch/instruction5	5	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedFieldLambdaForm(java.lang.invoke.MemberName)>/$stack7	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedFieldLambdaForm(java.lang.invoke.MemberName)>
<java.lang.invoke.MemberName: java.lang.invoke.MemberName asNormalOriginal()>/switch/instruction14	14	<java.lang.invoke.MemberName: java.lang.invoke.MemberName asNormalOriginal()>/l2#_582	<java.lang.invoke.MemberName: java.lang.invoke.MemberName asNormalOriginal()>
<java.lang.invoke.MethodHandles: java.lang.invoke.BoundMethodHandle insertArgumentPrimitive(java.lang.invoke.BoundMethodHandle,int,java.lang.Class,java.lang.Object)>/switch/instruction10	10	<java.lang.invoke.MethodHandles: java.lang.invoke.BoundMethodHandle insertArgumentPrimitive(java.lang.invoke.BoundMethodHandle,int,java.lang.Class,java.lang.Object)>/$stack9	<java.lang.invoke.MethodHandles: java.lang.invoke.BoundMethodHandle insertArgumentPrimitive(java.lang.invoke.BoundMethodHandle,int,java.lang.Class,java.lang.Object)>
<jdk.internal.org.objectweb.asm.MethodWriter: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>/switch/instruction133	133	<jdk.internal.org.objectweb.asm.MethodWriter: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>/l1#_0	<jdk.internal.org.objectweb.asm.MethodWriter: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>
<jdk.internal.org.objectweb.asm.MethodWriter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>/switch/instruction23	23	<jdk.internal.org.objectweb.asm.MethodWriter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>/l1#_0	<jdk.internal.org.objectweb.asm.MethodWriter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>
<jdk.internal.org.objectweb.asm.MethodWriter: void visitImplicitFirstFrame()>/switch/instruction42	42	<jdk.internal.org.objectweb.asm.MethodWriter: void visitImplicitFirstFrame()>/$stack13	<jdk.internal.org.objectweb.asm.MethodWriter: void visitImplicitFirstFrame()>
<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrame()>/switch/instruction44	44	<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrame()>/l5_$$A_1#_1905	<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrame()>
<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>/switch/instruction66	66	<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>/$stack11	<jdk.internal.org.objectweb.asm.MethodWriter: void writeFrameTypes(int,int)>
<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/switch/instruction58	58	<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/$stack186	<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>
<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/switch/instruction307	307	<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/$stack89	<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>
<sun.misc.BASE64Decoder: void decodeAtom(java.io.PushbackInputStream,java.io.OutputStream,int)>/switch/instruction51	51	<sun.misc.BASE64Decoder: void decodeAtom(java.io.PushbackInputStream,java.io.OutputStream,int)>/l3_$$A_4#_133	<sun.misc.BASE64Decoder: void decodeAtom(java.io.PushbackInputStream,java.io.OutputStream,int)>
<sun.misc.BASE64Decoder: void decodeAtom(java.io.PushbackInputStream,java.io.OutputStream,int)>/switch/instruction86	86	<sun.misc.BASE64Decoder: void decodeAtom(java.io.PushbackInputStream,java.io.OutputStream,int)>/l3_$$A_4#_133	<sun.misc.BASE64Decoder: void decodeAtom(java.io.PushbackInputStream,java.io.OutputStream,int)>
<java.time.chrono.ChronoLocalDateImpl: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>/switch/instruction10	10	<java.time.chrono.ChronoLocalDateImpl: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>/$stack9	<java.time.chrono.ChronoLocalDateImpl: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
<java.time.chrono.ChronoLocalDateImpl: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/switch/instruction14	14	<java.time.chrono.ChronoLocalDateImpl: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/$stack13	<java.time.chrono.ChronoLocalDateImpl: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<jdk.internal.util.xml.impl.Parser: int step()>/switch/instruction34	34	<jdk.internal.util.xml.impl.Parser: int step()>/l1_$$A_1#_328	<jdk.internal.util.xml.impl.Parser: int step()>
<java.time.YearMonth: long getLong(java.time.temporal.TemporalField)>/switch/instruction9	9	<java.time.YearMonth: long getLong(java.time.temporal.TemporalField)>/$stack7	<java.time.YearMonth: long getLong(java.time.temporal.TemporalField)>
<jdk.internal.util.xml.impl.Parser: void dtd()>/switch/instruction61	61	<jdk.internal.util.xml.impl.Parser: void dtd()>/l5_$$A_1#_527	<jdk.internal.util.xml.impl.Parser: void dtd()>
<java.time.YearMonth: java.time.YearMonth with(java.time.temporal.TemporalField,long)>/switch/instruction11	11	<java.time.YearMonth: java.time.YearMonth with(java.time.temporal.TemporalField,long)>/$stack11	<java.time.YearMonth: java.time.YearMonth with(java.time.temporal.TemporalField,long)>
<java.time.YearMonth: java.time.YearMonth plus(long,java.time.temporal.TemporalUnit)>/switch/instruction10	10	<java.time.YearMonth: java.time.YearMonth plus(long,java.time.temporal.TemporalUnit)>/$stack10	<java.time.YearMonth: java.time.YearMonth plus(long,java.time.temporal.TemporalUnit)>
<java.time.YearMonth: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/switch/instruction14	14	<java.time.YearMonth: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/$stack14	<java.time.YearMonth: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<jdk.internal.util.xml.impl.Parser: void dtdatt(jdk.internal.util.xml.impl.Pair)>/switch/instruction67	67	<jdk.internal.util.xml.impl.Parser: void dtdatt(jdk.internal.util.xml.impl.Pair)>/l5_$$A_1#_1045	<jdk.internal.util.xml.impl.Parser: void dtdatt(jdk.internal.util.xml.impl.Pair)>
<jdk.internal.util.xml.impl.Parser: java.lang.String atype(jdk.internal.util.xml.impl.Pair)>/switch/instruction22	22	<jdk.internal.util.xml.impl.Parser: java.lang.String atype(jdk.internal.util.xml.impl.Pair)>/$stack11	<jdk.internal.util.xml.impl.Parser: java.lang.String atype(jdk.internal.util.xml.impl.Pair)>
<jdk.internal.util.xml.impl.Parser: void comm()>/switch/instruction48	48	<jdk.internal.util.xml.impl.Parser: void comm()>/l2_$$A_1#_1500	<jdk.internal.util.xml.impl.Parser: void comm()>
<jdk.internal.util.xml.impl.Parser: void pi()>/switch/instruction29	29	<jdk.internal.util.xml.impl.Parser: void pi()>/l3_$$A_1#_1576	<jdk.internal.util.xml.impl.Parser: void pi()>
<jdk.internal.util.xml.impl.Parser: void cdat()>/switch/instruction21	21	<jdk.internal.util.xml.impl.Parser: void cdat()>/l2_$$A_1#_1664	<jdk.internal.util.xml.impl.Parser: void cdat()>
<jdk.internal.util.xml.impl.Parser: java.lang.String ent(char)>/switch/instruction105	105	<jdk.internal.util.xml.impl.Parser: java.lang.String ent(char)>/l6_$$A_1#_1891	<jdk.internal.util.xml.impl.Parser: java.lang.String ent(char)>
<jdk.internal.util.xml.impl.Parser: void bname(boolean)>/switch/instruction103	103	<jdk.internal.util.xml.impl.Parser: void bname(boolean)>/l9_$$A_1#_2333	<jdk.internal.util.xml.impl.Parser: void bname(boolean)>
<jdk.internal.util.xml.impl.Parser: void bname(boolean)>/switch/instruction118	118	<jdk.internal.util.xml.impl.Parser: void bname(boolean)>/l3_$$A_3#_2348	<jdk.internal.util.xml.impl.Parser: void bname(boolean)>
<jdk.internal.util.xml.impl.Parser: char bkeyword()>/switch/instruction9	9	<jdk.internal.util.xml.impl.Parser: char bkeyword()>/$stack5	<jdk.internal.util.xml.impl.Parser: char bkeyword()>
<jdk.internal.util.xml.impl.Parser: void bqstr(char)>/switch/instruction74	74	<jdk.internal.util.xml.impl.Parser: void bqstr(char)>/l4_$$A_1#_2538	<jdk.internal.util.xml.impl.Parser: void bqstr(char)>
<jdk.internal.util.xml.impl.Parser: void bappend(char,char)>/switch/instruction16	16	<jdk.internal.util.xml.impl.Parser: void bappend(char,char)>/l1#_0	<jdk.internal.util.xml.impl.Parser: void bappend(char,char)>
<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>/switch/instruction223	223	<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>/l6_$$A_2#_2984	<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>
<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>/switch/instruction369	369	<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>/l6#32_$$A_1#_3080	<jdk.internal.util.xml.impl.Parser: java.lang.String xml(java.io.Reader)>
<jdk.internal.org.objectweb.asm.Frame: int type(jdk.internal.org.objectweb.asm.ClassWriter,java.lang.String)>/switch/instruction15	15	<jdk.internal.org.objectweb.asm.Frame: int type(jdk.internal.org.objectweb.asm.ClassWriter,java.lang.String)>/$stack7	<jdk.internal.org.objectweb.asm.Frame: int type(jdk.internal.org.objectweb.asm.ClassWriter,java.lang.String)>
<jdk.internal.org.objectweb.asm.Frame: int type(jdk.internal.org.objectweb.asm.ClassWriter,java.lang.String)>/switch/instruction41	41	<jdk.internal.org.objectweb.asm.Frame: int type(jdk.internal.org.objectweb.asm.ClassWriter,java.lang.String)>/$stack16	<jdk.internal.org.objectweb.asm.Frame: int type(jdk.internal.org.objectweb.asm.ClassWriter,java.lang.String)>
<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>/switch/instruction6	6	<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>/l1#_0	<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>
<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>/switch/instruction28	28	<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>/$stack88	<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>
<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>/switch/instruction309	309	<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>/l2#_0	<jdk.internal.org.objectweb.asm.Frame: void execute(int,int,jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Item)>
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/switch/instruction11	11	<java.time.chrono.ThaiBuddhistDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/$stack16	<java.time.chrono.ThaiBuddhistDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.chrono.ThaiBuddhistDate: long getLong(java.time.temporal.TemporalField)>/switch/instruction9	9	<java.time.chrono.ThaiBuddhistDate: long getLong(java.time.temporal.TemporalField)>/$stack8	<java.time.chrono.ThaiBuddhistDate: long getLong(java.time.temporal.TemporalField)>
<java.time.ZoneOffset: java.time.ZoneOffset of(java.lang.String)>/switch/instruction10	10	<java.time.ZoneOffset: java.time.ZoneOffset of(java.lang.String)>/$stack9	<java.time.ZoneOffset: java.time.ZoneOffset of(java.lang.String)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate with(java.time.temporal.TemporalField,long)>/switch/instruction14	14	<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate with(java.time.temporal.TemporalField,long)>/$stack13	<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate with(java.time.temporal.TemporalField,long)>
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate with(java.time.temporal.TemporalField,long)>/switch/instruction28	28	<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate with(java.time.temporal.TemporalField,long)>/$stack25	<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate with(java.time.temporal.TemporalField,long)>
<java.text.BreakIterator: java.text.BreakIterator createBreakInstance(sun.util.locale.provider.LocaleProviderAdapter,java.util.Locale,int)>/switch/instruction6	6	<java.text.BreakIterator: java.text.BreakIterator createBreakInstance(sun.util.locale.provider.LocaleProviderAdapter,java.util.Locale,int)>/l2#_0	<java.text.BreakIterator: java.text.BreakIterator createBreakInstance(sun.util.locale.provider.LocaleProviderAdapter,java.util.Locale,int)>
<java.util.Map$Entry: java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)>/switch/instruction34	34	<java.util.Map$Entry: java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)>/l2_$$A_5#_376	<java.util.Map$Entry: java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)>
<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator of(java.lang.String)>/switch/instruction48	48	<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator of(java.lang.String)>/l2_$$A_7#_391	<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator of(java.lang.String)>
<java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator: int invocationOpcode()>/switch/instruction4	4	<java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator: int invocationOpcode()>/$stack2	<java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator: int invocationOpcode()>
<java.lang.invoke.MethodHandleNatives: java.lang.String refKindName(byte)>/switch/instruction9	9	<java.lang.invoke.MethodHandleNatives: java.lang.String refKindName(byte)>/l0#_0	<java.lang.invoke.MethodHandleNatives: java.lang.String refKindName(byte)>
<java.time.OffsetTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/switch/instruction14	14	<java.time.OffsetTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/$stack14	<java.time.OffsetTime: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<javax.crypto.Cipher: void implInit(javax.crypto.CipherSpi,int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>/switch/instruction9	9	<javax.crypto.Cipher: void implInit(javax.crypto.CipherSpi,int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>/l2#_0	<javax.crypto.Cipher: void implInit(javax.crypto.CipherSpi,int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>
<javax.crypto.Cipher: java.lang.String getOpmodeString(int)>/switch/instruction2	2	<javax.crypto.Cipher: java.lang.String getOpmodeString(int)>/l0#_0	<javax.crypto.Cipher: java.lang.String getOpmodeString(int)>
<sun.misc.FormattedFloatingDecimal: void <init>(int,sun.misc.FormattedFloatingDecimal$Form,sun.misc.FloatingDecimal$BinaryToASCIIConverter)>/switch/instruction21	21	<sun.misc.FormattedFloatingDecimal: void <init>(int,sun.misc.FormattedFloatingDecimal$Form,sun.misc.FloatingDecimal$BinaryToASCIIConverter)>/$stack16	<sun.misc.FormattedFloatingDecimal: void <init>(int,sun.misc.FormattedFloatingDecimal$Form,sun.misc.FloatingDecimal$BinaryToASCIIConverter)>
<java.time.Instant: int get(java.time.temporal.TemporalField)>/switch/instruction9	9	<java.time.Instant: int get(java.time.temporal.TemporalField)>/$stack9	<java.time.Instant: int get(java.time.temporal.TemporalField)>
<java.time.Instant: long getLong(java.time.temporal.TemporalField)>/switch/instruction9	9	<java.time.Instant: long getLong(java.time.temporal.TemporalField)>/$stack7	<java.time.Instant: long getLong(java.time.temporal.TemporalField)>
<java.time.Instant: java.time.Instant with(java.time.temporal.TemporalField,long)>/switch/instruction11	11	<java.time.Instant: java.time.Instant with(java.time.temporal.TemporalField,long)>/$stack12	<java.time.Instant: java.time.Instant with(java.time.temporal.TemporalField,long)>
<java.time.Instant: java.time.Instant plus(long,java.time.temporal.TemporalUnit)>/switch/instruction10	10	<java.time.Instant: java.time.Instant plus(long,java.time.temporal.TemporalUnit)>/$stack10	<java.time.Instant: java.time.Instant plus(long,java.time.temporal.TemporalUnit)>
<java.time.Instant: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/switch/instruction11	11	<java.time.Instant: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>/$stack10	<java.time.Instant: long until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)>
<sun.security.ssl.ServerHandshaker: void processMessage(byte,int)>/switch/instruction43	43	<sun.security.ssl.ServerHandshaker: void processMessage(byte,int)>/$stack21	<sun.security.ssl.ServerHandshaker: void processMessage(byte,int)>
<java.io.ObjectStreamClass: void computeFieldOffsets()>/switch/instruction18	18	<java.io.ObjectStreamClass: void computeFieldOffsets()>/$stack13	<java.io.ObjectStreamClass: void computeFieldOffsets()>
<sun.security.ssl.ServerHandshaker: void clientHello(sun.security.ssl.HandshakeMessage$ClientHello)>/switch/instruction563	563	<sun.security.ssl.ServerHandshaker: void clientHello(sun.security.ssl.HandshakeMessage$ClientHello)>/$stack73	<sun.security.ssl.ServerHandshaker: void clientHello(sun.security.ssl.HandshakeMessage$ClientHello)>
<sun.security.ssl.ServerHandshaker: boolean trySetCipherSuite(sun.security.ssl.CipherSuite)>/switch/instruction48	48	<sun.security.ssl.ServerHandshaker: boolean trySetCipherSuite(sun.security.ssl.CipherSuite)>/$stack126	<sun.security.ssl.ServerHandshaker: boolean trySetCipherSuite(sun.security.ssl.CipherSuite)>
<sun.security.ssl.ServerHandshaker: boolean trySetCipherSuite(sun.security.ssl.CipherSuite)>/switch/instruction97	97	<sun.security.ssl.ServerHandshaker: boolean trySetCipherSuite(sun.security.ssl.CipherSuite)>/$stack19	<sun.security.ssl.ServerHandshaker: boolean trySetCipherSuite(sun.security.ssl.CipherSuite)>
<java.nio.file.attribute.FileTime: java.time.Instant toInstant()>/switch/instruction10	10	<java.nio.file.attribute.FileTime: java.time.Instant toInstant()>/$stack9	<java.nio.file.attribute.FileTime: java.time.Instant toInstant()>
<java.time.chrono.HijrahDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/switch/instruction11	11	<java.time.chrono.HijrahDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>/$stack13	<java.time.chrono.HijrahDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.chrono.HijrahDate: long getLong(java.time.temporal.TemporalField)>/switch/instruction9	9	<java.time.chrono.HijrahDate: long getLong(java.time.temporal.TemporalField)>/$stack7	<java.time.chrono.HijrahDate: long getLong(java.time.temporal.TemporalField)>
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate with(java.time.temporal.TemporalField,long)>/switch/instruction14	14	<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate with(java.time.temporal.TemporalField,long)>/$stack14	<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate with(java.time.temporal.TemporalField,long)>
<sun.nio.fs.UnixChannelFactory$Flags: sun.nio.fs.UnixChannelFactory$Flags toFlags(java.util.Set)>/switch/instruction16	16	<sun.nio.fs.UnixChannelFactory$Flags: sun.nio.fs.UnixChannelFactory$Flags toFlags(java.util.Set)>/$stack20	<sun.nio.fs.UnixChannelFactory$Flags: sun.nio.fs.UnixChannelFactory$Flags toFlags(java.util.Set)>
<sun.security.ssl.EngineOutputRecord: int recordSize(byte)>/switch/instruction2	2	<sun.security.ssl.EngineOutputRecord: int recordSize(byte)>/l0#_0	<sun.security.ssl.EngineOutputRecord: int recordSize(byte)>
<sun.security.ssl.EngineOutputRecord: void write(sun.security.ssl.Authenticator,sun.security.ssl.CipherBox)>/switch/instruction5	5	<sun.security.ssl.EngineOutputRecord: void write(sun.security.ssl.Authenticator,sun.security.ssl.CipherBox)>/$stack3	<sun.security.ssl.EngineOutputRecord: void write(sun.security.ssl.Authenticator,sun.security.ssl.CipherBox)>
<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/switch/instruction69	69	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/$stack13	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>
<java.lang.UNIXProcess$Platform: java.lang.String helperPath(java.lang.String,java.lang.String)>/switch/instruction7	7	<java.lang.UNIXProcess$Platform: java.lang.String helperPath(java.lang.String,java.lang.String)>/$stack5	<java.lang.UNIXProcess$Platform: java.lang.String helperPath(java.lang.String,java.lang.String)>
<java.time.chrono.MinguoChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>/switch/instruction6	6	<java.time.chrono.MinguoChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>/$stack5	<java.time.chrono.MinguoChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/switch/instruction13	13	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/l2#_0	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>
<sun.nio.cs.StreamDecoder: int read0()>/switch/instruction16	16	<sun.nio.cs.StreamDecoder: int read0()>/l3#_127	<sun.nio.cs.StreamDecoder: int read0()>
<sun.security.x509.NameConstraintsExtension: boolean verify(sun.security.x509.GeneralNameInterface)>/switch/instruction30	30	<sun.security.x509.NameConstraintsExtension: boolean verify(sun.security.x509.GeneralNameInterface)>/$stack30	<sun.security.x509.NameConstraintsExtension: boolean verify(sun.security.x509.GeneralNameInterface)>
<sun.security.x509.NameConstraintsExtension: boolean verify(sun.security.x509.GeneralNameInterface)>/switch/instruction64	64	<sun.security.x509.NameConstraintsExtension: boolean verify(sun.security.x509.GeneralNameInterface)>/$stack18	<sun.security.x509.NameConstraintsExtension: boolean verify(sun.security.x509.GeneralNameInterface)>
<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>/switch/instruction64	64	<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>/l5#25_$$A_4#_559	<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>
<java.util.regex.Pattern: java.util.regex.Pattern$Node ref(int)>/switch/instruction10	10	<java.util.regex.Pattern: java.util.regex.Pattern$Node ref(int)>/l3#_2255	<java.util.regex.Pattern: java.util.regex.Pattern$Node ref(int)>
<java.util.regex.Pattern: int escape(boolean,boolean,boolean)>/switch/instruction6	6	<java.util.regex.Pattern: int escape(boolean,boolean,boolean)>/l4#_2297	<java.util.regex.Pattern: int escape(boolean,boolean,boolean)>
<sun.security.x509.GeneralSubtrees: void minimize()>/switch/instruction21	21	<sun.security.x509.GeneralSubtrees: void minimize()>/$stack14	<sun.security.x509.GeneralSubtrees: void minimize()>
<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree createWidestSubtree(sun.security.x509.GeneralNameInterface)>/switch/instruction4	4	<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree createWidestSubtree(sun.security.x509.GeneralNameInterface)>/$stack4	<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree createWidestSubtree(sun.security.x509.GeneralNameInterface)>
<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtrees intersect(sun.security.x509.GeneralSubtrees)>/switch/instruction57	57	<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtrees intersect(sun.security.x509.GeneralSubtrees)>/$stack57	<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtrees intersect(sun.security.x509.GeneralSubtrees)>
<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtrees intersect(sun.security.x509.GeneralSubtrees)>/switch/instruction182	182	<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtrees intersect(sun.security.x509.GeneralSubtrees)>/$stack25	<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtrees intersect(sun.security.x509.GeneralSubtrees)>
<sun.security.x509.GeneralSubtrees: void reduce(sun.security.x509.GeneralSubtrees)>/switch/instruction20	20	<sun.security.x509.GeneralSubtrees: void reduce(sun.security.x509.GeneralSubtrees)>/$stack13	<sun.security.x509.GeneralSubtrees: void reduce(sun.security.x509.GeneralSubtrees)>
<java.time.Month: int length(boolean)>/switch/instruction6	6	<java.time.Month: int length(boolean)>/$stack4	<java.time.Month: int length(boolean)>
<java.time.Month: int minLength()>/switch/instruction5	5	<java.time.Month: int minLength()>/$stack3	<java.time.Month: int minLength()>
<java.time.Month: int maxLength()>/switch/instruction5	5	<java.time.Month: int maxLength()>/$stack3	<java.time.Month: int maxLength()>
<java.time.Month: int firstDayOfYear(boolean)>/switch/instruction13	13	<java.time.Month: int firstDayOfYear(boolean)>/$stack5	<java.time.Month: int firstDayOfYear(boolean)>
<jdk.internal.org.objectweb.asm.Item: boolean isEqualTo(jdk.internal.org.objectweb.asm.Item)>/switch/instruction4	4	<jdk.internal.org.objectweb.asm.Item: boolean isEqualTo(jdk.internal.org.objectweb.asm.Item)>/$stack2	<jdk.internal.org.objectweb.asm.Item: boolean isEqualTo(jdk.internal.org.objectweb.asm.Item)>
<java.time.format.SignStyle: boolean parse(boolean,boolean,boolean)>/switch/instruction6	6	<java.time.format.SignStyle: boolean parse(boolean,boolean,boolean)>/$stack4	<java.time.format.SignStyle: boolean parse(boolean,boolean,boolean)>
<java.lang.invoke.BoundMethodHandle: java.lang.invoke.BoundMethodHandle bindSingle(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>/switch/instruction8	8	<java.lang.invoke.BoundMethodHandle: java.lang.invoke.BoundMethodHandle bindSingle(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>/$stack7	<java.lang.invoke.BoundMethodHandle: java.lang.invoke.BoundMethodHandle bindSingle(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>
<java.lang.invoke.BoundMethodHandle: java.lang.Object arg(int)>/switch/instruction8	8	<java.lang.invoke.BoundMethodHandle: java.lang.Object arg(int)>/$stack7	<java.lang.invoke.BoundMethodHandle: java.lang.Object arg(int)>
<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/switch/instruction99	99	<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/l8#12#_1458	<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>
<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/switch/instruction104	104	<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/$stack53	<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>
<java.nio.charset.CoderResult: void throwException()>/switch/instruction3	3	<java.nio.charset.CoderResult: void throwException()>/$stack1	<java.nio.charset.CoderResult: void throwException()>
<java.util.Formatter$DateTime: boolean isValid(char)>/switch/instruction2	2	<java.util.Formatter$DateTime: boolean isValid(char)>/l0#_0	<java.util.Formatter$DateTime: boolean isValid(char)>
<sun.reflect.annotation.AnnotationInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/switch/instruction48	48	<sun.reflect.annotation.AnnotationInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/l7_$$A_4#_69	<sun.reflect.annotation.AnnotationInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>
<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>/switch/instruction58	58	<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>/l4_$$A_6#_184	<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<sun.util.locale.provider.CalendarNameProviderImpl: java.lang.String getResourceKey(java.lang.String,int,int,boolean)>/switch/instruction33	33	<sun.util.locale.provider.CalendarNameProviderImpl: java.lang.String getResourceKey(java.lang.String,int,int,boolean)>/l2#_0	<sun.util.locale.provider.CalendarNameProviderImpl: java.lang.String getResourceKey(java.lang.String,int,int,boolean)>
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/switch/instruction78	78	<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack28	<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>
<sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>/switch/instruction9	9	<sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>/$stack8	<sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>
<java.util.Formatter$Flags: java.util.Formatter$Flags parse(char)>/switch/instruction2	2	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(char)>/l0#_0	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(char)>
<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>/switch/instruction12	12	<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>/l3#_0	<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>/switch/instruction12	12	<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>/l3#_0	<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
<sun.invoke.util.ValueConversions: java.lang.invoke.MethodHandle zeroConstantFunction(sun.invoke.util.Wrapper)>/switch/instruction12	12	<sun.invoke.util.ValueConversions: java.lang.invoke.MethodHandle zeroConstantFunction(sun.invoke.util.Wrapper)>/$stack11	<sun.invoke.util.ValueConversions: java.lang.invoke.MethodHandle zeroConstantFunction(sun.invoke.util.Wrapper)>
<java.lang.invoke.LambdaForm: boolean valueMatches(java.lang.invoke.LambdaForm$BasicType,java.lang.Class,java.lang.Object)>/switch/instruction30	30	<java.lang.invoke.LambdaForm: boolean valueMatches(java.lang.invoke.LambdaForm$BasicType,java.lang.Class,java.lang.Object)>/$stack7	<java.lang.invoke.LambdaForm: boolean valueMatches(java.lang.invoke.LambdaForm$BasicType,java.lang.Class,java.lang.Object)>
<sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>/switch/instruction313	313	<sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>/l19_$$A_5#_1072	<sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>
<sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>/switch/instruction502	502	<sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>/l11_$$A_1#_999	<sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add(int[],int,int)>/switch/instruction30	30	<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add(int[],int,int)>/l3_$$A_1#_1412	<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add(int[],int,int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet retain(int[],int,int)>/switch/instruction30	30	<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet retain(int[],int,int)>/l3_$$A_1#_1510	<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet retain(int[],int,int)>
<java.math.BigDecimal: java.lang.String layoutChars(boolean)>/switch/instruction129	129	<java.math.BigDecimal: java.lang.String layoutChars(boolean)>/l9_$$A_7#_3487	<java.math.BigDecimal: java.lang.String layoutChars(boolean)>
<java.math.BigDecimal: boolean commonNeedIncrement(int,int,int,boolean)>/switch/instruction5	5	<java.math.BigDecimal: boolean commonNeedIncrement(int,int,int,boolean)>/l0#_0	<java.math.BigDecimal: boolean commonNeedIncrement(int,int,int,boolean)>
<java.math.BigDecimal: boolean commonNeedIncrement(int,int,int,boolean)>/switch/instruction54	54	<java.math.BigDecimal: boolean commonNeedIncrement(int,int,int,boolean)>/l0#_0	<java.math.BigDecimal: boolean commonNeedIncrement(int,int,int,boolean)>
<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>/switch/instruction37	37	<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>/$stack18	<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>
<jdk.internal.org.objectweb.asm.ClassReader: void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)>/switch/instruction28	28	<jdk.internal.org.objectweb.asm.ClassReader: void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)>/l7#_323	<jdk.internal.org.objectweb.asm.ClassReader: void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)>
<java.util.SimpleTimeZone: long getTransition(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,int,int,int,int,int)>/switch/instruction13	13	<java.util.SimpleTimeZone: long getTransition(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,int,int,int,int,int)>/l3#_0	<java.util.SimpleTimeZone: long getTransition(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,int,int,int,int,int)>
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/switch/instruction35	35	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/$stack504	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/switch/instruction755	755	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/$stack148	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>
<sun.reflect.annotation.TypeAnnotationParser: sun.reflect.annotation.TypeAnnotation$TypeAnnotationTargetInfo parseTargetInfo(java.nio.ByteBuffer)>/switch/instruction4	4	<sun.reflect.annotation.TypeAnnotationParser: sun.reflect.annotation.TypeAnnotation$TypeAnnotationTargetInfo parseTargetInfo(java.nio.ByteBuffer)>/l1#_410	<sun.reflect.annotation.TypeAnnotationParser: sun.reflect.annotation.TypeAnnotation$TypeAnnotationTargetInfo parseTargetInfo(java.nio.ByteBuffer)>
<java.util.SimpleTimeZone: void makeRulesCompatible()>/switch/instruction3	3	<java.util.SimpleTimeZone: void makeRulesCompatible()>/$stack1	<java.util.SimpleTimeZone: void makeRulesCompatible()>
<java.util.SimpleTimeZone: void makeRulesCompatible()>/switch/instruction28	28	<java.util.SimpleTimeZone: void makeRulesCompatible()>/$stack6	<java.util.SimpleTimeZone: void makeRulesCompatible()>
<java.util.regex.Pattern$Ques: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>/switch/instruction6	6	<java.util.regex.Pattern$Ques: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>/$stack4	<java.util.regex.Pattern$Ques: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/switch/instruction29	29	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/$stack18	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/switch/instruction108	108	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/$stack30	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>
<jdk.internal.org.objectweb.asm.ClassReader: void getImplicitFrame(jdk.internal.org.objectweb.asm.Context)>/switch/instruction37	37	<jdk.internal.org.objectweb.asm.ClassReader: void getImplicitFrame(jdk.internal.org.objectweb.asm.Context)>/$stack10	<jdk.internal.org.objectweb.asm.ClassReader: void getImplicitFrame(jdk.internal.org.objectweb.asm.Context)>
<sun.net.www.MimeEntry: java.lang.Object launch(java.net.URLConnection,java.io.InputStream,sun.net.www.MimeTable)>/switch/instruction6	6	<sun.net.www.MimeEntry: java.lang.Object launch(java.net.URLConnection,java.io.InputStream,sun.net.www.MimeTable)>/$stack6	<sun.net.www.MimeEntry: java.lang.Object launch(java.net.URLConnection,java.io.InputStream,sun.net.www.MimeTable)>
<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>/switch/instruction11	11	<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>/l6#_2155	<jdk.internal.org.objectweb.asm.ClassReader: int readFrameType(java.lang.Object[],int,int,char[],jdk.internal.org.objectweb.asm.Label[])>
<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>/switch/instruction22	22	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>/l8_$$A_1#_2433	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>
<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>/switch/instruction9	9	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>/$stack13	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>/switch/instruction91	91	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>/l3_$$A_13#_87	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] createAvailableLocales()>/switch/instruction70	70	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] createAvailableLocales()>/l8_$$A_5#_418	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] createAvailableLocales()>
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter forType(sun.util.locale.provider.LocaleProviderAdapter$Type)>/switch/instruction5	5	<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter forType(sun.util.locale.provider.LocaleProviderAdapter$Type)>/$stack3	<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter forType(sun.util.locale.provider.LocaleProviderAdapter$Type)>
<java.util.Comparator: java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)>/switch/instruction48	48	<java.util.Comparator: java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)>/l2_$$A_7#_109	<java.util.Comparator: java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)>
<java.lang.invoke.MethodTypeForm: java.lang.Class canonicalize(java.lang.Class,int)>/switch/instruction22	22	<java.lang.invoke.MethodTypeForm: java.lang.Class canonicalize(java.lang.Class,int)>/l1#_0	<java.lang.invoke.MethodTypeForm: java.lang.Class canonicalize(java.lang.Class,int)>
<java.text.DigitList: boolean shouldRoundUp(int,boolean,boolean)>/switch/instruction11	11	<java.text.DigitList: boolean shouldRoundUp(int,boolean,boolean)>/$stack9	<java.text.DigitList: boolean shouldRoundUp(int,boolean,boolean)>
<java.time.chrono.Ser: void writeInternal(byte,java.lang.Object,java.io.ObjectOutput)>/switch/instruction5	5	<java.time.chrono.Ser: void writeInternal(byte,java.lang.Object,java.io.ObjectOutput)>/l0#_0	<java.time.chrono.Ser: void writeInternal(byte,java.lang.Object,java.io.ObjectOutput)>
<java.time.chrono.Ser: java.lang.Object readInternal(byte,java.io.ObjectInput)>/switch/instruction3	3	<java.time.chrono.Ser: java.lang.Object readInternal(byte,java.io.ObjectInput)>/l0#_0	<java.time.chrono.Ser: java.lang.Object readInternal(byte,java.io.ObjectInput)>
<sun.nio.ch.SocketChannelImpl: java.lang.String toString()>/switch/instruction20	20	<sun.nio.ch.SocketChannelImpl: java.lang.String toString()>/$stack13	<sun.nio.ch.SocketChannelImpl: java.lang.String toString()>
<java.time.chrono.AbstractChronology: java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)>/switch/instruction27	27	<java.time.chrono.AbstractChronology: java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)>/l2_$$A_4#_128	<java.time.chrono.AbstractChronology: java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda)>
