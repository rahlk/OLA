<java.security.Permissions: void add(java.security.Permission)>/enter-monitor/instruction10	10	<java.security.Permissions: void add(java.security.Permission)>/l0#_0	<java.security.Permissions: void add(java.security.Permission)>
<sun.misc.ObjectInputFilter$Config: sun.misc.ObjectInputFilter getSerialFilter()>/enter-monitor/instruction3	3	<sun.misc.ObjectInputFilter$Config: sun.misc.ObjectInputFilter getSerialFilter()>/$stack2	<sun.misc.ObjectInputFilter$Config: sun.misc.ObjectInputFilter getSerialFilter()>
<java.security.Permissions: boolean implies(java.security.Permission)>/enter-monitor/instruction8	8	<java.security.Permissions: boolean implies(java.security.Permission)>/l0#_0	<java.security.Permissions: boolean implies(java.security.Permission)>
<sun.misc.ObjectInputFilter$Config: void setSerialFilter(sun.misc.ObjectInputFilter)>/enter-monitor/instruction12	12	<sun.misc.ObjectInputFilter$Config: void setSerialFilter(sun.misc.ObjectInputFilter)>/$stack6	<sun.misc.ObjectInputFilter$Config: void setSerialFilter(sun.misc.ObjectInputFilter)>
<java.security.Permissions: java.util.Enumeration elements()>/enter-monitor/instruction3	3	<java.security.Permissions: java.util.Enumeration elements()>/l0#_0	<java.security.Permissions: java.util.Enumeration elements()>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/enter-monitor/instruction63	63	<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/l3#_290	<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>
<java.security.Permissions: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction10	10	<java.security.Permissions: void writeObject(java.io.ObjectOutputStream)>/l0#_0	<java.security.Permissions: void writeObject(java.io.ObjectOutputStream)>
<jdk.internal.util.xml.PropertiesDefaultHandler: void store(java.util.Properties,java.io.OutputStream,java.lang.String,java.lang.String)>/enter-monitor/instruction22	22	<jdk.internal.util.xml.PropertiesDefaultHandler: void store(java.util.Properties,java.io.OutputStream,java.lang.String,java.lang.String)>/l1#_0	<jdk.internal.util.xml.PropertiesDefaultHandler: void store(java.util.Properties,java.io.OutputStream,java.lang.String,java.lang.String)>
<javax.crypto.Mac: void chooseFirstProvider()>/enter-monitor/instruction9	9	<javax.crypto.Mac: void chooseFirstProvider()>/$stack8	<javax.crypto.Mac: void chooseFirstProvider()>
<javax.crypto.Mac: void chooseProvider(java.security.Key,java.security.spec.AlgorithmParameterSpec)>/enter-monitor/instruction6	6	<javax.crypto.Mac: void chooseProvider(java.security.Key,java.security.spec.AlgorithmParameterSpec)>/$stack8	<javax.crypto.Mac: void chooseProvider(java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<java.net.InetAddress: void cacheAddresses(java.lang.String,java.net.InetAddress[],boolean)>/enter-monitor/instruction7	7	<java.net.InetAddress: void cacheAddresses(java.lang.String,java.net.InetAddress[],boolean)>/$stack6	<java.net.InetAddress: void cacheAddresses(java.lang.String,java.net.InetAddress[],boolean)>
<java.net.InetAddress: java.net.InetAddress[] getCachedAddresses(java.lang.String)>/enter-monitor/instruction5	5	<java.net.InetAddress: java.net.InetAddress[] getCachedAddresses(java.lang.String)>/$stack5	<java.net.InetAddress: java.net.InetAddress[] getCachedAddresses(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>/enter-monitor/instruction48	48	<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>/l7#_1018	<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>
<java.net.InetAddress: java.net.InetAddress[] checkLookupTable(java.lang.String)>/enter-monitor/instruction4	4	<java.net.InetAddress: java.net.InetAddress[] checkLookupTable(java.lang.String)>/$stack5	<java.net.InetAddress: java.net.InetAddress[] checkLookupTable(java.lang.String)>
<java.net.InetAddress: java.net.InetAddress[] checkLookupTable(java.lang.String)>/enter-monitor/instruction33	33	<java.net.InetAddress: java.net.InetAddress[] checkLookupTable(java.lang.String)>/$stack12	<java.net.InetAddress: java.net.InetAddress[] checkLookupTable(java.lang.String)>
<java.net.InetAddress: void updateLookupTable(java.lang.String)>/enter-monitor/instruction4	4	<java.net.InetAddress: void updateLookupTable(java.lang.String)>/$stack3	<java.net.InetAddress: void updateLookupTable(java.lang.String)>
<java.net.InetAddress: java.net.InetAddress getLocalHost()>/enter-monitor/instruction16	16	<java.net.InetAddress: java.net.InetAddress getLocalHost()>/$stack14	<java.net.InetAddress: java.net.InetAddress getLocalHost()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>/enter-monitor/instruction39	39	<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>/l6#_1110	<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: void clear()>/enter-monitor/instruction29	29	<java.util.concurrent.ConcurrentHashMap: void clear()>/l6#_1185	<java.util.concurrent.ConcurrentHashMap: void clear()>
<java.util.PropertyPermissionCollection: void add(java.security.Permission)>/enter-monitor/instruction23	23	<java.util.PropertyPermissionCollection: void add(java.security.Permission)>/l0#_0	<java.util.PropertyPermissionCollection: void add(java.security.Permission)>
<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>/enter-monitor/instruction13	13	<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>/l0#_0	<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>
<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>/enter-monitor/instruction41	41	<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>/l0#_0	<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>
<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>/enter-monitor/instruction87	87	<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>/l0#_0	<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>
<java.util.PropertyPermissionCollection: java.util.Enumeration elements()>/enter-monitor/instruction3	3	<java.util.PropertyPermissionCollection: java.util.Enumeration elements()>/l0#_0	<java.util.PropertyPermissionCollection: java.util.Enumeration elements()>
<java.util.PropertyPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction10	10	<java.util.PropertyPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/l0#_0	<java.util.PropertyPermissionCollection: void writeObject(java.io.ObjectOutputStream)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>/enter-monitor/instruction40	40	<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>/l11#_1654	<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>/enter-monitor/instruction105	105	<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>/l7#_1653	<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>/enter-monitor/instruction46	46	<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>/l8#_1755	<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/enter-monitor/instruction25	25	<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack64	<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/enter-monitor/instruction47	47	<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/l1#_377	<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/enter-monitor/instruction81	81	<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack36	<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>/enter-monitor/instruction47	47	<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>/l12#_1847	<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>/enter-monitor/instruction126	126	<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>/l8#_1846	<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>/enter-monitor/instruction60	60	<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>/l9#_1971	<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>
<java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>/enter-monitor/instruction203	203	<java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>/l11#_2421	<java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>
<java.util.concurrent.ConcurrentHashMap: void treeifyBin(java.util.concurrent.ConcurrentHashMap$Node[],int)>/enter-monitor/instruction17	17	<java.util.concurrent.ConcurrentHashMap: void treeifyBin(java.util.concurrent.ConcurrentHashMap$Node[],int)>/l3#_2616	<java.util.concurrent.ConcurrentHashMap: void treeifyBin(java.util.concurrent.ConcurrentHashMap$Node[],int)>
<java.net.Socket: void close()>/enter-monitor/instruction4	4	<java.net.Socket: void close()>/$stack3	<java.net.Socket: void close()>
<java.net.Socket: boolean isClosed()>/enter-monitor/instruction4	4	<java.net.Socket: boolean isClosed()>/$stack3	<java.net.Socket: boolean isClosed()>
<sun.nio.ch.NativeThreadSet: int add()>/enter-monitor/instruction9	9	<sun.nio.ch.NativeThreadSet: int add()>/l0#_0	<sun.nio.ch.NativeThreadSet: int add()>
<sun.nio.ch.NativeThreadSet: void remove(int)>/enter-monitor/instruction4	4	<sun.nio.ch.NativeThreadSet: void remove(int)>/l0#_0	<sun.nio.ch.NativeThreadSet: void remove(int)>
<sun.nio.fs.AbstractWatchKey: void signal()>/enter-monitor/instruction3	3	<sun.nio.fs.AbstractWatchKey: void signal()>/l0#_0	<sun.nio.fs.AbstractWatchKey: void signal()>
<sun.nio.fs.AbstractWatchKey: void signalEvent(java.nio.file.WatchEvent$Kind,java.lang.Object)>/enter-monitor/instruction13	13	<sun.nio.fs.AbstractWatchKey: void signalEvent(java.nio.file.WatchEvent$Kind,java.lang.Object)>/l0#_0	<sun.nio.fs.AbstractWatchKey: void signalEvent(java.nio.file.WatchEvent$Kind,java.lang.Object)>
<sun.nio.fs.AbstractWatchKey: java.util.List pollEvents()>/enter-monitor/instruction3	3	<sun.nio.fs.AbstractWatchKey: java.util.List pollEvents()>/l0#_0	<sun.nio.fs.AbstractWatchKey: java.util.List pollEvents()>
<sun.nio.fs.AbstractWatchKey: boolean reset()>/enter-monitor/instruction3	3	<sun.nio.fs.AbstractWatchKey: boolean reset()>/l0#_0	<sun.nio.fs.AbstractWatchKey: boolean reset()>
<java.util.WeakHashMap: void expungeStaleEntries()>/enter-monitor/instruction12	12	<java.util.WeakHashMap: void expungeStaleEntries()>/$stack11	<java.util.WeakHashMap: void expungeStaleEntries()>
<java.util.zip.ZipFile$ZipEntryIterator: boolean hasNext()>/enter-monitor/instruction4	4	<java.util.zip.ZipFile$ZipEntryIterator: boolean hasNext()>/$stack3	<java.util.zip.ZipFile$ZipEntryIterator: boolean hasNext()>
<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry next()>/enter-monitor/instruction4	4	<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry next()>/$stack6	<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry next()>
<java.util.Vector$ListItr: java.lang.Object previous()>/enter-monitor/instruction4	4	<java.util.Vector$ListItr: java.lang.Object previous()>/$stack4	<java.util.Vector$ListItr: java.lang.Object previous()>
<java.util.Vector$ListItr: void set(java.lang.Object)>/enter-monitor/instruction10	10	<java.util.Vector$ListItr: void set(java.lang.Object)>/$stack5	<java.util.Vector$ListItr: void set(java.lang.Object)>
<java.util.Vector$ListItr: void add(java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Vector$ListItr: void add(java.lang.Object)>/$stack5	<java.util.Vector$ListItr: void add(java.lang.Object)>
<sun.nio.ch.SocketAdaptor: void connect(java.net.SocketAddress,int)>/enter-monitor/instruction17	17	<sun.nio.ch.SocketAdaptor: void connect(java.net.SocketAddress,int)>/$stack13	<sun.nio.ch.SocketAdaptor: void connect(java.net.SocketAddress,int)>
<sun.nio.ch.SinkChannelImpl: void implCloseSelectableChannel()>/enter-monitor/instruction4	4	<sun.nio.ch.SinkChannelImpl: void implCloseSelectableChannel()>/$stack5	<sun.nio.ch.SinkChannelImpl: void implCloseSelectableChannel()>
<sun.nio.ch.SinkChannelImpl: void kill()>/enter-monitor/instruction4	4	<sun.nio.ch.SinkChannelImpl: void kill()>/$stack3	<sun.nio.ch.SinkChannelImpl: void kill()>
<sun.nio.ch.SinkChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction6	6	<sun.nio.ch.SinkChannelImpl: int write(java.nio.ByteBuffer)>/$stack7	<sun.nio.ch.SinkChannelImpl: int write(java.nio.ByteBuffer)>
<sun.nio.ch.SinkChannelImpl: long write(java.nio.ByteBuffer[])>/enter-monitor/instruction10	10	<sun.nio.ch.SinkChannelImpl: long write(java.nio.ByteBuffer[])>/$stack9	<sun.nio.ch.SinkChannelImpl: long write(java.nio.ByteBuffer[])>
<java.lang.ref.ReferenceQueue: boolean enqueue(java.lang.ref.Reference)>/enter-monitor/instruction5	5	<java.lang.ref.ReferenceQueue: boolean enqueue(java.lang.ref.Reference)>/$stack5	<java.lang.ref.ReferenceQueue: boolean enqueue(java.lang.ref.Reference)>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>/enter-monitor/instruction8	8	<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>/$stack4	<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>/enter-monitor/instruction11	11	<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>/$stack11	<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>
<java.util.Collections$SynchronizedCollection: int size()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedCollection: int size()>/$stack3	<java.util.Collections$SynchronizedCollection: int size()>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedCollection: boolean isEmpty()>/$stack3	<java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>/$stack3	<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>/$stack4	<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean containsAll(java.util.Collection)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: boolean containsAll(java.util.Collection)>/$stack4	<java.util.Collections$SynchronizedCollection: boolean containsAll(java.util.Collection)>
<java.util.Collections$SynchronizedCollection: boolean addAll(java.util.Collection)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: boolean addAll(java.util.Collection)>/$stack4	<java.util.Collections$SynchronizedCollection: boolean addAll(java.util.Collection)>
<java.util.Collections$SynchronizedCollection: boolean removeAll(java.util.Collection)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: boolean removeAll(java.util.Collection)>/$stack4	<java.util.Collections$SynchronizedCollection: boolean removeAll(java.util.Collection)>
<java.util.Collections$SynchronizedCollection: boolean retainAll(java.util.Collection)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: boolean retainAll(java.util.Collection)>/$stack4	<java.util.Collections$SynchronizedCollection: boolean retainAll(java.util.Collection)>
<java.util.Collections$SynchronizedCollection: void clear()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedCollection: void clear()>/$stack3	<java.util.Collections$SynchronizedCollection: void clear()>
<java.util.Collections$SynchronizedCollection: java.lang.String toString()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedCollection: java.lang.String toString()>/$stack3	<java.util.Collections$SynchronizedCollection: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>/$stack4	<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>
<java.util.Collections$SynchronizedCollection: boolean removeIf(java.util.function.Predicate)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: boolean removeIf(java.util.function.Predicate)>/$stack4	<java.util.Collections$SynchronizedCollection: boolean removeIf(java.util.function.Predicate)>
<java.util.Collections$SynchronizedCollection: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedCollection: void writeObject(java.io.ObjectOutputStream)>/$stack4	<java.util.Collections$SynchronizedCollection: void writeObject(java.io.ObjectOutputStream)>
<java.util.zip.ZipFile: java.lang.String getComment()>/enter-monitor/instruction3	3	<java.util.zip.ZipFile: java.lang.String getComment()>/l0#_0	<java.util.zip.ZipFile: java.lang.String getComment()>
<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>/enter-monitor/instruction10	10	<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>/l0#_0	<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/enter-monitor/instruction9	9	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/l0#_0	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/enter-monitor/instruction44	44	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/$stack46	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/enter-monitor/instruction75	75	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/$stack30	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>/enter-monitor/instruction4	4	<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>/$stack4	<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>
<java.util.zip.ZipFile: void releaseInflater(java.util.zip.Inflater)>/enter-monitor/instruction8	8	<java.util.zip.ZipFile: void releaseInflater(java.util.zip.Inflater)>/$stack6	<java.util.zip.ZipFile: void releaseInflater(java.util.zip.Inflater)>
<java.util.zip.ZipFile: void close()>/enter-monitor/instruction8	8	<java.util.zip.ZipFile: void close()>/l0#_0	<java.util.zip.ZipFile: void close()>
<java.util.zip.ZipFile: void close()>/enter-monitor/instruction11	11	<java.util.zip.ZipFile: void close()>/$stack12	<java.util.zip.ZipFile: void close()>
<java.util.zip.ZipFile: void close()>/enter-monitor/instruction43	43	<java.util.zip.ZipFile: void close()>/$stack17	<java.util.zip.ZipFile: void close()>
<sun.nio.fs.UnixPath: void initOffsets()>/enter-monitor/instruction82	82	<sun.nio.fs.UnixPath: void initOffsets()>/l0#_0	<sun.nio.fs.UnixPath: void initOffsets()>
<java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>/enter-monitor/instruction19	19	<java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>/l0#_0	<java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>/enter-monitor/instruction4	4	<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>/$stack3	<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>
<java.util.Vector$VectorSpliterator: int getFence()>/enter-monitor/instruction7	7	<java.util.Vector$VectorSpliterator: int getFence()>/$stack5	<java.util.Vector$VectorSpliterator: int getFence()>
<java.util.Vector$VectorSpliterator: void forEachRemaining(java.util.function.Consumer)>/enter-monitor/instruction14	14	<java.util.Vector$VectorSpliterator: void forEachRemaining(java.util.function.Consumer)>/l4#_1402	<java.util.Vector$VectorSpliterator: void forEachRemaining(java.util.function.Consumer)>
<sun.net.www.MessageHeader: void parseHeader(java.io.InputStream)>/enter-monitor/instruction4	4	<sun.net.www.MessageHeader: void parseHeader(java.io.InputStream)>/l0#_0	<sun.net.www.MessageHeader: void parseHeader(java.io.InputStream)>
<sun.nio.ch.AsynchronousChannelGroupImpl: void shutdown()>/enter-monitor/instruction12	12	<sun.nio.ch.AsynchronousChannelGroupImpl: void shutdown()>/$stack6	<sun.nio.ch.AsynchronousChannelGroupImpl: void shutdown()>
<sun.nio.ch.AsynchronousChannelGroupImpl: void shutdownNow()>/enter-monitor/instruction7	7	<sun.nio.ch.AsynchronousChannelGroupImpl: void shutdownNow()>/$stack4	<sun.nio.ch.AsynchronousChannelGroupImpl: void shutdownNow()>
<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>/enter-monitor/instruction13	13	<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>/$stack9	<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>
<sun.nio.ch.MembershipKeyImpl: java.nio.channels.MembershipKey block(java.net.InetAddress)>/enter-monitor/instruction11	11	<sun.nio.ch.MembershipKeyImpl: java.nio.channels.MembershipKey block(java.net.InetAddress)>/$stack5	<sun.nio.ch.MembershipKeyImpl: java.nio.channels.MembershipKey block(java.net.InetAddress)>
<sun.nio.ch.MembershipKeyImpl: java.nio.channels.MembershipKey unblock(java.net.InetAddress)>/enter-monitor/instruction5	5	<sun.nio.ch.MembershipKeyImpl: java.nio.channels.MembershipKey unblock(java.net.InetAddress)>/$stack4	<sun.nio.ch.MembershipKeyImpl: java.nio.channels.MembershipKey unblock(java.net.InetAddress)>
<sun.security.util.DerValue: byte[] getDataBytes()>/enter-monitor/instruction6	6	<sun.security.util.DerValue: byte[] getDataBytes()>/$stack5	<sun.security.util.DerValue: byte[] getDataBytes()>
<sun.security.util.DerValue: boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue)>/enter-monitor/instruction5	5	<sun.security.util.DerValue: boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue)>/$stack6	<sun.security.util.DerValue: boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue)>
<sun.security.util.DerValue: boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue)>/enter-monitor/instruction8	8	<sun.security.util.DerValue: boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue)>/$stack7	<sun.security.util.DerValue: boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue)>
<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>/enter-monitor/instruction16	16	<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>/l0#_0	<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>
<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>/enter-monitor/instruction41	41	<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>/l3_$$A_2#_87	<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>
<java.security.UnresolvedPermissionCollection: java.util.List getUnresolvedPermissions(java.security.Permission)>/enter-monitor/instruction4	4	<java.security.UnresolvedPermissionCollection: java.util.List getUnresolvedPermissions(java.security.Permission)>/l0#_0	<java.security.UnresolvedPermissionCollection: java.util.List getUnresolvedPermissions(java.security.Permission)>
<java.security.UnresolvedPermissionCollection: java.util.Enumeration elements()>/enter-monitor/instruction6	6	<java.security.UnresolvedPermissionCollection: java.util.Enumeration elements()>/l0#_0	<java.security.UnresolvedPermissionCollection: java.util.Enumeration elements()>
<java.security.UnresolvedPermissionCollection: java.util.Enumeration elements()>/enter-monitor/instruction15	15	<java.security.UnresolvedPermissionCollection: java.util.Enumeration elements()>/l4#_126	<java.security.UnresolvedPermissionCollection: java.util.Enumeration elements()>
<java.security.UnresolvedPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction10	10	<java.security.UnresolvedPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/l0#_0	<java.security.UnresolvedPermissionCollection: void writeObject(java.io.ObjectOutputStream)>
<java.security.UnresolvedPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction25	25	<java.security.UnresolvedPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/l7#_171	<java.security.UnresolvedPermissionCollection: void writeObject(java.io.ObjectOutputStream)>
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>/enter-monitor/instruction18	18	<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>/l6#2#_174	<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>/enter-monitor/instruction19	19	<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>/l7#2#_236	<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>/enter-monitor/instruction21	21	<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>/l9#2#_303	<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>
<sun.net.www.protocol.http.HttpURLConnection: void writeRequests()>/enter-monitor/instruction178	178	<sun.net.www.protocol.http.HttpURLConnection: void writeRequests()>/$stack82	<sun.net.www.protocol.http.HttpURLConnection: void writeRequests()>
<sun.net.www.protocol.http.HttpURLConnection: void connect()>/enter-monitor/instruction3	3	<sun.net.www.protocol.http.HttpURLConnection: void connect()>/l0#_0	<sun.net.www.protocol.http.HttpURLConnection: void connect()>
<sun.net.www.protocol.http.HttpURLConnection: void plainConnect()>/enter-monitor/instruction3	3	<sun.net.www.protocol.http.HttpURLConnection: void plainConnect()>/l0#_0	<sun.net.www.protocol.http.HttpURLConnection: void plainConnect()>
<java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>/enter-monitor/instruction11	11	<java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>/$stack6	<java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>
<sun.net.www.protocol.http.HttpURLConnection: void setCookieHeader()>/enter-monitor/instruction5	5	<sun.net.www.protocol.http.HttpURLConnection: void setCookieHeader()>/l0#_0	<sun.net.www.protocol.http.HttpURLConnection: void setCookieHeader()>
<sun.misc.VM: void booted()>/enter-monitor/instruction3	3	<sun.misc.VM: void booted()>/$stack2	<sun.misc.VM: void booted()>
<sun.misc.VM: void awaitBooted()>/enter-monitor/instruction3	3	<sun.misc.VM: void awaitBooted()>/$stack2	<sun.misc.VM: void awaitBooted()>
<sun.nio.cs.StreamDecoder: int read0()>/enter-monitor/instruction4	4	<sun.nio.cs.StreamDecoder: int read0()>/$stack5	<sun.nio.cs.StreamDecoder: int read0()>
<sun.nio.cs.StreamDecoder: int read(char[],int,int)>/enter-monitor/instruction9	9	<sun.nio.cs.StreamDecoder: int read(char[],int,int)>/$stack10	<sun.nio.cs.StreamDecoder: int read(char[],int,int)>
<sun.nio.cs.StreamDecoder: boolean ready()>/enter-monitor/instruction4	4	<sun.nio.cs.StreamDecoder: boolean ready()>/$stack3	<sun.nio.cs.StreamDecoder: boolean ready()>
<sun.nio.cs.StreamDecoder: void close()>/enter-monitor/instruction4	4	<sun.nio.cs.StreamDecoder: void close()>/$stack3	<sun.nio.cs.StreamDecoder: void close()>
<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>/enter-monitor/instruction15	15	<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>/$stack21	<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>/enter-monitor/instruction33	33	<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>/$stack15	<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.net.URLClassLoader: void close()>/enter-monitor/instruction12	12	<java.net.URLClassLoader: void close()>/$stack12	<java.net.URLClassLoader: void close()>
<java.util.zip.ZipFile$ZipFileInputStream: int read(byte[],int,int)>/enter-monitor/instruction7	7	<java.util.zip.ZipFile$ZipFileInputStream: int read(byte[],int,int)>/$stack10	<java.util.zip.ZipFile$ZipFileInputStream: int read(byte[],int,int)>
<java.util.zip.ZipFile$ZipFileInputStream: void close()>/enter-monitor/instruction11	11	<java.util.zip.ZipFile$ZipFileInputStream: void close()>/$stack5	<java.util.zip.ZipFile$ZipFileInputStream: void close()>
<java.util.zip.ZipFile$ZipFileInputStream: void close()>/enter-monitor/instruction34	34	<java.util.zip.ZipFile$ZipFileInputStream: void close()>/$stack10	<java.util.zip.ZipFile$ZipFileInputStream: void close()>
<sun.misc.PathPermissions: java.util.Enumeration elements()>/enter-monitor/instruction7	7	<sun.misc.PathPermissions: java.util.Enumeration elements()>/$stack4	<sun.misc.PathPermissions: java.util.Enumeration elements()>
<java.io.PrintStream: void flush()>/enter-monitor/instruction3	3	<java.io.PrintStream: void flush()>/l0#_0	<java.io.PrintStream: void flush()>
<java.io.PrintStream: void close()>/enter-monitor/instruction3	3	<java.io.PrintStream: void close()>/l0#_0	<java.io.PrintStream: void close()>
<java.io.PrintStream: void write(int)>/enter-monitor/instruction4	4	<java.io.PrintStream: void write(int)>/l0#_0	<java.io.PrintStream: void write(int)>
<java.io.PrintStream: void write(byte[],int,int)>/enter-monitor/instruction6	6	<java.io.PrintStream: void write(byte[],int,int)>/l0#_0	<java.io.PrintStream: void write(byte[],int,int)>
<java.io.PrintStream: void write(char[])>/enter-monitor/instruction4	4	<java.io.PrintStream: void write(char[])>/l0#_0	<java.io.PrintStream: void write(char[])>
<java.io.PrintStream: void write(java.lang.String)>/enter-monitor/instruction4	4	<java.io.PrintStream: void write(java.lang.String)>/l0#_0	<java.io.PrintStream: void write(java.lang.String)>
<java.io.PrintStream: void newLine()>/enter-monitor/instruction3	3	<java.io.PrintStream: void newLine()>/l0#_0	<java.io.PrintStream: void newLine()>
<java.io.PrintStream: void println(boolean)>/enter-monitor/instruction4	4	<java.io.PrintStream: void println(boolean)>/l0#_0	<java.io.PrintStream: void println(boolean)>
<java.io.PrintStream: void println(char)>/enter-monitor/instruction4	4	<java.io.PrintStream: void println(char)>/l0#_0	<java.io.PrintStream: void println(char)>
<java.io.PrintStream: void println(int)>/enter-monitor/instruction4	4	<java.io.PrintStream: void println(int)>/l0#_0	<java.io.PrintStream: void println(int)>
<java.io.PrintStream: void println(long)>/enter-monitor/instruction4	4	<java.io.PrintStream: void println(long)>/l0#_0	<java.io.PrintStream: void println(long)>
<java.io.PrintStream: void println(float)>/enter-monitor/instruction4	4	<java.io.PrintStream: void println(float)>/l0#_0	<java.io.PrintStream: void println(float)>
<java.io.PrintStream: void println(double)>/enter-monitor/instruction4	4	<java.io.PrintStream: void println(double)>/l0#_0	<java.io.PrintStream: void println(double)>
<java.io.PrintStream: void println(char[])>/enter-monitor/instruction4	4	<java.io.PrintStream: void println(char[])>/l0#_0	<java.io.PrintStream: void println(char[])>
<java.io.PrintStream: void println(java.lang.String)>/enter-monitor/instruction4	4	<java.io.PrintStream: void println(java.lang.String)>/l0#_0	<java.io.PrintStream: void println(java.lang.String)>
<java.io.PrintStream: void println(java.lang.Object)>/enter-monitor/instruction5	5	<java.io.PrintStream: void println(java.lang.Object)>/l0#_0	<java.io.PrintStream: void println(java.lang.Object)>
<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>/enter-monitor/instruction5	5	<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>/l0#_0	<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>
<java.io.PrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>/enter-monitor/instruction6	6	<java.io.PrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>/l0#_0	<java.io.PrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>
<java.util.Properties: void store0(java.io.BufferedWriter,java.lang.String,boolean)>/enter-monitor/instruction19	19	<java.util.Properties: void store0(java.io.BufferedWriter,java.lang.String,boolean)>/l0#_0	<java.util.Properties: void store0(java.io.BufferedWriter,java.lang.String,boolean)>
<java.nio.channels.spi.AbstractInterruptibleChannel$1: void interrupt(java.lang.Thread)>/enter-monitor/instruction6	6	<java.nio.channels.spi.AbstractInterruptibleChannel$1: void interrupt(java.lang.Thread)>/$stack6	<java.nio.channels.spi.AbstractInterruptibleChannel$1: void interrupt(java.lang.Thread)>
<sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset charsetForName(java.lang.String)>/enter-monitor/instruction4	4	<sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset charsetForName(java.lang.String)>/l0#_0	<sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset charsetForName(java.lang.String)>
<sun.net.www.http.KeepAliveStreamCleaner: void run()>/enter-monitor/instruction16	16	<sun.net.www.http.KeepAliveStreamCleaner: void run()>/l0#_0	<sun.net.www.http.KeepAliveStreamCleaner: void run()>
<sun.net.www.http.KeepAliveStreamCleaner: void run()>/enter-monitor/instruction69	69	<sun.net.www.http.KeepAliveStreamCleaner: void run()>/l2#12#_118	<sun.net.www.http.KeepAliveStreamCleaner: void run()>
<sun.nio.ch.DatagramSocketAdaptor: void send(java.net.DatagramPacket)>/enter-monitor/instruction6	6	<sun.nio.ch.DatagramSocketAdaptor: void send(java.net.DatagramPacket)>/$stack9	<sun.nio.ch.DatagramSocketAdaptor: void send(java.net.DatagramPacket)>
<sun.nio.ch.DatagramSocketAdaptor: void send(java.net.DatagramPacket)>/enter-monitor/instruction14	14	<sun.nio.ch.DatagramSocketAdaptor: void send(java.net.DatagramPacket)>/l1#_0	<sun.nio.ch.DatagramSocketAdaptor: void send(java.net.DatagramPacket)>
<java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>/enter-monitor/instruction8	8	<java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedList: int hashCode()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedList: int hashCode()>/$stack3	<java.util.Collections$SynchronizedList: int hashCode()>
<java.util.Collections$SynchronizedList: java.lang.Object get(int)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedList: java.lang.Object get(int)>/$stack4	<java.util.Collections$SynchronizedList: java.lang.Object get(int)>
<java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)>
<java.util.Collections$SynchronizedList: void add(int,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedList: void add(int,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedList: void add(int,java.lang.Object)>
<java.util.Collections$SynchronizedList: java.lang.Object remove(int)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedList: java.lang.Object remove(int)>/$stack4	<java.util.Collections$SynchronizedList: java.lang.Object remove(int)>
<sun.nio.ch.DatagramSocketAdaptor: void receive(java.net.DatagramPacket)>/enter-monitor/instruction6	6	<sun.nio.ch.DatagramSocketAdaptor: void receive(java.net.DatagramPacket)>/$stack9	<sun.nio.ch.DatagramSocketAdaptor: void receive(java.net.DatagramPacket)>
<java.util.Collections$SynchronizedList: int indexOf(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedList: int indexOf(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedList: int indexOf(java.lang.Object)>
<sun.nio.ch.DatagramSocketAdaptor: void receive(java.net.DatagramPacket)>/enter-monitor/instruction14	14	<sun.nio.ch.DatagramSocketAdaptor: void receive(java.net.DatagramPacket)>/l1#_0	<sun.nio.ch.DatagramSocketAdaptor: void receive(java.net.DatagramPacket)>
<java.util.Collections$SynchronizedList: int lastIndexOf(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedList: int lastIndexOf(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedList: int lastIndexOf(java.lang.Object)>
<java.util.Collections$SynchronizedList: boolean addAll(int,java.util.Collection)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedList: boolean addAll(int,java.util.Collection)>/$stack5	<java.util.Collections$SynchronizedList: boolean addAll(int,java.util.Collection)>
<java.util.Collections$SynchronizedList: java.util.List subList(int,int)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedList: java.util.List subList(int,int)>/$stack5	<java.util.Collections$SynchronizedList: java.util.List subList(int,int)>
<java.util.Collections$SynchronizedList: void replaceAll(java.util.function.UnaryOperator)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedList: void replaceAll(java.util.function.UnaryOperator)>/$stack4	<java.util.Collections$SynchronizedList: void replaceAll(java.util.function.UnaryOperator)>
<java.util.Collections$SynchronizedList: void sort(java.util.Comparator)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedList: void sort(java.util.Comparator)>/$stack4	<java.util.Collections$SynchronizedList: void sort(java.util.Comparator)>
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)>/enter-monitor/instruction7	7	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)>/$stack8	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)>
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)>/enter-monitor/instruction43	43	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)>/$stack17	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)>
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void raise()>/enter-monitor/instruction4	4	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void raise()>/$stack3	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void raise()>
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void lower()>/enter-monitor/instruction4	4	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void lower()>/$stack3	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void lower()>
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void close()>/enter-monitor/instruction4	4	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void close()>/$stack3	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void close()>
<sun.nio.fs.UnixDirectoryStream: java.util.Iterator iterator(java.nio.file.DirectoryStream)>/enter-monitor/instruction10	10	<sun.nio.fs.UnixDirectoryStream: java.util.Iterator iterator(java.nio.file.DirectoryStream)>/l0#_0	<sun.nio.fs.UnixDirectoryStream: java.util.Iterator iterator(java.nio.file.DirectoryStream)>
<javax.crypto.KeyGenerator: java.security.Provider getProvider()>/enter-monitor/instruction4	4	<javax.crypto.KeyGenerator: java.security.Provider getProvider()>/$stack3	<javax.crypto.KeyGenerator: java.security.Provider getProvider()>
<javax.crypto.KeyGenerator: javax.crypto.KeyGeneratorSpi nextSpi(javax.crypto.KeyGeneratorSpi,boolean)>/enter-monitor/instruction6	6	<javax.crypto.KeyGenerator: javax.crypto.KeyGeneratorSpi nextSpi(javax.crypto.KeyGeneratorSpi,boolean)>/$stack8	<javax.crypto.KeyGenerator: javax.crypto.KeyGeneratorSpi nextSpi(javax.crypto.KeyGeneratorSpi,boolean)>
<sun.misc.ExtensionDependency: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>/enter-monitor/instruction6	6	<sun.misc.ExtensionDependency: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>/$stack7	<sun.misc.ExtensionDependency: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>
<java.lang.invoke.LambdaForm: java.lang.String fixDebugName(java.lang.String)>/enter-monitor/instruction15	15	<java.lang.invoke.LambdaForm: java.lang.String fixDebugName(java.lang.String)>/$stack12	<java.lang.invoke.LambdaForm: java.lang.String fixDebugName(java.lang.String)>
<java.lang.UNIXProcess: void destroy(boolean)>/enter-monitor/instruction9	9	<java.lang.UNIXProcess: void destroy(boolean)>/l0#_0	<java.lang.UNIXProcess: void destroy(boolean)>
<java.lang.UNIXProcess: void destroy(boolean)>/enter-monitor/instruction41	41	<java.lang.UNIXProcess: void destroy(boolean)>/l0#_0	<java.lang.UNIXProcess: void destroy(boolean)>
<java.lang.UNIXProcess: void lambda$initStreams$5()>/enter-monitor/instruction5	5	<java.lang.UNIXProcess: void lambda$initStreams$5()>/l0#_0	<java.lang.UNIXProcess: void lambda$initStreams$5()>
<java.lang.UNIXProcess: void lambda$initStreams$4()>/enter-monitor/instruction5	5	<java.lang.UNIXProcess: void lambda$initStreams$4()>/l0#_0	<java.lang.UNIXProcess: void lambda$initStreams$4()>
<java.lang.UNIXProcess: void lambda$initStreams$3()>/enter-monitor/instruction5	5	<java.lang.UNIXProcess: void lambda$initStreams$3()>/l0#_0	<java.lang.UNIXProcess: void lambda$initStreams$3()>
<java.util.Collections$SynchronizedNavigableSet: java.lang.Object lower(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object lower(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object lower(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableSet: java.lang.Object floor(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object floor(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object floor(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableSet: java.lang.Object ceiling(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object ceiling(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object ceiling(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableSet: java.lang.Object higher(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object higher(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object higher(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableSet: java.lang.Object pollFirst()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object pollFirst()>/$stack3	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object pollFirst()>
<java.util.Collections$SynchronizedNavigableSet: java.lang.Object pollLast()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object pollLast()>/$stack3	<java.util.Collections$SynchronizedNavigableSet: java.lang.Object pollLast()>
<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet descendingSet()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet descendingSet()>/$stack3	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet descendingSet()>
<sun.nio.ch.PendingFuture: void setTimeoutTask(java.util.concurrent.Future)>/enter-monitor/instruction4	4	<sun.nio.ch.PendingFuture: void setTimeoutTask(java.util.concurrent.Future)>/l0#_0	<sun.nio.ch.PendingFuture: void setTimeoutTask(java.util.concurrent.Future)>
<sun.nio.ch.PendingFuture: boolean prepareForWait()>/enter-monitor/instruction3	3	<sun.nio.ch.PendingFuture: boolean prepareForWait()>/l0#_0	<sun.nio.ch.PendingFuture: boolean prepareForWait()>
<java.util.Collections$SynchronizedNavigableSet: java.util.Iterator descendingIterator()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableSet: java.util.Iterator descendingIterator()>/$stack3	<java.util.Collections$SynchronizedNavigableSet: java.util.Iterator descendingIterator()>
<sun.nio.ch.PendingFuture: void setResult(java.lang.Object)>/enter-monitor/instruction4	4	<sun.nio.ch.PendingFuture: void setResult(java.lang.Object)>/l0#_0	<sun.nio.ch.PendingFuture: void setResult(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet subSet(java.lang.Object,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet subSet(java.lang.Object,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet subSet(java.lang.Object,java.lang.Object)>
<sun.nio.ch.PendingFuture: void setFailure(java.lang.Throwable)>/enter-monitor/instruction14	14	<sun.nio.ch.PendingFuture: void setFailure(java.lang.Throwable)>/l0#_0	<sun.nio.ch.PendingFuture: void setFailure(java.lang.Throwable)>
<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet headSet(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet headSet(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet headSet(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet tailSet(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet tailSet(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet tailSet(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>/enter-monitor/instruction8	8	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>/$stack7	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>
<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>/$stack5	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet headSet(java.lang.Object,boolean)>
<sun.nio.ch.PendingFuture: boolean cancel(boolean)>/enter-monitor/instruction4	4	<sun.nio.ch.PendingFuture: boolean cancel(boolean)>/l0#_0	<sun.nio.ch.PendingFuture: boolean cancel(boolean)>
<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)>/$stack5	<java.util.Collections$SynchronizedNavigableSet: java.util.NavigableSet tailSet(java.lang.Object,boolean)>
<sun.nio.ch.AbstractPollSelectorImpl: void putEventOps(sun.nio.ch.SelectionKeyImpl,int)>/enter-monitor/instruction6	6	<sun.nio.ch.AbstractPollSelectorImpl: void putEventOps(sun.nio.ch.SelectionKeyImpl,int)>/$stack5	<sun.nio.ch.AbstractPollSelectorImpl: void putEventOps(sun.nio.ch.SelectionKeyImpl,int)>
<sun.nio.ch.AbstractPollSelectorImpl: void implClose()>/enter-monitor/instruction4	4	<sun.nio.ch.AbstractPollSelectorImpl: void implClose()>/$stack6	<sun.nio.ch.AbstractPollSelectorImpl: void implClose()>
<java.util.SimpleTimeZone: int getOffsets(long,int[])>/enter-monitor/instruction8	8	<java.util.SimpleTimeZone: int getOffsets(long,int[])>/l0#_0	<java.util.SimpleTimeZone: int getOffsets(long,int[])>
<sun.nio.ch.AbstractPollSelectorImpl: void implRegister(sun.nio.ch.SelectionKeyImpl)>/enter-monitor/instruction5	5	<sun.nio.ch.AbstractPollSelectorImpl: void implRegister(sun.nio.ch.SelectionKeyImpl)>/$stack7	<sun.nio.ch.AbstractPollSelectorImpl: void implRegister(sun.nio.ch.SelectionKeyImpl)>
<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>/enter-monitor/instruction7	7	<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>/l0#_0	<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>
<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>/enter-monitor/instruction50	50	<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>/l0#_0	<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>
<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>/enter-monitor/instruction97	97	<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>/l0#_0	<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>
<java.security.Signature$Delegate: void chooseFirstProvider()>/enter-monitor/instruction7	7	<java.security.Signature$Delegate: void chooseFirstProvider()>/$stack7	<java.security.Signature$Delegate: void chooseFirstProvider()>
<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>/enter-monitor/instruction7	7	<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>/$stack9	<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>
<java.net.MulticastSocket: void setInterface(java.net.InetAddress)>/enter-monitor/instruction13	13	<java.net.MulticastSocket: void setInterface(java.net.InetAddress)>/$stack5	<java.net.MulticastSocket: void setInterface(java.net.InetAddress)>
<java.net.MulticastSocket: java.net.InetAddress getInterface()>/enter-monitor/instruction10	10	<java.net.MulticastSocket: java.net.InetAddress getInterface()>/$stack8	<java.net.MulticastSocket: java.net.InetAddress getInterface()>
<java.net.MulticastSocket: void setNetworkInterface(java.net.NetworkInterface)>/enter-monitor/instruction5	5	<java.net.MulticastSocket: void setNetworkInterface(java.net.NetworkInterface)>/$stack4	<java.net.MulticastSocket: void setNetworkInterface(java.net.NetworkInterface)>
<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)>/enter-monitor/instruction15	15	<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)>/$stack11	<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)>
<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)>/enter-monitor/instruction17	17	<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)>/l1#_0	<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)>
<javax.crypto.Cipher: void chooseFirstProvider()>/enter-monitor/instruction7	7	<javax.crypto.Cipher: void chooseFirstProvider()>/$stack9	<javax.crypto.Cipher: void chooseFirstProvider()>
<java.lang.Shutdown: void setRunFinalizersOnExit(boolean)>/enter-monitor/instruction4	4	<java.lang.Shutdown: void setRunFinalizersOnExit(boolean)>/$stack3	<java.lang.Shutdown: void setRunFinalizersOnExit(boolean)>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>/enter-monitor/instruction10	10	<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>/$stack14	<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>
<java.lang.Shutdown: void add(int,boolean,java.lang.Runnable)>/enter-monitor/instruction6	6	<java.lang.Shutdown: void add(int,boolean,java.lang.Runnable)>/$stack5	<java.lang.Shutdown: void add(int,boolean,java.lang.Runnable)>
<java.lang.Shutdown: void runHooks()>/enter-monitor/instruction7	7	<java.lang.Shutdown: void runHooks()>/$stack4	<java.lang.Shutdown: void runHooks()>
<java.lang.Shutdown: void halt(int)>/enter-monitor/instruction4	4	<java.lang.Shutdown: void halt(int)>/$stack3	<java.lang.Shutdown: void halt(int)>
<java.lang.Shutdown: void sequence()>/enter-monitor/instruction3	3	<java.lang.Shutdown: void sequence()>/$stack3	<java.lang.Shutdown: void sequence()>
<java.lang.Shutdown: void sequence()>/enter-monitor/instruction17	17	<java.lang.Shutdown: void sequence()>/$stack6	<java.lang.Shutdown: void sequence()>
<java.lang.Shutdown: void exit(int)>/enter-monitor/instruction5	5	<java.lang.Shutdown: void exit(int)>/$stack5	<java.lang.Shutdown: void exit(int)>
<java.lang.Shutdown: void shutdown()>/enter-monitor/instruction3	3	<java.lang.Shutdown: void shutdown()>/$stack3	<java.lang.Shutdown: void shutdown()>
<java.util.Hashtable$Enumerator: void remove()>/enter-monitor/instruction22	22	<java.util.Hashtable$Enumerator: void remove()>/$stack12	<java.util.Hashtable$Enumerator: void remove()>
<sun.nio.ch.SharedFileLockTable: void add(java.nio.channels.FileLock)>/enter-monitor/instruction17	17	<sun.nio.ch.SharedFileLockTable: void add(java.nio.channels.FileLock)>/l2#2#_131	<sun.nio.ch.SharedFileLockTable: void add(java.nio.channels.FileLock)>
<sun.nio.ch.SharedFileLockTable: void add(java.nio.channels.FileLock)>/enter-monitor/instruction45	45	<sun.nio.ch.SharedFileLockTable: void add(java.nio.channels.FileLock)>/l2_$$A_3#_143	<sun.nio.ch.SharedFileLockTable: void add(java.nio.channels.FileLock)>
<java.security.Provider$Service: boolean hasKeyAttributes()>/enter-monitor/instruction5	5	<java.security.Provider$Service: boolean hasKeyAttributes()>/l0#_0	<java.security.Provider$Service: boolean hasKeyAttributes()>
<sun.nio.ch.SharedFileLockTable: void remove(java.nio.channels.FileLock)>/enter-monitor/instruction16	16	<sun.nio.ch.SharedFileLockTable: void remove(java.nio.channels.FileLock)>/l2#_178	<sun.nio.ch.SharedFileLockTable: void remove(java.nio.channels.FileLock)>
<sun.nio.ch.SharedFileLockTable: java.util.List removeAll()>/enter-monitor/instruction11	11	<sun.nio.ch.SharedFileLockTable: java.util.List removeAll()>/l2#_200	<sun.nio.ch.SharedFileLockTable: java.util.List removeAll()>
<sun.nio.ch.SharedFileLockTable: void replace(java.nio.channels.FileLock,java.nio.channels.FileLock)>/enter-monitor/instruction15	15	<sun.nio.ch.SharedFileLockTable: void replace(java.nio.channels.FileLock,java.nio.channels.FileLock)>/l3#_231	<sun.nio.ch.SharedFileLockTable: void replace(java.nio.channels.FileLock,java.nio.channels.FileLock)>
<sun.nio.ch.SharedFileLockTable: void removeStaleEntries()>/enter-monitor/instruction13	13	<sun.nio.ch.SharedFileLockTable: void removeStaleEntries()>/l3#_264	<sun.nio.ch.SharedFileLockTable: void removeStaleEntries()>
<java.lang.ThreadGroup: void setMaxPriority(int)>/enter-monitor/instruction4	4	<java.lang.ThreadGroup: void setMaxPriority(int)>/l0#_0	<java.lang.ThreadGroup: void setMaxPriority(int)>
<sun.net.ProgressMonitor: java.util.ArrayList getProgressSources()>/enter-monitor/instruction7	7	<sun.net.ProgressMonitor: java.util.ArrayList getProgressSources()>/$stack7	<sun.net.ProgressMonitor: java.util.ArrayList getProgressSources()>
<java.lang.ThreadGroup: int activeCount()>/enter-monitor/instruction3	3	<java.lang.ThreadGroup: int activeCount()>/l0#_0	<java.lang.ThreadGroup: int activeCount()>
<sun.net.ProgressMonitor: void registerSource(sun.net.ProgressSource)>/enter-monitor/instruction5	5	<sun.net.ProgressMonitor: void registerSource(sun.net.ProgressSource)>/$stack6	<sun.net.ProgressMonitor: void registerSource(sun.net.ProgressSource)>
<sun.net.ProgressMonitor: void registerSource(sun.net.ProgressSource)>/enter-monitor/instruction27	27	<sun.net.ProgressMonitor: void registerSource(sun.net.ProgressSource)>/$stack15	<sun.net.ProgressMonitor: void registerSource(sun.net.ProgressSource)>
<java.lang.ThreadGroup: int enumerate(java.lang.Thread[],int,boolean)>/enter-monitor/instruction8	8	<java.lang.ThreadGroup: int enumerate(java.lang.Thread[],int,boolean)>/l0#_0	<java.lang.ThreadGroup: int enumerate(java.lang.Thread[],int,boolean)>
<sun.net.ProgressMonitor: void unregisterSource(sun.net.ProgressSource)>/enter-monitor/instruction5	5	<sun.net.ProgressMonitor: void unregisterSource(sun.net.ProgressSource)>/$stack6	<sun.net.ProgressMonitor: void unregisterSource(sun.net.ProgressSource)>
<sun.net.ProgressMonitor: void unregisterSource(sun.net.ProgressSource)>/enter-monitor/instruction28	28	<sun.net.ProgressMonitor: void unregisterSource(sun.net.ProgressSource)>/$stack15	<sun.net.ProgressMonitor: void unregisterSource(sun.net.ProgressSource)>
<java.lang.ThreadGroup: int activeGroupCount()>/enter-monitor/instruction3	3	<java.lang.ThreadGroup: int activeGroupCount()>/l0#_0	<java.lang.ThreadGroup: int activeGroupCount()>
<sun.net.ProgressMonitor: void updateProgress(sun.net.ProgressSource)>/enter-monitor/instruction5	5	<sun.net.ProgressMonitor: void updateProgress(sun.net.ProgressSource)>/$stack6	<sun.net.ProgressMonitor: void updateProgress(sun.net.ProgressSource)>
<sun.net.ProgressMonitor: void updateProgress(sun.net.ProgressSource)>/enter-monitor/instruction25	25	<sun.net.ProgressMonitor: void updateProgress(sun.net.ProgressSource)>/$stack13	<sun.net.ProgressMonitor: void updateProgress(sun.net.ProgressSource)>
<sun.net.ProgressMonitor: void addProgressListener(sun.net.ProgressListener)>/enter-monitor/instruction5	5	<sun.net.ProgressMonitor: void addProgressListener(sun.net.ProgressListener)>/$stack4	<sun.net.ProgressMonitor: void addProgressListener(sun.net.ProgressListener)>
<sun.net.ProgressMonitor: void removeProgressListener(sun.net.ProgressListener)>/enter-monitor/instruction5	5	<sun.net.ProgressMonitor: void removeProgressListener(sun.net.ProgressListener)>/$stack4	<sun.net.ProgressMonitor: void removeProgressListener(sun.net.ProgressListener)>
<java.lang.ThreadGroup: int enumerate(java.lang.ThreadGroup[],int,boolean)>/enter-monitor/instruction8	8	<java.lang.ThreadGroup: int enumerate(java.lang.ThreadGroup[],int,boolean)>/l0#_0	<java.lang.ThreadGroup: int enumerate(java.lang.ThreadGroup[],int,boolean)>
<java.lang.ThreadGroup: void interrupt()>/enter-monitor/instruction3	3	<java.lang.ThreadGroup: void interrupt()>/l0#_0	<java.lang.ThreadGroup: void interrupt()>
<java.lang.ThreadGroup: boolean stopOrSuspend(boolean)>/enter-monitor/instruction7	7	<java.lang.ThreadGroup: boolean stopOrSuspend(boolean)>/l0#_0	<java.lang.ThreadGroup: boolean stopOrSuspend(boolean)>
<java.lang.ThreadGroup: void resume()>/enter-monitor/instruction3	3	<java.lang.ThreadGroup: void resume()>/l0#_0	<java.lang.ThreadGroup: void resume()>
<java.lang.ThreadGroup: void destroy()>/enter-monitor/instruction3	3	<java.lang.ThreadGroup: void destroy()>/l0#_0	<java.lang.ThreadGroup: void destroy()>
<java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>/enter-monitor/instruction4	4	<java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>/l0#_0	<java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>
<java.lang.ThreadGroup: void remove(java.lang.ThreadGroup)>/enter-monitor/instruction4	4	<java.lang.ThreadGroup: void remove(java.lang.ThreadGroup)>/l0#_0	<java.lang.ThreadGroup: void remove(java.lang.ThreadGroup)>
<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()>/enter-monitor/instruction10	10	<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()>/$stack9	<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()>
<java.lang.ThreadGroup: void addUnstarted()>/enter-monitor/instruction3	3	<java.lang.ThreadGroup: void addUnstarted()>/l0#_0	<java.lang.ThreadGroup: void addUnstarted()>
<java.lang.ThreadGroup: void add(java.lang.Thread)>/enter-monitor/instruction4	4	<java.lang.ThreadGroup: void add(java.lang.Thread)>/l0#_0	<java.lang.ThreadGroup: void add(java.lang.Thread)>
<java.lang.ThreadGroup: void threadStartFailed(java.lang.Thread)>/enter-monitor/instruction4	4	<java.lang.ThreadGroup: void threadStartFailed(java.lang.Thread)>/l0#_0	<java.lang.ThreadGroup: void threadStartFailed(java.lang.Thread)>
<java.text.AttributedString$AttributedStringIterator: void updateRunInfo()>/enter-monitor/instruction13	13	<java.text.AttributedString$AttributedStringIterator: void updateRunInfo()>/$stack6	<java.text.AttributedString$AttributedStringIterator: void updateRunInfo()>
<java.lang.ThreadGroup: void threadTerminated(java.lang.Thread)>/enter-monitor/instruction4	4	<java.lang.ThreadGroup: void threadTerminated(java.lang.Thread)>/l0#_0	<java.lang.ThreadGroup: void threadTerminated(java.lang.Thread)>
<java.lang.ThreadGroup: void remove(java.lang.Thread)>/enter-monitor/instruction4	4	<java.lang.ThreadGroup: void remove(java.lang.Thread)>/l0#_0	<java.lang.ThreadGroup: void remove(java.lang.Thread)>
<java.lang.ThreadGroup: void list(java.io.PrintStream,int)>/enter-monitor/instruction5	5	<java.lang.ThreadGroup: void list(java.io.PrintStream,int)>/l0#_0	<java.lang.ThreadGroup: void list(java.io.PrintStream,int)>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>/enter-monitor/instruction9	9	<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>/l2#_0	<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>
<sun.nio.ch.SocketAdaptor$SocketInputStream: int read(java.nio.ByteBuffer)>/enter-monitor/instruction7	7	<sun.nio.ch.SocketAdaptor$SocketInputStream: int read(java.nio.ByteBuffer)>/$stack14	<sun.nio.ch.SocketAdaptor$SocketInputStream: int read(java.nio.ByteBuffer)>
<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>/enter-monitor/instruction10	10	<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>/$stack6	<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>
<java.lang.SecurityManager: void checkPackageDefinition(java.lang.String)>/enter-monitor/instruction10	10	<java.lang.SecurityManager: void checkPackageDefinition(java.lang.String)>/$stack6	<java.lang.SecurityManager: void checkPackageDefinition(java.lang.String)>
<java.lang.Thread: void blockedOn(sun.nio.ch.Interruptible)>/enter-monitor/instruction5	5	<java.lang.Thread: void blockedOn(sun.nio.ch.Interruptible)>/$stack4	<java.lang.Thread: void blockedOn(sun.nio.ch.Interruptible)>
<java.lang.Thread: void interrupt()>/enter-monitor/instruction7	7	<java.lang.Thread: void interrupt()>/$stack5	<java.lang.Thread: void interrupt()>
<java.util.Hashtable: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction5	5	<java.util.Hashtable: void writeObject(java.io.ObjectOutputStream)>/l0#_0	<java.util.Hashtable: void writeObject(java.io.ObjectOutputStream)>
<java.security.PermissionsHash: void add(java.security.Permission)>/enter-monitor/instruction4	4	<java.security.PermissionsHash: void add(java.security.Permission)>/l0#_0	<java.security.PermissionsHash: void add(java.security.Permission)>
<java.security.PermissionsHash: boolean implies(java.security.Permission)>/enter-monitor/instruction4	4	<java.security.PermissionsHash: boolean implies(java.security.Permission)>/l0#_0	<java.security.PermissionsHash: boolean implies(java.security.Permission)>
<java.security.PermissionsHash: java.util.Enumeration elements()>/enter-monitor/instruction3	3	<java.security.PermissionsHash: java.util.Enumeration elements()>/l0#_0	<java.security.PermissionsHash: java.util.Enumeration elements()>
<java.security.PermissionsHash: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction10	10	<java.security.PermissionsHash: void writeObject(java.io.ObjectOutputStream)>/l0#_0	<java.security.PermissionsHash: void writeObject(java.io.ObjectOutputStream)>
<sun.misc.URLClassPath: void addURL(java.net.URL)>/enter-monitor/instruction8	8	<sun.misc.URLClassPath: void addURL(java.net.URL)>/$stack5	<sun.misc.URLClassPath: void addURL(java.net.URL)>
<sun.misc.URLClassPath: java.net.URL[] getURLs()>/enter-monitor/instruction4	4	<sun.misc.URLClassPath: java.net.URL[] getURLs()>/$stack3	<sun.misc.URLClassPath: java.net.URL[] getURLs()>
<javax.security.auth.Subject: boolean equals(java.lang.Object)>/enter-monitor/instruction14	14	<javax.security.auth.Subject: boolean equals(java.lang.Object)>/$stack9	<javax.security.auth.Subject: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: boolean equals(java.lang.Object)>/enter-monitor/instruction32	32	<javax.security.auth.Subject: boolean equals(java.lang.Object)>/$stack15	<javax.security.auth.Subject: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: boolean equals(java.lang.Object)>/enter-monitor/instruction50	50	<javax.security.auth.Subject: boolean equals(java.lang.Object)>/$stack21	<javax.security.auth.Subject: boolean equals(java.lang.Object)>
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/enter-monitor/instruction13	13	<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/$stack21	<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>
<sun.misc.URLClassPath: void push(java.net.URL[])>/enter-monitor/instruction5	5	<sun.misc.URLClassPath: void push(java.net.URL[])>/$stack5	<sun.misc.URLClassPath: void push(java.net.URL[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>/enter-monitor/instruction8	8	<javax.security.auth.Subject: java.lang.String toString(boolean)>/$stack11	<javax.security.auth.Subject: java.lang.String toString(boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>/enter-monitor/instruction44	44	<javax.security.auth.Subject: java.lang.String toString(boolean)>/$stack16	<javax.security.auth.Subject: java.lang.String toString(boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>/enter-monitor/instruction86	86	<javax.security.auth.Subject: java.lang.String toString(boolean)>/$stack25	<javax.security.auth.Subject: java.lang.String toString(boolean)>
<javax.security.auth.Subject: int hashCode()>/enter-monitor/instruction5	5	<javax.security.auth.Subject: int hashCode()>/$stack7	<javax.security.auth.Subject: int hashCode()>
<javax.security.auth.Subject: int hashCode()>/enter-monitor/instruction31	31	<javax.security.auth.Subject: int hashCode()>/$stack12	<javax.security.auth.Subject: int hashCode()>
<javax.security.auth.Subject: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction5	5	<javax.security.auth.Subject: void writeObject(java.io.ObjectOutputStream)>/$stack4	<javax.security.auth.Subject: void writeObject(java.io.ObjectOutputStream)>
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/enter-monitor/instruction8	8	<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/l0#_0	<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/enter-monitor/instruction11	11	<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/l0#_0	<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)>/enter-monitor/instruction4	4	<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)>/$stack4	<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)>
<java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>/enter-monitor/instruction103	103	<java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>/$stack14	<java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>
<sun.nio.ch.AsynchronousFileChannelImpl: void ensureFileLockTableInitialized()>/enter-monitor/instruction5	5	<sun.nio.ch.AsynchronousFileChannelImpl: void ensureFileLockTableInitialized()>/l0#_0	<sun.nio.ch.AsynchronousFileChannelImpl: void ensureFileLockTableInitialized()>
<sun.nio.ch.AsynchronousFileChannelImpl: void invalidateAllLocks()>/enter-monitor/instruction12	12	<sun.nio.ch.AsynchronousFileChannelImpl: void invalidateAllLocks()>/l2#_147	<sun.nio.ch.AsynchronousFileChannelImpl: void invalidateAllLocks()>
<javax.crypto.KeyAgreement: void chooseFirstProvider()>/enter-monitor/instruction7	7	<javax.crypto.KeyAgreement: void chooseFirstProvider()>/$stack7	<javax.crypto.KeyAgreement: void chooseFirstProvider()>
<javax.crypto.KeyAgreement: void chooseProvider(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>/enter-monitor/instruction8	8	<javax.crypto.KeyAgreement: void chooseProvider(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>/$stack10	<javax.crypto.KeyAgreement: void chooseProvider(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>/enter-monitor/instruction8	8	<java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedSet: int hashCode()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedSet: int hashCode()>/$stack3	<java.util.Collections$SynchronizedSet: int hashCode()>
<sun.nio.ch.ChannelInputStream: int read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer,boolean)>/enter-monitor/instruction9	9	<sun.nio.ch.ChannelInputStream: int read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer,boolean)>/$stack10	<sun.nio.ch.ChannelInputStream: int read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer,boolean)>
<java.io.Reader: long skip(long)>/enter-monitor/instruction14	14	<java.io.Reader: long skip(long)>/$stack11	<java.io.Reader: long skip(long)>
<sun.nio.ch.SimpleAsynchronousFileChannelImpl: void close()>/enter-monitor/instruction4	4	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: void close()>/$stack3	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: void close()>
<java.lang.ref.Finalizer: void add()>/enter-monitor/instruction4	4	<java.lang.ref.Finalizer: void add()>/$stack3	<java.lang.ref.Finalizer: void add()>
<java.lang.ref.Finalizer: void remove()>/enter-monitor/instruction4	4	<java.lang.ref.Finalizer: void remove()>/$stack3	<java.lang.ref.Finalizer: void remove()>
<java.lang.ref.Finalizer: void runFinalizer(sun.misc.JavaLangAccess)>/enter-monitor/instruction4	4	<java.lang.ref.Finalizer: void runFinalizer(sun.misc.JavaLangAccess)>/l0#_0	<java.lang.ref.Finalizer: void runFinalizer(sun.misc.JavaLangAccess)>
<sun.net.www.protocol.http.AuthenticationInfo: boolean requestIsInProgress(java.lang.String)>/enter-monitor/instruction8	8	<sun.net.www.protocol.http.AuthenticationInfo: boolean requestIsInProgress(java.lang.String)>/$stack7	<sun.net.www.protocol.http.AuthenticationInfo: boolean requestIsInProgress(java.lang.String)>
<sun.net.www.protocol.http.AuthenticationInfo: void requestCompleted(java.lang.String)>/enter-monitor/instruction4	4	<sun.net.www.protocol.http.AuthenticationInfo: void requestCompleted(java.lang.String)>/$stack5	<sun.net.www.protocol.http.AuthenticationInfo: void requestCompleted(java.lang.String)>
<sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>/enter-monitor/instruction7	7	<sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>/$stack4	<sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>
<java.io.StringReader: int read()>/enter-monitor/instruction4	4	<java.io.StringReader: int read()>/$stack3	<java.io.StringReader: int read()>
<java.io.StringReader: int read(char[],int,int)>/enter-monitor/instruction7	7	<java.io.StringReader: int read(char[],int,int)>/$stack7	<java.io.StringReader: int read(char[],int,int)>
<java.io.StringReader: long skip(long)>/enter-monitor/instruction5	5	<java.io.StringReader: long skip(long)>/$stack7	<java.io.StringReader: long skip(long)>
<java.io.StringReader: boolean ready()>/enter-monitor/instruction4	4	<java.io.StringReader: boolean ready()>/$stack3	<java.io.StringReader: boolean ready()>
<java.io.StringReader: void mark(int)>/enter-monitor/instruction10	10	<java.io.StringReader: void mark(int)>/$stack4	<java.io.StringReader: void mark(int)>
<java.io.StringReader: void reset()>/enter-monitor/instruction4	4	<java.io.StringReader: void reset()>/$stack3	<java.io.StringReader: void reset()>
<sun.net.ftp.FtpClientProvider: sun.net.ftp.FtpClientProvider provider()>/enter-monitor/instruction3	3	<sun.net.ftp.FtpClientProvider: sun.net.ftp.FtpClientProvider provider()>/$stack2	<sun.net.ftp.FtpClientProvider: sun.net.ftp.FtpClientProvider provider()>
<java.io.BufferedWriter: void flushBuffer()>/enter-monitor/instruction4	4	<java.io.BufferedWriter: void flushBuffer()>/$stack3	<java.io.BufferedWriter: void flushBuffer()>
<java.io.BufferedWriter: void write(int)>/enter-monitor/instruction5	5	<java.io.BufferedWriter: void write(int)>/$stack4	<java.io.BufferedWriter: void write(int)>
<java.io.BufferedWriter: void write(char[],int,int)>/enter-monitor/instruction7	7	<java.io.BufferedWriter: void write(char[],int,int)>/$stack9	<java.io.BufferedWriter: void write(char[],int,int)>
<java.io.BufferedWriter: void write(java.lang.String,int,int)>/enter-monitor/instruction7	7	<java.io.BufferedWriter: void write(java.lang.String,int,int)>/$stack9	<java.io.BufferedWriter: void write(java.lang.String,int,int)>
<java.io.BufferedWriter: void flush()>/enter-monitor/instruction4	4	<java.io.BufferedWriter: void flush()>/$stack3	<java.io.BufferedWriter: void flush()>
<java.net.SocketPermissionCollection: void add(java.security.Permission)>/enter-monitor/instruction21	21	<java.net.SocketPermissionCollection: void add(java.security.Permission)>/l0#_0	<java.net.SocketPermissionCollection: void add(java.security.Permission)>
<java.io.BufferedWriter: void close()>/enter-monitor/instruction4	4	<java.io.BufferedWriter: void close()>/$stack9	<java.io.BufferedWriter: void close()>
<java.net.SocketPermissionCollection: boolean implies(java.security.Permission)>/enter-monitor/instruction12	12	<java.net.SocketPermissionCollection: boolean implies(java.security.Permission)>/l0#_0	<java.net.SocketPermissionCollection: boolean implies(java.security.Permission)>
<java.net.SocketPermissionCollection: java.util.Enumeration elements()>/enter-monitor/instruction3	3	<java.net.SocketPermissionCollection: java.util.Enumeration elements()>/l0#_0	<java.net.SocketPermissionCollection: java.util.Enumeration elements()>
<java.net.SocketPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction9	9	<java.net.SocketPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/l0#_0	<java.net.SocketPermissionCollection: void writeObject(java.io.ObjectOutputStream)>
<java.util.concurrent.ForkJoinTask: int setCompletion(int)>/enter-monitor/instruction15	15	<java.util.concurrent.ForkJoinTask: int setCompletion(int)>/l0#_0	<java.util.concurrent.ForkJoinTask: int setCompletion(int)>
<sun.nio.ch.SourceChannelImpl: void implCloseSelectableChannel()>/enter-monitor/instruction4	4	<sun.nio.ch.SourceChannelImpl: void implCloseSelectableChannel()>/$stack5	<sun.nio.ch.SourceChannelImpl: void implCloseSelectableChannel()>
<java.util.concurrent.ForkJoinTask: void internalWait(long)>/enter-monitor/instruction12	12	<java.util.concurrent.ForkJoinTask: void internalWait(long)>/l0#_0	<java.util.concurrent.ForkJoinTask: void internalWait(long)>
<sun.nio.ch.SourceChannelImpl: void kill()>/enter-monitor/instruction4	4	<sun.nio.ch.SourceChannelImpl: void kill()>/$stack3	<sun.nio.ch.SourceChannelImpl: void kill()>
<java.util.concurrent.ForkJoinTask: int externalAwaitDone()>/enter-monitor/instruction34	34	<java.util.concurrent.ForkJoinTask: int externalAwaitDone()>/l0#_0	<java.util.concurrent.ForkJoinTask: int externalAwaitDone()>
<java.util.concurrent.ForkJoinTask: int externalInterruptibleAwaitDone()>/enter-monitor/instruction41	41	<java.util.concurrent.ForkJoinTask: int externalInterruptibleAwaitDone()>/l0#_0	<java.util.concurrent.ForkJoinTask: int externalInterruptibleAwaitDone()>
<sun.nio.ch.SourceChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction6	6	<sun.nio.ch.SourceChannelImpl: int read(java.nio.ByteBuffer)>/$stack7	<sun.nio.ch.SourceChannelImpl: int read(java.nio.ByteBuffer)>
<sun.nio.ch.SourceChannelImpl: long read(java.nio.ByteBuffer[])>/enter-monitor/instruction10	10	<sun.nio.ch.SourceChannelImpl: long read(java.nio.ByteBuffer[])>/$stack9	<sun.nio.ch.SourceChannelImpl: long read(java.nio.ByteBuffer[])>
<java.util.concurrent.ForkJoinTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>/enter-monitor/instruction75	75	<java.util.concurrent.ForkJoinTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>/l0#_0	<java.util.concurrent.ForkJoinTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.Format$FieldDelegate)>/enter-monitor/instruction95	95	<java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.Format$FieldDelegate)>/$stack27	<java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.Format$FieldDelegate)>
<java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.Format$FieldDelegate)>/enter-monitor/instruction96	96	<java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.Format$FieldDelegate)>/$stack20	<java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.Format$FieldDelegate)>
<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.Format$FieldDelegate)>/enter-monitor/instruction25	25	<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.Format$FieldDelegate)>/$stack14	<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.Format$FieldDelegate)>
<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.Format$FieldDelegate,boolean)>/enter-monitor/instruction26	26	<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.Format$FieldDelegate,boolean)>/$stack15	<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.Format$FieldDelegate,boolean)>
<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>/enter-monitor/instruction3	3	<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>/$stack2	<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>
<java.security.BasicPermissionCollection: void add(java.security.Permission)>/enter-monitor/instruction39	39	<java.security.BasicPermissionCollection: void add(java.security.Permission)>/l0#_0	<java.security.BasicPermissionCollection: void add(java.security.Permission)>
<java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>/enter-monitor/instruction19	19	<java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>/l0#_0	<java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>
<java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>/enter-monitor/instruction56	56	<java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>/l0#_0	<java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>
<java.security.BasicPermissionCollection: java.util.Enumeration elements()>/enter-monitor/instruction3	3	<java.security.BasicPermissionCollection: java.util.Enumeration elements()>/l0#_0	<java.security.BasicPermissionCollection: java.util.Enumeration elements()>
<java.security.BasicPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction10	10	<java.security.BasicPermissionCollection: void writeObject(java.io.ObjectOutputStream)>/l0#_0	<java.security.BasicPermissionCollection: void writeObject(java.io.ObjectOutputStream)>
<java.nio.channels.Channels: void writeFully(java.nio.channels.WritableByteChannel,java.nio.ByteBuffer)>/enter-monitor/instruction8	8	<java.nio.channels.Channels: void writeFully(java.nio.channels.WritableByteChannel,java.nio.ByteBuffer)>/$stack6	<java.nio.channels.Channels: void writeFully(java.nio.channels.WritableByteChannel,java.nio.ByteBuffer)>
<java.util.Collections$SynchronizedSortedMap: java.util.Comparator comparator()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedSortedMap: java.util.Comparator comparator()>/$stack3	<java.util.Collections$SynchronizedSortedMap: java.util.Comparator comparator()>
<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap headMap(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap headMap(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap headMap(java.lang.Object)>
<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap tailMap(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap tailMap(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap tailMap(java.lang.Object)>
<java.util.Collections$SynchronizedSortedMap: java.lang.Object firstKey()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedSortedMap: java.lang.Object firstKey()>/$stack3	<java.util.Collections$SynchronizedSortedMap: java.lang.Object firstKey()>
<java.util.Collections$SynchronizedSortedMap: java.lang.Object lastKey()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedSortedMap: java.lang.Object lastKey()>/$stack3	<java.util.Collections$SynchronizedSortedMap: java.lang.Object lastKey()>
<sun.util.resources.OpenListResourceBundle: java.util.Set keySet()>/enter-monitor/instruction15	15	<sun.util.resources.OpenListResourceBundle: java.util.Set keySet()>/l0#_0	<sun.util.resources.OpenListResourceBundle: java.util.Set keySet()>
<sun.util.resources.OpenListResourceBundle: void loadLookup()>/enter-monitor/instruction24	24	<sun.util.resources.OpenListResourceBundle: void loadLookup()>/l0#_0	<sun.util.resources.OpenListResourceBundle: void loadLookup()>
<sun.nio.ch.FileChannelImpl: void implCloseChannel()>/enter-monitor/instruction12	12	<sun.nio.ch.FileChannelImpl: void implCloseChannel()>/l2#_119	<sun.nio.ch.FileChannelImpl: void implCloseChannel()>
<sun.nio.ch.FileChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction11	11	<sun.nio.ch.FileChannelImpl: int read(java.nio.ByteBuffer)>/$stack9	<sun.nio.ch.FileChannelImpl: int read(java.nio.ByteBuffer)>
<sun.nio.ch.FileChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction21	21	<sun.nio.ch.FileChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/$stack16	<sun.nio.ch.FileChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.FileChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction11	11	<sun.nio.ch.FileChannelImpl: int write(java.nio.ByteBuffer)>/$stack9	<sun.nio.ch.FileChannelImpl: int write(java.nio.ByteBuffer)>
<sun.nio.ch.FileChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction21	21	<sun.nio.ch.FileChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/$stack16	<sun.nio.ch.FileChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.FileChannelImpl: long position()>/enter-monitor/instruction5	5	<sun.nio.ch.FileChannelImpl: long position()>/$stack9	<sun.nio.ch.FileChannelImpl: long position()>
<sun.nio.ch.FileChannelImpl: java.nio.channels.FileChannel position(long)>/enter-monitor/instruction11	11	<sun.nio.ch.FileChannelImpl: java.nio.channels.FileChannel position(long)>/$stack11	<sun.nio.ch.FileChannelImpl: java.nio.channels.FileChannel position(long)>
<sun.nio.ch.FileChannelImpl: long size()>/enter-monitor/instruction5	5	<sun.nio.ch.FileChannelImpl: long size()>/$stack9	<sun.nio.ch.FileChannelImpl: long size()>
<sun.nio.ch.FileChannelImpl: java.nio.channels.FileChannel truncate(long)>/enter-monitor/instruction17	17	<sun.nio.ch.FileChannelImpl: java.nio.channels.FileChannel truncate(long)>/$stack17	<sun.nio.ch.FileChannelImpl: java.nio.channels.FileChannel truncate(long)>
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/enter-monitor/instruction11	11	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/l0#_0	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/enter-monitor/instruction63	63	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/l0#_0	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/enter-monitor/instruction81	81	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/l0#_0	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>
<sun.nio.ch.FileChannelImpl: long transferToDirectly(long,int,java.nio.channels.WritableByteChannel)>/enter-monitor/instruction52	52	<sun.nio.ch.FileChannelImpl: long transferToDirectly(long,int,java.nio.channels.WritableByteChannel)>/$stack24	<sun.nio.ch.FileChannelImpl: long transferToDirectly(long,int,java.nio.channels.WritableByteChannel)>
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte getSeedByte()>/enter-monitor/instruction3	3	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte getSeedByte()>/l0#_0	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte getSeedByte()>
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte getSeedByte()>/enter-monitor/instruction24	24	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte getSeedByte()>/l0#_0	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte getSeedByte()>
<java.io.File: java.nio.file.Path toPath()>/enter-monitor/instruction5	5	<java.io.File: java.nio.file.Path toPath()>/l0#_0	<java.io.File: java.nio.file.Path toPath()>
<sun.nio.ch.FileChannelImpl: long transferFromFileChannel(sun.nio.ch.FileChannelImpl,long,long)>/enter-monitor/instruction12	12	<sun.nio.ch.FileChannelImpl: long transferFromFileChannel(sun.nio.ch.FileChannelImpl,long,long)>/$stack23	<sun.nio.ch.FileChannelImpl: long transferFromFileChannel(sun.nio.ch.FileChannelImpl,long,long)>
<sun.nio.ch.FileChannelImpl: int read(java.nio.ByteBuffer,long)>/enter-monitor/instruction25	25	<sun.nio.ch.FileChannelImpl: int read(java.nio.ByteBuffer,long)>/$stack11	<sun.nio.ch.FileChannelImpl: int read(java.nio.ByteBuffer,long)>
<sun.nio.ch.FileChannelImpl: int write(java.nio.ByteBuffer,long)>/enter-monitor/instruction25	25	<sun.nio.ch.FileChannelImpl: int write(java.nio.ByteBuffer,long)>/$stack11	<sun.nio.ch.FileChannelImpl: int write(java.nio.ByteBuffer,long)>
<sun.nio.ch.FileChannelImpl: sun.nio.ch.FileLockTable fileLockTable()>/enter-monitor/instruction5	5	<sun.nio.ch.FileChannelImpl: sun.nio.ch.FileLockTable fileLockTable()>/l0#_0	<sun.nio.ch.FileChannelImpl: sun.nio.ch.FileLockTable fileLockTable()>
<java.lang.ClassValue: java.lang.ClassValue$ClassValueMap initializeMap(java.lang.Class)>/enter-monitor/instruction4	4	<java.lang.ClassValue: java.lang.ClassValue$ClassValueMap initializeMap(java.lang.Class)>/$stack4	<java.lang.ClassValue: java.lang.ClassValue$ClassValueMap initializeMap(java.lang.Class)>
<java.io.Console$LineReader: int read(char[],int,int)>/enter-monitor/instruction20	20	<java.io.Console$LineReader: int read(char[],int,int)>/$stack15	<java.io.Console$LineReader: int read(char[],int,int)>
<sun.nio.ch.ServerSocketAdaptor: java.net.Socket accept()>/enter-monitor/instruction5	5	<sun.nio.ch.ServerSocketAdaptor: java.net.Socket accept()>/$stack12	<sun.nio.ch.ServerSocketAdaptor: java.net.Socket accept()>
<java.util.Locale: java.lang.String toLanguageTag()>/enter-monitor/instruction70	70	<java.util.Locale: java.lang.String toLanguageTag()>/l0#_0	<java.util.Locale: java.lang.String toLanguageTag()>
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>/enter-monitor/instruction90	90	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>/l2#_76	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>
<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction5	5	<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>/l0#_0	<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>
<javax.crypto.JceSecurity: java.net.URL getCodeBase(java.lang.Class)>/enter-monitor/instruction4	4	<javax.crypto.JceSecurity: java.net.URL getCodeBase(java.lang.Class)>/$stack4	<javax.crypto.JceSecurity: java.net.URL getCodeBase(java.lang.Class)>
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/enter-monitor/instruction55	55	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/$stack18	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/enter-monitor/instruction67	67	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/l8#_227	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/enter-monitor/instruction27	27	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/$stack22	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/enter-monitor/instruction39	39	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/l7#_337	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/enter-monitor/instruction91	91	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/l11#_368	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/enter-monitor/instruction117	117	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/l15#27#_386	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<sun.net.www.protocol.jar.JarFileFactory: java.net.URLConnection getConnection(java.util.jar.JarFile)>/enter-monitor/instruction5	5	<sun.net.www.protocol.jar.JarFileFactory: java.net.URLConnection getConnection(java.util.jar.JarFile)>/$stack5	<sun.net.www.protocol.jar.JarFileFactory: java.net.URLConnection getConnection(java.util.jar.JarFile)>
<sun.net.www.protocol.jar.JarFileFactory: java.util.jar.JarFile get(java.net.URL,boolean)>/enter-monitor/instruction7	7	<sun.net.www.protocol.jar.JarFileFactory: java.util.jar.JarFile get(java.net.URL,boolean)>/$stack11	<sun.net.www.protocol.jar.JarFileFactory: java.util.jar.JarFile get(java.net.URL,boolean)>
<sun.net.www.protocol.jar.JarFileFactory: java.util.jar.JarFile get(java.net.URL,boolean)>/enter-monitor/instruction21	21	<sun.net.www.protocol.jar.JarFileFactory: java.util.jar.JarFile get(java.net.URL,boolean)>/$stack16	<sun.net.www.protocol.jar.JarFileFactory: java.util.jar.JarFile get(java.net.URL,boolean)>
<sun.net.www.protocol.jar.JarFileFactory: void close(java.util.jar.JarFile)>/enter-monitor/instruction5	5	<sun.net.www.protocol.jar.JarFileFactory: void close(java.util.jar.JarFile)>/$stack5	<sun.net.www.protocol.jar.JarFileFactory: void close(java.util.jar.JarFile)>
<java.lang.Throwable: void printStackTrace(java.lang.Throwable$PrintStreamOrWriter)>/enter-monitor/instruction9	9	<java.lang.Throwable: void printStackTrace(java.lang.Throwable$PrintStreamOrWriter)>/$stack13	<java.lang.Throwable: void printStackTrace(java.lang.Throwable$PrintStreamOrWriter)>
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>/enter-monitor/instruction26	26	<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>/l0#_0	<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
<java.lang.UNIXProcess$DeferredCloseInputStream: void raise()>/enter-monitor/instruction4	4	<java.lang.UNIXProcess$DeferredCloseInputStream: void raise()>/$stack3	<java.lang.UNIXProcess$DeferredCloseInputStream: void raise()>
<java.lang.UNIXProcess$DeferredCloseInputStream: void lower()>/enter-monitor/instruction4	4	<java.lang.UNIXProcess$DeferredCloseInputStream: void lower()>/$stack3	<java.lang.UNIXProcess$DeferredCloseInputStream: void lower()>
<java.lang.UNIXProcess$DeferredCloseInputStream: void closeDeferred(java.io.InputStream)>/enter-monitor/instruction5	5	<java.lang.UNIXProcess$DeferredCloseInputStream: void closeDeferred(java.io.InputStream)>/$stack4	<java.lang.UNIXProcess$DeferredCloseInputStream: void closeDeferred(java.io.InputStream)>
<java.lang.UNIXProcess$DeferredCloseInputStream: void close()>/enter-monitor/instruction4	4	<java.lang.UNIXProcess$DeferredCloseInputStream: void close()>/$stack3	<java.lang.UNIXProcess$DeferredCloseInputStream: void close()>
<java.lang.Package: java.lang.Package getSystemPackage(java.lang.String)>/enter-monitor/instruction4	4	<java.lang.Package: java.lang.Package getSystemPackage(java.lang.String)>/$stack5	<java.lang.Package: java.lang.Package getSystemPackage(java.lang.String)>
<java.lang.Package: java.lang.Package[] getSystemPackages()>/enter-monitor/instruction4	4	<java.lang.Package: java.lang.Package[] getSystemPackages()>/$stack5	<java.lang.Package: java.lang.Package[] getSystemPackages()>
<sun.security.util.Password: byte[] convertToBytes(char[])>/enter-monitor/instruction29	29	<sun.security.util.Password: byte[] convertToBytes(char[])>/$stack13	<sun.security.util.Password: byte[] convertToBytes(char[])>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>/enter-monitor/instruction6	6	<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>/$stack10	<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
<java.lang.ClassLoader: java.lang.Class loadClassInternal(java.lang.String)>/enter-monitor/instruction6	6	<java.lang.ClassLoader: java.lang.Class loadClassInternal(java.lang.String)>/l0#_0	<java.lang.ClassLoader: java.lang.Class loadClassInternal(java.lang.String)>
<java.lang.ClassLoader: void checkCerts(java.lang.String,java.security.CodeSource)>/enter-monitor/instruction22	22	<java.lang.ClassLoader: void checkCerts(java.lang.String,java.security.CodeSource)>/l0#_0	<java.lang.ClassLoader: void checkCerts(java.lang.String,java.security.CodeSource)>
<java.security.KeyPairGenerator$Delegate: java.security.KeyPairGeneratorSpi nextSpi(java.security.KeyPairGeneratorSpi,boolean)>/enter-monitor/instruction6	6	<java.security.KeyPairGenerator$Delegate: java.security.KeyPairGeneratorSpi nextSpi(java.security.KeyPairGeneratorSpi,boolean)>/$stack8	<java.security.KeyPairGenerator$Delegate: java.security.KeyPairGeneratorSpi nextSpi(java.security.KeyPairGeneratorSpi,boolean)>
<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/enter-monitor/instruction12	12	<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/$stack12	<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>/enter-monitor/instruction5	5	<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>/$stack6	<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>/enter-monitor/instruction29	29	<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>/$stack13	<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>
<java.lang.ClassLoader: java.lang.Package[] getPackages()>/enter-monitor/instruction4	4	<java.lang.ClassLoader: java.lang.Package[] getPackages()>/$stack5	<java.lang.ClassLoader: java.lang.Package[] getPackages()>
<javax.security.auth.Subject$ClassSet: void <init>(javax.security.auth.Subject,int,java.lang.Class)>/enter-monitor/instruction15	15	<javax.security.auth.Subject$ClassSet: void <init>(javax.security.auth.Subject,int,java.lang.Class)>/$stack11	<javax.security.auth.Subject$ClassSet: void <init>(javax.security.auth.Subject,int,java.lang.Class)>
<javax.security.auth.Subject$ClassSet: void <init>(javax.security.auth.Subject,int,java.lang.Class)>/enter-monitor/instruction26	26	<javax.security.auth.Subject$ClassSet: void <init>(javax.security.auth.Subject,int,java.lang.Class)>/$stack9	<javax.security.auth.Subject$ClassSet: void <init>(javax.security.auth.Subject,int,java.lang.Class)>
<javax.security.auth.Subject$ClassSet: void <init>(javax.security.auth.Subject,int,java.lang.Class)>/enter-monitor/instruction37	37	<javax.security.auth.Subject$ClassSet: void <init>(javax.security.auth.Subject,int,java.lang.Class)>/$stack13	<javax.security.auth.Subject$ClassSet: void <init>(javax.security.auth.Subject,int,java.lang.Class)>
<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/enter-monitor/instruction53	53	<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/l5#9#_1894	<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>
<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/enter-monitor/instruction71	71	<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/$stack20	<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>
<java.lang.ClassLoader: long findNative(java.lang.ClassLoader,java.lang.String)>/enter-monitor/instruction11	11	<java.lang.ClassLoader: long findNative(java.lang.ClassLoader,java.lang.String)>/l2#_1957	<java.lang.ClassLoader: long findNative(java.lang.ClassLoader,java.lang.String)>
<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>/enter-monitor/instruction5	5	<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>/$stack4	<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>
<java.lang.ClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>/enter-monitor/instruction6	6	<java.lang.ClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>/$stack5	<java.lang.ClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>
<java.lang.ClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>/enter-monitor/instruction6	6	<java.lang.ClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>/$stack5	<java.lang.ClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>
<java.lang.ClassLoader: void clearAssertionStatus()>/enter-monitor/instruction4	4	<java.lang.ClassLoader: void clearAssertionStatus()>/$stack3	<java.lang.ClassLoader: void clearAssertionStatus()>
<java.lang.ClassLoader: boolean desiredAssertionStatus(java.lang.String)>/enter-monitor/instruction5	5	<java.lang.ClassLoader: boolean desiredAssertionStatus(java.lang.String)>/$stack6	<java.lang.ClassLoader: boolean desiredAssertionStatus(java.lang.String)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String makeDumpableClassName(java.lang.String)>/enter-monitor/instruction4	4	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String makeDumpableClassName(java.lang.String)>/$stack4	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String makeDumpableClassName(java.lang.String)>
<java.security.KeyFactory: java.security.Provider getProvider()>/enter-monitor/instruction4	4	<java.security.KeyFactory: java.security.Provider getProvider()>/$stack3	<java.security.KeyFactory: java.security.Provider getProvider()>
<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>/enter-monitor/instruction5	5	<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>/$stack7	<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey findKey(java.nio.channels.Selector)>/enter-monitor/instruction5	5	<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey findKey(java.nio.channels.Selector)>/$stack5	<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey findKey(java.nio.channels.Selector)>
<java.nio.channels.spi.AbstractSelectableChannel: void removeKey(java.nio.channels.SelectionKey)>/enter-monitor/instruction5	5	<java.nio.channels.spi.AbstractSelectableChannel: void removeKey(java.nio.channels.SelectionKey)>/$stack5	<java.nio.channels.spi.AbstractSelectableChannel: void removeKey(java.nio.channels.SelectionKey)>
<java.nio.channels.spi.AbstractSelectableChannel: boolean haveValidKeys()>/enter-monitor/instruction4	4	<java.nio.channels.spi.AbstractSelectableChannel: boolean haveValidKeys()>/$stack4	<java.nio.channels.spi.AbstractSelectableChannel: boolean haveValidKeys()>
<java.nio.channels.spi.AbstractSelectableChannel: boolean isRegistered()>/enter-monitor/instruction4	4	<java.nio.channels.spi.AbstractSelectableChannel: boolean isRegistered()>/$stack3	<java.nio.channels.spi.AbstractSelectableChannel: boolean isRegistered()>
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>/enter-monitor/instruction7	7	<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>/$stack9	<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>/enter-monitor/instruction32	32	<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>/$stack17	<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>
<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>/enter-monitor/instruction5	5	<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>/$stack6	<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>
<java.nio.channels.spi.AbstractSelectableChannel: boolean isBlocking()>/enter-monitor/instruction4	4	<java.nio.channels.spi.AbstractSelectableChannel: boolean isBlocking()>/$stack3	<java.nio.channels.spi.AbstractSelectableChannel: boolean isBlocking()>
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>/enter-monitor/instruction5	5	<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>/$stack4	<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>
<java.nio.channels.spi.AbstractSelectionKey: void cancel()>/enter-monitor/instruction3	3	<java.nio.channels.spi.AbstractSelectionKey: void cancel()>/l0#_0	<java.nio.channels.spi.AbstractSelectionKey: void cancel()>
<sun.nio.ch.SelectorImpl: int lockAndDoSelect(long)>/enter-monitor/instruction4	4	<sun.nio.ch.SelectorImpl: int lockAndDoSelect(long)>/l0#_0	<sun.nio.ch.SelectorImpl: int lockAndDoSelect(long)>
<sun.nio.ch.SelectorImpl: int lockAndDoSelect(long)>/enter-monitor/instruction12	12	<sun.nio.ch.SelectorImpl: int lockAndDoSelect(long)>/$stack11	<sun.nio.ch.SelectorImpl: int lockAndDoSelect(long)>
<sun.nio.ch.SelectorImpl: int lockAndDoSelect(long)>/enter-monitor/instruction15	15	<sun.nio.ch.SelectorImpl: int lockAndDoSelect(long)>/$stack12	<sun.nio.ch.SelectorImpl: int lockAndDoSelect(long)>
<sun.nio.ch.SelectorImpl: void implCloseSelector()>/enter-monitor/instruction4	4	<sun.nio.ch.SelectorImpl: void implCloseSelector()>/l0#_0	<sun.nio.ch.SelectorImpl: void implCloseSelector()>
<sun.nio.ch.SelectorImpl: void implCloseSelector()>/enter-monitor/instruction7	7	<sun.nio.ch.SelectorImpl: void implCloseSelector()>/$stack9	<sun.nio.ch.SelectorImpl: void implCloseSelector()>
<sun.nio.ch.SelectorImpl: void implCloseSelector()>/enter-monitor/instruction10	10	<sun.nio.ch.SelectorImpl: void implCloseSelector()>/$stack10	<sun.nio.ch.SelectorImpl: void implCloseSelector()>
<sun.nio.ch.SelectorImpl: java.nio.channels.SelectionKey register(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object)>/enter-monitor/instruction17	17	<sun.nio.ch.SelectorImpl: java.nio.channels.SelectionKey register(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object)>/$stack11	<sun.nio.ch.SelectorImpl: java.nio.channels.SelectionKey register(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object)>
<sun.nio.ch.SelectorImpl: void processDeregisterQueue()>/enter-monitor/instruction4	4	<sun.nio.ch.SelectorImpl: void processDeregisterQueue()>/l1#_142	<sun.nio.ch.SelectorImpl: void processDeregisterQueue()>
<java.lang.ref.Finalizer$3: void run()>/enter-monitor/instruction10	10	<java.lang.ref.Finalizer$3: void run()>/$stack7	<java.lang.ref.Finalizer$3: void run()>
<java.io.BufferedReader: int read()>/enter-monitor/instruction4	4	<java.io.BufferedReader: int read()>/$stack3	<java.io.BufferedReader: int read()>
<java.io.BufferedReader: int read(char[],int,int)>/enter-monitor/instruction7	7	<java.io.BufferedReader: int read(char[],int,int)>/$stack8	<java.io.BufferedReader: int read(char[],int,int)>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.BreakIteratorProvider getBreakIteratorProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.BreakIteratorProvider getBreakIteratorProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.BreakIteratorProvider getBreakIteratorProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.CollatorProvider getCollatorProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.CollatorProvider getCollatorProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.CollatorProvider getCollatorProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DateFormatProvider getDateFormatProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DateFormatProvider getDateFormatProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DateFormatProvider getDateFormatProvider()>
<java.io.BufferedReader: java.lang.String readLine(boolean)>/enter-monitor/instruction6	6	<java.io.BufferedReader: java.lang.String readLine(boolean)>/$stack11	<java.io.BufferedReader: java.lang.String readLine(boolean)>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DateFormatSymbolsProvider getDateFormatSymbolsProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DateFormatSymbolsProvider getDateFormatSymbolsProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DateFormatSymbolsProvider getDateFormatSymbolsProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DecimalFormatSymbolsProvider getDecimalFormatSymbolsProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DecimalFormatSymbolsProvider getDecimalFormatSymbolsProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DecimalFormatSymbolsProvider getDecimalFormatSymbolsProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.NumberFormatProvider getNumberFormatProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.NumberFormatProvider getNumberFormatProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.NumberFormatProvider getNumberFormatProvider()>
<java.io.BufferedReader: long skip(long)>/enter-monitor/instruction11	11	<java.io.BufferedReader: long skip(long)>/$stack10	<java.io.BufferedReader: long skip(long)>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CurrencyNameProvider getCurrencyNameProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CurrencyNameProvider getCurrencyNameProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CurrencyNameProvider getCurrencyNameProvider()>
<java.io.BufferedReader: boolean ready()>/enter-monitor/instruction4	4	<java.io.BufferedReader: boolean ready()>/$stack3	<java.io.BufferedReader: boolean ready()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.LocaleNameProvider getLocaleNameProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.LocaleNameProvider getLocaleNameProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.LocaleNameProvider getLocaleNameProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.TimeZoneNameProvider getTimeZoneNameProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.TimeZoneNameProvider getTimeZoneNameProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.TimeZoneNameProvider getTimeZoneNameProvider()>
<java.io.BufferedReader: void mark(int)>/enter-monitor/instruction10	10	<java.io.BufferedReader: void mark(int)>/$stack4	<java.io.BufferedReader: void mark(int)>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CalendarDataProvider getCalendarDataProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CalendarDataProvider getCalendarDataProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CalendarDataProvider getCalendarDataProvider()>
<java.io.BufferedReader: void reset()>/enter-monitor/instruction4	4	<java.io.BufferedReader: void reset()>/$stack3	<java.io.BufferedReader: void reset()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CalendarNameProvider getCalendarNameProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CalendarNameProvider getCalendarNameProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CalendarNameProvider getCalendarNameProvider()>
<java.io.BufferedReader: void close()>/enter-monitor/instruction4	4	<java.io.BufferedReader: void close()>/$stack4	<java.io.BufferedReader: void close()>
<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.spi.CalendarProvider getCalendarProvider()>/enter-monitor/instruction11	11	<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.spi.CalendarProvider getCalendarProvider()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.spi.CalendarProvider getCalendarProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.resources.LocaleData getLocaleData()>/enter-monitor/instruction5	5	<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.resources.LocaleData getLocaleData()>/l0#_0	<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.resources.LocaleData getLocaleData()>
<sun.nio.ch.DatagramChannelImpl: java.net.DatagramSocket socket()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: java.net.DatagramSocket socket()>/$stack3	<sun.nio.ch.DatagramChannelImpl: java.net.DatagramSocket socket()>
<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress getLocalAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress getLocalAddress()>/$stack3	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress getLocalAddress()>
<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress getRemoteAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress getRemoteAddress()>/$stack3	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress getRemoteAddress()>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>/enter-monitor/instruction24	24	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>/$stack10	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel setOption(java.net.SocketOption,java.lang.Object)>
<sun.nio.cs.StreamEncoder: void flushBuffer()>/enter-monitor/instruction4	4	<sun.nio.cs.StreamEncoder: void flushBuffer()>/$stack3	<sun.nio.cs.StreamEncoder: void flushBuffer()>
<sun.nio.ch.DatagramChannelImpl: java.lang.Object getOption(java.net.SocketOption)>/enter-monitor/instruction23	23	<sun.nio.ch.DatagramChannelImpl: java.lang.Object getOption(java.net.SocketOption)>/$stack9	<sun.nio.ch.DatagramChannelImpl: java.lang.Object getOption(java.net.SocketOption)>
<sun.nio.cs.StreamEncoder: void write(char[],int,int)>/enter-monitor/instruction7	7	<sun.nio.cs.StreamEncoder: void write(char[],int,int)>/$stack6	<sun.nio.cs.StreamEncoder: void write(char[],int,int)>
<sun.nio.cs.StreamEncoder: void flush()>/enter-monitor/instruction4	4	<sun.nio.cs.StreamEncoder: void flush()>/$stack3	<sun.nio.cs.StreamEncoder: void flush()>
<sun.nio.cs.StreamEncoder: void close()>/enter-monitor/instruction4	4	<sun.nio.cs.StreamEncoder: void close()>/$stack3	<sun.nio.cs.StreamEncoder: void close()>
<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress receive(java.nio.ByteBuffer)>/enter-monitor/instruction15	15	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress receive(java.nio.ByteBuffer)>/$stack11	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress receive(java.nio.ByteBuffer)>
<sun.nio.fs.Cancellable: void cancel()>/enter-monitor/instruction4	4	<sun.nio.fs.Cancellable: void cancel()>/$stack3	<sun.nio.fs.Cancellable: void cancel()>
<sun.nio.fs.Cancellable: java.lang.Throwable exception()>/enter-monitor/instruction4	4	<sun.nio.fs.Cancellable: java.lang.Throwable exception()>/$stack3	<sun.nio.fs.Cancellable: java.lang.Throwable exception()>
<sun.nio.fs.Cancellable: void run()>/enter-monitor/instruction5	5	<sun.nio.fs.Cancellable: void run()>/$stack8	<sun.nio.fs.Cancellable: void run()>
<sun.nio.fs.Cancellable: void run()>/enter-monitor/instruction22	22	<sun.nio.fs.Cancellable: void run()>/$stack24	<sun.nio.fs.Cancellable: void run()>
<sun.nio.fs.Cancellable: void run()>/enter-monitor/instruction32	32	<sun.nio.fs.Cancellable: void run()>/$stack26	<sun.nio.fs.Cancellable: void run()>
<sun.nio.fs.Cancellable: void run()>/enter-monitor/instruction49	49	<sun.nio.fs.Cancellable: void run()>/$stack15	<sun.nio.fs.Cancellable: void run()>
<sun.nio.ch.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>/enter-monitor/instruction10	10	<sun.nio.ch.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>/$stack12	<sun.nio.ch.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>/enter-monitor/instruction21	21	<sun.nio.ch.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>/$stack15	<sun.nio.ch.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>/enter-monitor/instruction90	90	<sun.nio.ch.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>/$stack29	<sun.nio.ch.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction9	9	<sun.nio.ch.DatagramChannelImpl: int read(java.nio.ByteBuffer)>/$stack7	<sun.nio.ch.DatagramChannelImpl: int read(java.nio.ByteBuffer)>
<sun.nio.ch.DatagramChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction12	12	<sun.nio.ch.DatagramChannelImpl: int read(java.nio.ByteBuffer)>/$stack8	<sun.nio.ch.DatagramChannelImpl: int read(java.nio.ByteBuffer)>
<sun.nio.ch.DatagramChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction15	15	<sun.nio.ch.DatagramChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/$stack14	<sun.nio.ch.DatagramChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.DatagramChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction18	18	<sun.nio.ch.DatagramChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/$stack15	<sun.nio.ch.DatagramChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.DatagramChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction9	9	<sun.nio.ch.DatagramChannelImpl: int write(java.nio.ByteBuffer)>/$stack7	<sun.nio.ch.DatagramChannelImpl: int write(java.nio.ByteBuffer)>
<sun.nio.ch.DatagramChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction12	12	<sun.nio.ch.DatagramChannelImpl: int write(java.nio.ByteBuffer)>/$stack8	<sun.nio.ch.DatagramChannelImpl: int write(java.nio.ByteBuffer)>
<sun.nio.ch.DatagramChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction15	15	<sun.nio.ch.DatagramChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/$stack14	<sun.nio.ch.DatagramChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.DatagramChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction18	18	<sun.nio.ch.DatagramChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/$stack15	<sun.nio.ch.DatagramChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress localAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress localAddress()>/$stack3	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress localAddress()>
<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress remoteAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress remoteAddress()>/$stack3	<sun.nio.ch.DatagramChannelImpl: java.net.SocketAddress remoteAddress()>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>/enter-monitor/instruction5	5	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>/$stack10	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>/enter-monitor/instruction8	8	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>/$stack11	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>/enter-monitor/instruction11	11	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>/$stack12	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel bind(java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: boolean isConnected()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: boolean isConnected()>/$stack3	<sun.nio.ch.DatagramChannelImpl: boolean isConnected()>
<sun.nio.ch.DatagramChannelImpl: void ensureOpenAndUnconnected()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: void ensureOpenAndUnconnected()>/$stack3	<sun.nio.ch.DatagramChannelImpl: void ensureOpenAndUnconnected()>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>/enter-monitor/instruction6	6	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>/$stack17	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>/enter-monitor/instruction9	9	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>/$stack18	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>/enter-monitor/instruction12	12	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>/$stack19	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>/enter-monitor/instruction44	44	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>/$stack31	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()>/$stack10	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()>/enter-monitor/instruction7	7	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()>/$stack11	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()>/enter-monitor/instruction10	10	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()>/$stack12	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()>
<sun.nio.ch.DatagramChannelImpl: java.nio.channels.MembershipKey innerJoin(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)>/enter-monitor/instruction60	60	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.MembershipKey innerJoin(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)>/$stack20	<sun.nio.ch.DatagramChannelImpl: java.nio.channels.MembershipKey innerJoin(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)>
<sun.nio.ch.DatagramChannelImpl: void drop(sun.nio.ch.MembershipKeyImpl)>/enter-monitor/instruction12	12	<sun.nio.ch.DatagramChannelImpl: void drop(sun.nio.ch.MembershipKeyImpl)>/$stack6	<sun.nio.ch.DatagramChannelImpl: void drop(sun.nio.ch.MembershipKeyImpl)>
<sun.nio.ch.DatagramChannelImpl: void block(sun.nio.ch.MembershipKeyImpl,java.net.InetAddress)>/enter-monitor/instruction20	20	<sun.nio.ch.DatagramChannelImpl: void block(sun.nio.ch.MembershipKeyImpl,java.net.InetAddress)>/$stack9	<sun.nio.ch.DatagramChannelImpl: void block(sun.nio.ch.MembershipKeyImpl,java.net.InetAddress)>
<sun.nio.ch.DatagramChannelImpl: void unblock(sun.nio.ch.MembershipKeyImpl,java.net.InetAddress)>/enter-monitor/instruction20	20	<sun.nio.ch.DatagramChannelImpl: void unblock(sun.nio.ch.MembershipKeyImpl,java.net.InetAddress)>/$stack8	<sun.nio.ch.DatagramChannelImpl: void unblock(sun.nio.ch.MembershipKeyImpl,java.net.InetAddress)>
<sun.nio.ch.DatagramChannelImpl: void implCloseSelectableChannel()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: void implCloseSelectableChannel()>/$stack5	<sun.nio.ch.DatagramChannelImpl: void implCloseSelectableChannel()>
<sun.nio.ch.DatagramChannelImpl: void kill()>/enter-monitor/instruction4	4	<sun.nio.ch.DatagramChannelImpl: void kill()>/$stack3	<sun.nio.ch.DatagramChannelImpl: void kill()>
<sun.nio.ch.DatagramChannelImpl: int poll(int,long)>/enter-monitor/instruction16	16	<sun.nio.ch.DatagramChannelImpl: int poll(int,long)>/$stack12	<sun.nio.ch.DatagramChannelImpl: int poll(int,long)>
<sun.nio.ch.DatagramChannelImpl: int poll(int,long)>/enter-monitor/instruction21	21	<sun.nio.ch.DatagramChannelImpl: int poll(int,long)>/$stack13	<sun.nio.ch.DatagramChannelImpl: int poll(int,long)>
<java.lang.ClassLoader$NativeLibrary: void finalize()>/enter-monitor/instruction4	4	<java.lang.ClassLoader$NativeLibrary: void finalize()>/$stack6	<java.lang.ClassLoader$NativeLibrary: void finalize()>
<sun.security.provider.NativePRNG$RandomIO: sun.security.provider.SecureRandom getMixRandom()>/enter-monitor/instruction6	6	<sun.security.provider.NativePRNG$RandomIO: sun.security.provider.SecureRandom getMixRandom()>/$stack5	<sun.security.provider.NativePRNG$RandomIO: sun.security.provider.SecureRandom getMixRandom()>
<sun.security.provider.NativePRNG$RandomIO: byte[] implGenerateSeed(int)>/enter-monitor/instruction5	5	<sun.security.provider.NativePRNG$RandomIO: byte[] implGenerateSeed(int)>/$stack5	<sun.security.provider.NativePRNG$RandomIO: byte[] implGenerateSeed(int)>
<sun.security.provider.NativePRNG$RandomIO: void implSetSeed(byte[])>/enter-monitor/instruction5	5	<sun.security.provider.NativePRNG$RandomIO: void implSetSeed(byte[])>/$stack5	<sun.security.provider.NativePRNG$RandomIO: void implSetSeed(byte[])>
<java.net.DatagramSocket: void disconnect()>/enter-monitor/instruction3	3	<java.net.DatagramSocket: void disconnect()>/l0#_0	<java.net.DatagramSocket: void disconnect()>
<sun.security.provider.NativePRNG$RandomIO: void implNextBytes(byte[])>/enter-monitor/instruction18	18	<sun.security.provider.NativePRNG$RandomIO: void implNextBytes(byte[])>/$stack11	<sun.security.provider.NativePRNG$RandomIO: void implNextBytes(byte[])>
<java.net.DatagramSocket: void send(java.net.DatagramPacket)>/enter-monitor/instruction4	4	<java.net.DatagramSocket: void send(java.net.DatagramPacket)>/l1#_0	<java.net.DatagramSocket: void send(java.net.DatagramPacket)>
<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object[])>/enter-monitor/instruction7	7	<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object[])>/$stack9	<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object[])>
<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object[])>/enter-monitor/instruction10	10	<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object[])>/$stack10	<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object[])>
<sun.nio.ch.PollSelectorImpl: int doSelect(long)>/enter-monitor/instruction32	32	<sun.nio.ch.PollSelectorImpl: int doSelect(long)>/$stack14	<sun.nio.ch.PollSelectorImpl: int doSelect(long)>
<sun.nio.ch.PollSelectorImpl: void implCloseInterrupt()>/enter-monitor/instruction4	4	<sun.nio.ch.PollSelectorImpl: void implCloseInterrupt()>/$stack3	<sun.nio.ch.PollSelectorImpl: void implCloseInterrupt()>
<sun.nio.ch.PollSelectorImpl: java.nio.channels.Selector wakeup()>/enter-monitor/instruction4	4	<sun.nio.ch.PollSelectorImpl: java.nio.channels.Selector wakeup()>/$stack3	<sun.nio.ch.PollSelectorImpl: java.nio.channels.Selector wakeup()>
<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>/enter-monitor/instruction4	4	<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>/l1#_0	<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>
<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object[])>/enter-monitor/instruction7	7	<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object[])>/$stack12	<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object[])>
<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object[])>/enter-monitor/instruction10	10	<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object[])>/$stack13	<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object[])>
<java.net.DatagramSocket: void close()>/enter-monitor/instruction4	4	<java.net.DatagramSocket: void close()>/$stack3	<java.net.DatagramSocket: void close()>
<java.net.DatagramSocket: boolean isClosed()>/enter-monitor/instruction4	4	<java.net.DatagramSocket: boolean isClosed()>/$stack3	<java.net.DatagramSocket: boolean isClosed()>
<sun.nio.ch.ServerSocketChannelImpl: java.net.ServerSocket socket()>/enter-monitor/instruction4	4	<sun.nio.ch.ServerSocketChannelImpl: java.net.ServerSocket socket()>/$stack3	<sun.nio.ch.ServerSocketChannelImpl: java.net.ServerSocket socket()>
<sun.nio.ch.ServerSocketChannelImpl: java.net.SocketAddress getLocalAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.ServerSocketChannelImpl: java.net.SocketAddress getLocalAddress()>/$stack3	<sun.nio.ch.ServerSocketChannelImpl: java.net.SocketAddress getLocalAddress()>
<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.ServerSocketChannel setOption(java.net.SocketOption,java.lang.Object)>/enter-monitor/instruction24	24	<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.ServerSocketChannel setOption(java.net.SocketOption,java.lang.Object)>/$stack8	<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.ServerSocketChannel setOption(java.net.SocketOption,java.lang.Object)>
<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/enter-monitor/instruction24	24	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/$stack20	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>
<sun.nio.ch.ServerSocketChannelImpl: java.lang.Object getOption(java.net.SocketOption)>/enter-monitor/instruction23	23	<sun.nio.ch.ServerSocketChannelImpl: java.lang.Object getOption(java.net.SocketOption)>/$stack6	<sun.nio.ch.ServerSocketChannelImpl: java.lang.Object getOption(java.net.SocketOption)>
<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/enter-monitor/instruction12	12	<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/l3#_1137	<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>
<sun.nio.ch.ServerSocketChannelImpl: boolean isBound()>/enter-monitor/instruction4	4	<sun.nio.ch.ServerSocketChannelImpl: boolean isBound()>/$stack3	<sun.nio.ch.ServerSocketChannelImpl: boolean isBound()>
<sun.nio.ch.ServerSocketChannelImpl: java.net.InetSocketAddress localAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.ServerSocketChannelImpl: java.net.InetSocketAddress localAddress()>/$stack3	<sun.nio.ch.ServerSocketChannelImpl: java.net.InetSocketAddress localAddress()>
<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress,int)>/enter-monitor/instruction6	6	<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress,int)>/$stack9	<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress,int)>
<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress,int)>/enter-monitor/instruction48	48	<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress,int)>/$stack21	<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress,int)>
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/enter-monitor/instruction18	18	<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/$stack14	<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>
<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.SocketChannel accept()>/enter-monitor/instruction4	4	<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.SocketChannel accept()>/$stack10	<sun.nio.ch.ServerSocketChannelImpl: java.nio.channels.SocketChannel accept()>
<sun.nio.ch.ServerSocketChannelImpl: void implCloseSelectableChannel()>/enter-monitor/instruction4	4	<sun.nio.ch.ServerSocketChannelImpl: void implCloseSelectableChannel()>/$stack5	<sun.nio.ch.ServerSocketChannelImpl: void implCloseSelectableChannel()>
<sun.nio.ch.ServerSocketChannelImpl: void kill()>/enter-monitor/instruction4	4	<sun.nio.ch.ServerSocketChannelImpl: void kill()>/$stack3	<sun.nio.ch.ServerSocketChannelImpl: void kill()>
<sun.nio.ch.ServerSocketChannelImpl: int poll(int,long)>/enter-monitor/instruction16	16	<sun.nio.ch.ServerSocketChannelImpl: int poll(int,long)>/$stack12	<sun.nio.ch.ServerSocketChannelImpl: int poll(int,long)>
<sun.nio.ch.ServerSocketChannelImpl: int poll(int,long)>/enter-monitor/instruction21	21	<sun.nio.ch.ServerSocketChannelImpl: int poll(int,long)>/$stack13	<sun.nio.ch.ServerSocketChannelImpl: int poll(int,long)>
<sun.nio.ch.ServerSocketChannelImpl: java.lang.String toString()>/enter-monitor/instruction17	17	<sun.nio.ch.ServerSocketChannelImpl: java.lang.String toString()>/$stack11	<sun.nio.ch.ServerSocketChannelImpl: java.lang.String toString()>
<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/enter-monitor/instruction112	112	<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/l4#_0	<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>
<java.util.zip.Inflater: void setInput(byte[],int,int)>/enter-monitor/instruction19	19	<java.util.zip.Inflater: void setInput(byte[],int,int)>/$stack9	<java.util.zip.Inflater: void setInput(byte[],int,int)>
<java.util.zip.Inflater: void setDictionary(byte[],int,int)>/enter-monitor/instruction19	19	<java.util.zip.Inflater: void setDictionary(byte[],int,int)>/$stack9	<java.util.zip.Inflater: void setDictionary(byte[],int,int)>
<java.util.zip.Inflater: int getRemaining()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: int getRemaining()>/$stack3	<java.util.zip.Inflater: int getRemaining()>
<java.util.zip.Inflater: boolean needsInput()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: boolean needsInput()>/$stack3	<java.util.zip.Inflater: boolean needsInput()>
<java.util.zip.Inflater: boolean needsDictionary()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: boolean needsDictionary()>/$stack3	<java.util.zip.Inflater: boolean needsDictionary()>
<java.util.zip.Inflater: boolean finished()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: boolean finished()>/$stack3	<java.util.zip.Inflater: boolean finished()>
<java.util.zip.Inflater: int inflate(byte[],int,int)>/enter-monitor/instruction19	19	<java.util.zip.Inflater: int inflate(byte[],int,int)>/$stack11	<java.util.zip.Inflater: int inflate(byte[],int,int)>
<java.util.zip.Inflater: int getAdler()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: int getAdler()>/$stack3	<java.util.zip.Inflater: int getAdler()>
<java.util.zip.Inflater: long getBytesRead()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: long getBytesRead()>/$stack3	<java.util.zip.Inflater: long getBytesRead()>
<java.util.zip.Inflater: long getBytesWritten()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: long getBytesWritten()>/$stack3	<java.util.zip.Inflater: long getBytesWritten()>
<java.util.zip.Inflater: void reset()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: void reset()>/$stack3	<java.util.zip.Inflater: void reset()>
<java.util.zip.Inflater: void end()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: void end()>/$stack5	<java.util.zip.Inflater: void end()>
<java.util.zip.Inflater: boolean ended()>/enter-monitor/instruction4	4	<java.util.zip.Inflater: boolean ended()>/$stack3	<java.util.zip.Inflater: boolean ended()>
<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus getHSStatus(javax.net.ssl.SSLEngineResult$HandshakeStatus)>/enter-monitor/instruction6	6	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus getHSStatus(javax.net.ssl.SSLEngineResult$HandshakeStatus)>/l0#_0	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus getHSStatus(javax.net.ssl.SSLEngineResult$HandshakeStatus)>
<java.util.ResourceBundle: java.util.ResourceBundle findBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control)>/enter-monitor/instruction52	52	<java.util.ResourceBundle: java.util.ResourceBundle findBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control)>/l3#_1587	<java.util.ResourceBundle: java.util.ResourceBundle findBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control)>
<java.util.ResourceBundle: java.util.Set handleKeySet()>/enter-monitor/instruction5	5	<java.util.ResourceBundle: java.util.Set handleKeySet()>/l0#_0	<java.util.ResourceBundle: java.util.Set handleKeySet()>
<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction11	11	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)>/$stack11	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)>
<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult readNetRecord(sun.security.ssl.EngineArgs)>/enter-monitor/instruction16	16	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult readNetRecord(sun.security.ssl.EngineArgs)>/l0#_0	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult readNetRecord(sun.security.ssl.EngineArgs)>
<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus readRecord(sun.security.ssl.EngineArgs)>/enter-monitor/instruction45	45	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus readRecord(sun.security.ssl.EngineArgs)>/l0#_0	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus readRecord(sun.security.ssl.EngineArgs)>
<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)>/enter-monitor/instruction21	21	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)>/$stack12	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)>
<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult writeAppRecord(sun.security.ssl.EngineArgs)>/enter-monitor/instruction17	17	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult writeAppRecord(sun.security.ssl.EngineArgs)>/l0#_0	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult writeAppRecord(sun.security.ssl.EngineArgs)>
<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult writeAppRecord(sun.security.ssl.EngineArgs)>/enter-monitor/instruction61	61	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult writeAppRecord(sun.security.ssl.EngineArgs)>/$stack15	<sun.security.ssl.SSLEngineImpl: javax.net.ssl.SSLEngineResult writeAppRecord(sun.security.ssl.EngineArgs)>
<sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,boolean,sun.net.www.protocol.http.HttpURLConnection)>/enter-monitor/instruction43	43	<sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,boolean,sun.net.www.protocol.http.HttpURLConnection)>/l5_$$A_3#_280	<sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,boolean,sun.net.www.protocol.http.HttpURLConnection)>
<sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,boolean,sun.net.www.protocol.http.HttpURLConnection)>/enter-monitor/instruction75	75	<sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,boolean,sun.net.www.protocol.http.HttpURLConnection)>/l5_$$A_3#_280	<sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,boolean,sun.net.www.protocol.http.HttpURLConnection)>
<sun.security.ssl.SSLEngineImpl: void recvAlert()>/enter-monitor/instruction22	22	<sun.security.ssl.SSLEngineImpl: void recvAlert()>/$stack24	<sun.security.ssl.SSLEngineImpl: void recvAlert()>
<sun.security.ssl.SSLEngineImpl: void sendAlert(byte,byte)>/enter-monitor/instruction35	35	<sun.security.ssl.SSLEngineImpl: void sendAlert(byte,byte)>/$stack12	<sun.security.ssl.SSLEngineImpl: void sendAlert(byte,byte)>
<java.lang.UNIXProcess$ProcessPipeInputStream: void processExited()>/enter-monitor/instruction4	4	<java.lang.UNIXProcess$ProcessPipeInputStream: void processExited()>/$stack5	<java.lang.UNIXProcess$ProcessPipeInputStream: void processExited()>
<java.lang.UNIXProcess$ProcessPipeInputStream: void close()>/enter-monitor/instruction4	4	<java.lang.UNIXProcess$ProcessPipeInputStream: void close()>/$stack3	<java.lang.UNIXProcess$ProcessPipeInputStream: void close()>
<java.nio.file.spi.FileSystemProvider: java.util.List installedProviders()>/enter-monitor/instruction7	7	<java.nio.file.spi.FileSystemProvider: java.util.List installedProviders()>/$stack8	<java.nio.file.spi.FileSystemProvider: java.util.List installedProviders()>
<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void add(java.nio.channels.FileLock)>/enter-monitor/instruction5	5	<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void add(java.nio.channels.FileLock)>/$stack4	<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void add(java.nio.channels.FileLock)>
<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void remove(java.nio.channels.FileLock)>/enter-monitor/instruction5	5	<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void remove(java.nio.channels.FileLock)>/$stack4	<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void remove(java.nio.channels.FileLock)>
<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: java.util.List removeAll()>/enter-monitor/instruction4	4	<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: java.util.List removeAll()>/$stack4	<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: java.util.List removeAll()>
<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void replace(java.nio.channels.FileLock,java.nio.channels.FileLock)>/enter-monitor/instruction6	6	<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void replace(java.nio.channels.FileLock,java.nio.channels.FileLock)>/$stack5	<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void replace(java.nio.channels.FileLock,java.nio.channels.FileLock)>
<java.util.Collections$SynchronizedMap: int size()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedMap: int size()>/$stack3	<java.util.Collections$SynchronizedMap: int size()>
<java.util.Collections$SynchronizedMap: boolean isEmpty()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedMap: boolean isEmpty()>/$stack3	<java.util.Collections$SynchronizedMap: boolean isEmpty()>
<java.util.Collections$SynchronizedMap: boolean containsKey(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedMap: boolean containsKey(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedMap: boolean containsKey(java.lang.Object)>
<java.util.Collections$SynchronizedMap: boolean containsValue(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedMap: boolean containsValue(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedMap: boolean containsValue(java.lang.Object)>
<java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedMap: java.lang.Object remove(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedMap: java.lang.Object remove(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedMap: java.lang.Object remove(java.lang.Object)>
<java.util.Collections$SynchronizedMap: void putAll(java.util.Map)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedMap: void putAll(java.util.Map)>/$stack4	<java.util.Collections$SynchronizedMap: void putAll(java.util.Map)>
<java.util.Collections$SynchronizedMap: void clear()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedMap: void clear()>/$stack3	<java.util.Collections$SynchronizedMap: void clear()>
<java.util.Collections$SynchronizedMap: java.util.Set keySet()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedMap: java.util.Set keySet()>/$stack3	<java.util.Collections$SynchronizedMap: java.util.Set keySet()>
<java.util.Collections$SynchronizedMap: java.util.Set entrySet()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedMap: java.util.Set entrySet()>/$stack3	<java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
<java.util.Collections$SynchronizedMap: java.util.Collection values()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedMap: java.util.Collection values()>/$stack3	<java.util.Collections$SynchronizedMap: java.util.Collection values()>
<java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>/enter-monitor/instruction8	8	<java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedMap: int hashCode()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedMap: int hashCode()>/$stack3	<java.util.Collections$SynchronizedMap: int hashCode()>
<java.util.Collections$SynchronizedMap: java.lang.String toString()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedMap: java.lang.String toString()>/$stack3	<java.util.Collections$SynchronizedMap: java.lang.String toString()>
<java.util.Collections$SynchronizedMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedMap: void forEach(java.util.function.BiConsumer)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedMap: void forEach(java.util.function.BiConsumer)>/$stack4	<java.util.Collections$SynchronizedMap: void forEach(java.util.function.BiConsumer)>
<java.util.Collections$SynchronizedMap: void replaceAll(java.util.function.BiFunction)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedMap: void replaceAll(java.util.function.BiFunction)>/$stack4	<java.util.Collections$SynchronizedMap: void replaceAll(java.util.function.BiFunction)>
<java.util.Collections$SynchronizedMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedMap: boolean remove(java.lang.Object,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedMap: boolean remove(java.lang.Object,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedMap: boolean remove(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>/enter-monitor/instruction7	7	<java.util.Collections$SynchronizedMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>/$stack6	<java.util.Collections$SynchronizedMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>/$stack5	<java.util.Collections$SynchronizedMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>
<java.util.Collections$SynchronizedMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>/$stack5	<java.util.Collections$SynchronizedMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>
<java.util.Collections$SynchronizedMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>/$stack5	<java.util.Collections$SynchronizedMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>
<java.util.Collections$SynchronizedMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>/enter-monitor/instruction7	7	<java.util.Collections$SynchronizedMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>/$stack6	<java.util.Collections$SynchronizedMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>
<java.util.Collections$SynchronizedMap: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedMap: void writeObject(java.io.ObjectOutputStream)>/$stack4	<java.util.Collections$SynchronizedMap: void writeObject(java.io.ObjectOutputStream)>
<java.io.Writer: void write(int)>/enter-monitor/instruction5	5	<java.io.Writer: void write(int)>/$stack4	<java.io.Writer: void write(int)>
<java.io.Writer: void write(java.lang.String,int,int)>/enter-monitor/instruction7	7	<java.io.Writer: void write(java.lang.String,int,int)>/$stack7	<java.io.Writer: void write(java.lang.String,int,int)>
<sun.net.www.http.KeepAliveCache: void run()>/enter-monitor/instruction26	26	<sun.net.www.http.KeepAliveCache: void run()>/l0#_0	<sun.net.www.http.KeepAliveCache: void run()>
<sun.net.www.http.KeepAliveCache: void run()>/enter-monitor/instruction44	44	<sun.net.www.http.KeepAliveCache: void run()>/l7#_191	<sun.net.www.http.KeepAliveCache: void run()>
<java.io.PrintWriter: void flush()>/enter-monitor/instruction4	4	<java.io.PrintWriter: void flush()>/$stack3	<java.io.PrintWriter: void flush()>
<java.io.PrintWriter: void close()>/enter-monitor/instruction4	4	<java.io.PrintWriter: void close()>/$stack3	<java.io.PrintWriter: void close()>
<java.io.PrintWriter: void write(int)>/enter-monitor/instruction5	5	<java.io.PrintWriter: void write(int)>/$stack4	<java.io.PrintWriter: void write(int)>
<java.io.PrintWriter: void write(char[],int,int)>/enter-monitor/instruction7	7	<java.io.PrintWriter: void write(char[],int,int)>/$stack6	<java.io.PrintWriter: void write(char[],int,int)>
<java.io.PrintWriter: void write(java.lang.String,int,int)>/enter-monitor/instruction7	7	<java.io.PrintWriter: void write(java.lang.String,int,int)>/$stack6	<java.io.PrintWriter: void write(java.lang.String,int,int)>
<java.io.PrintWriter: void newLine()>/enter-monitor/instruction4	4	<java.io.PrintWriter: void newLine()>/$stack3	<java.io.PrintWriter: void newLine()>
<java.io.PrintWriter: void println(boolean)>/enter-monitor/instruction5	5	<java.io.PrintWriter: void println(boolean)>/$stack4	<java.io.PrintWriter: void println(boolean)>
<java.io.PrintWriter: void println(char)>/enter-monitor/instruction5	5	<java.io.PrintWriter: void println(char)>/$stack4	<java.io.PrintWriter: void println(char)>
<java.io.PrintWriter: void println(int)>/enter-monitor/instruction5	5	<java.io.PrintWriter: void println(int)>/$stack4	<java.io.PrintWriter: void println(int)>
<java.io.PrintWriter: void println(long)>/enter-monitor/instruction5	5	<java.io.PrintWriter: void println(long)>/$stack5	<java.io.PrintWriter: void println(long)>
<java.io.PrintWriter: void println(float)>/enter-monitor/instruction5	5	<java.io.PrintWriter: void println(float)>/$stack4	<java.io.PrintWriter: void println(float)>
<java.io.PrintWriter: void println(double)>/enter-monitor/instruction5	5	<java.io.PrintWriter: void println(double)>/$stack5	<java.io.PrintWriter: void println(double)>
<java.io.PrintWriter: void println(char[])>/enter-monitor/instruction5	5	<java.io.PrintWriter: void println(char[])>/$stack4	<java.io.PrintWriter: void println(char[])>
<java.io.PrintWriter: void println(java.lang.String)>/enter-monitor/instruction5	5	<java.io.PrintWriter: void println(java.lang.String)>/$stack4	<java.io.PrintWriter: void println(java.lang.String)>
<java.io.PrintWriter: void println(java.lang.Object)>/enter-monitor/instruction6	6	<java.io.PrintWriter: void println(java.lang.Object)>/$stack6	<java.io.PrintWriter: void println(java.lang.Object)>
<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>/enter-monitor/instruction6	6	<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>/$stack5	<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>
<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object[])>/enter-monitor/instruction7	7	<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object[])>/$stack6	<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object[])>
<sun.nio.ch.SocketChannelImpl: java.net.Socket socket()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: java.net.Socket socket()>/$stack3	<sun.nio.ch.SocketChannelImpl: java.net.Socket socket()>
<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress getLocalAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress getLocalAddress()>/$stack3	<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress getLocalAddress()>
<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress getRemoteAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress getRemoteAddress()>/$stack3	<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress getRemoteAddress()>
<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel setOption(java.net.SocketOption,java.lang.Object)>/enter-monitor/instruction24	24	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel setOption(java.net.SocketOption,java.lang.Object)>/$stack8	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel setOption(java.net.SocketOption,java.lang.Object)>
<sun.nio.ch.SocketChannelImpl: java.lang.Object getOption(java.net.SocketOption)>/enter-monitor/instruction23	23	<sun.nio.ch.SocketChannelImpl: java.lang.Object getOption(java.net.SocketOption)>/$stack7	<sun.nio.ch.SocketChannelImpl: java.lang.Object getOption(java.net.SocketOption)>
<sun.nio.ch.SocketChannelImpl: boolean ensureReadOpen()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: boolean ensureReadOpen()>/$stack3	<sun.nio.ch.SocketChannelImpl: boolean ensureReadOpen()>
<sun.nio.ch.SocketChannelImpl: void ensureWriteOpen()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: void ensureWriteOpen()>/$stack3	<sun.nio.ch.SocketChannelImpl: void ensureWriteOpen()>
<sun.nio.ch.SocketChannelImpl: void readerCleanup()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: void readerCleanup()>/$stack3	<sun.nio.ch.SocketChannelImpl: void readerCleanup()>
<sun.nio.ch.SocketChannelImpl: void writerCleanup()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: void writerCleanup()>/$stack3	<sun.nio.ch.SocketChannelImpl: void writerCleanup()>
<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction9	9	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/$stack14	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>
<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction19	19	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/$stack16	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>
<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction35	35	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/$stack48	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>
<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction88	88	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/$stack24	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>
<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction128	128	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>/$stack69	<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>
<sun.security.ssl.X509TrustManagerImpl: sun.security.validator.Validator checkTrustedInit(java.security.cert.X509Certificate[],java.lang.String,boolean)>/enter-monitor/instruction23	23	<sun.security.ssl.X509TrustManagerImpl: sun.security.validator.Validator checkTrustedInit(java.security.cert.X509Certificate[],java.lang.String,boolean)>/l0#_0	<sun.security.ssl.X509TrustManagerImpl: sun.security.validator.Validator checkTrustedInit(java.security.cert.X509Certificate[],java.lang.String,boolean)>
<sun.security.ssl.X509TrustManagerImpl: sun.security.validator.Validator checkTrustedInit(java.security.cert.X509Certificate[],java.lang.String,boolean)>/enter-monitor/instruction46	46	<sun.security.ssl.X509TrustManagerImpl: sun.security.validator.Validator checkTrustedInit(java.security.cert.X509Certificate[],java.lang.String,boolean)>/l0#_0	<sun.security.ssl.X509TrustManagerImpl: sun.security.validator.Validator checkTrustedInit(java.security.cert.X509Certificate[],java.lang.String,boolean)>
<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction15	15	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/$stack21	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction25	25	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/$stack23	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction43	43	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/$stack63	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction99	99	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/$stack33	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction142	142	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>/$stack87	<sun.nio.ch.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction9	9	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/$stack14	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>
<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction15	15	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/$stack15	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>
<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction31	31	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/$stack46	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>
<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction83	83	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/$stack23	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>
<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction122	122	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>/$stack65	<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>
<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction15	15	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/$stack21	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction21	21	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/$stack22	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction39	39	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/$stack61	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction94	94	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/$stack32	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/enter-monitor/instruction136	136	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>/$stack83	<sun.nio.ch.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>/enter-monitor/instruction6	6	<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>/l0#_0	<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/enter-monitor/instruction5	5	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/$stack14	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>
<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/enter-monitor/instruction11	11	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/$stack15	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>
<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/enter-monitor/instruction27	27	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/$stack44	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>
<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/enter-monitor/instruction77	77	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/$stack22	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>
<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/enter-monitor/instruction116	116	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>/$stack62	<sun.nio.ch.SocketChannelImpl: int sendOutOfBandData(byte)>
<sun.nio.ch.SocketChannelImpl: java.net.InetSocketAddress localAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: java.net.InetSocketAddress localAddress()>/$stack3	<sun.nio.ch.SocketChannelImpl: java.net.InetSocketAddress localAddress()>
<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress remoteAddress()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress remoteAddress()>/$stack3	<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress remoteAddress()>
<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>/enter-monitor/instruction5	5	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>/$stack10	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>
<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>/enter-monitor/instruction8	8	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>/$stack11	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>
<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>/enter-monitor/instruction11	11	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>/$stack12	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel bind(java.net.SocketAddress)>
<sun.nio.ch.SocketChannelImpl: boolean isConnected()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: boolean isConnected()>/$stack3	<sun.nio.ch.SocketChannelImpl: boolean isConnected()>
<sun.nio.ch.SocketChannelImpl: boolean isConnectionPending()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: boolean isConnectionPending()>/$stack3	<sun.nio.ch.SocketChannelImpl: boolean isConnectionPending()>
<sun.nio.ch.SocketChannelImpl: void ensureOpenAndUnconnected()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: void ensureOpenAndUnconnected()>/$stack3	<sun.nio.ch.SocketChannelImpl: void ensureOpenAndUnconnected()>
<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/enter-monitor/instruction6	6	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/$stack17	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>
<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/enter-monitor/instruction9	9	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/$stack18	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>
<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/enter-monitor/instruction20	20	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/$stack21	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>
<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/enter-monitor/instruction25	25	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/$stack22	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>
<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/enter-monitor/instruction158	158	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>/$stack33	<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/$stack18	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/enter-monitor/instruction7	7	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/$stack19	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/enter-monitor/instruction10	10	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/$stack20	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/enter-monitor/instruction38	38	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/$stack25	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/enter-monitor/instruction41	41	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/$stack26	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/enter-monitor/instruction49	49	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/$stack68	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/enter-monitor/instruction138	138	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/$stack35	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/enter-monitor/instruction182	182	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/$stack94	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/enter-monitor/instruction285	285	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>/$stack41	<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel shutdownInput()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel shutdownInput()>/$stack3	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel shutdownInput()>
<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel shutdownOutput()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel shutdownOutput()>/$stack3	<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel shutdownOutput()>
<sun.nio.ch.SocketChannelImpl: boolean isInputOpen()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: boolean isInputOpen()>/$stack3	<sun.nio.ch.SocketChannelImpl: boolean isInputOpen()>
<sun.nio.ch.SocketChannelImpl: boolean isOutputOpen()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: boolean isOutputOpen()>/$stack3	<sun.nio.ch.SocketChannelImpl: boolean isOutputOpen()>
<sun.nio.ch.SocketChannelImpl: void implCloseSelectableChannel()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: void implCloseSelectableChannel()>/$stack3	<sun.nio.ch.SocketChannelImpl: void implCloseSelectableChannel()>
<sun.nio.ch.SocketChannelImpl: void kill()>/enter-monitor/instruction4	4	<sun.nio.ch.SocketChannelImpl: void kill()>/$stack3	<sun.nio.ch.SocketChannelImpl: void kill()>
<sun.nio.ch.SocketChannelImpl: int poll(int,long)>/enter-monitor/instruction16	16	<sun.nio.ch.SocketChannelImpl: int poll(int,long)>/$stack12	<sun.nio.ch.SocketChannelImpl: int poll(int,long)>
<sun.nio.ch.SocketChannelImpl: int poll(int,long)>/enter-monitor/instruction21	21	<sun.nio.ch.SocketChannelImpl: int poll(int,long)>/$stack13	<sun.nio.ch.SocketChannelImpl: int poll(int,long)>
<sun.nio.ch.SocketChannelImpl: java.lang.String toString()>/enter-monitor/instruction18	18	<sun.nio.ch.SocketChannelImpl: java.lang.String toString()>/$stack12	<sun.nio.ch.SocketChannelImpl: java.lang.String toString()>
<sun.net.www.protocol.http.NegotiateAuthentication: boolean isSupported(sun.net.www.protocol.http.HttpCallerInfo)>/enter-monitor/instruction27	27	<sun.net.www.protocol.http.NegotiateAuthentication: boolean isSupported(sun.net.www.protocol.http.HttpCallerInfo)>/l1_$$A_3#_94	<sun.net.www.protocol.http.NegotiateAuthentication: boolean isSupported(sun.net.www.protocol.http.HttpCallerInfo)>
<sun.net.www.protocol.http.NegotiateAuthentication: byte[] firstToken()>/enter-monitor/instruction8	8	<sun.net.www.protocol.http.NegotiateAuthentication: byte[] firstToken()>/$stack12	<sun.net.www.protocol.http.NegotiateAuthentication: byte[] firstToken()>
<sun.misc.Signal: sun.misc.SignalHandler handle(sun.misc.Signal,sun.misc.SignalHandler)>/enter-monitor/instruction31	31	<sun.misc.Signal: sun.misc.SignalHandler handle(sun.misc.Signal,sun.misc.SignalHandler)>/$stack17	<sun.misc.Signal: sun.misc.SignalHandler handle(sun.misc.Signal,sun.misc.SignalHandler)>
<java.util.Collections$SynchronizedSortedSet: java.util.Comparator comparator()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedSortedSet: java.util.Comparator comparator()>/$stack3	<java.util.Collections$SynchronizedSortedSet: java.util.Comparator comparator()>
<java.lang.ref.Reference: boolean tryHandlePending(boolean)>/enter-monitor/instruction4	4	<java.lang.ref.Reference: boolean tryHandlePending(boolean)>/$stack5	<java.lang.ref.Reference: boolean tryHandlePending(boolean)>
<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet headSet(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet headSet(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet headSet(java.lang.Object)>
<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet tailSet(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet tailSet(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet tailSet(java.lang.Object)>
<java.util.Collections$SynchronizedSortedSet: java.lang.Object first()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedSortedSet: java.lang.Object first()>/$stack3	<java.util.Collections$SynchronizedSortedSet: java.lang.Object first()>
<java.util.Collections$SynchronizedSortedSet: java.lang.Object last()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedSortedSet: java.lang.Object last()>/$stack3	<java.util.Collections$SynchronizedSortedSet: java.lang.Object last()>
<sun.security.ssl.Handshaker: void sendChangeCipherSpec(sun.security.ssl.HandshakeMessage$Finished,boolean)>/enter-monitor/instruction58	58	<sun.security.ssl.Handshaker: void sendChangeCipherSpec(sun.security.ssl.HandshakeMessage$Finished,boolean)>/$stack13	<sun.security.ssl.Handshaker: void sendChangeCipherSpec(sun.security.ssl.HandshakeMessage$Finished,boolean)>
<sun.security.ssl.Handshaker: void calculateConnectionKeys(javax.crypto.SecretKey)>/enter-monitor/instruction98	98	<sun.security.ssl.Handshaker: void calculateConnectionKeys(javax.crypto.SecretKey)>/$stack54	<sun.security.ssl.Handshaker: void calculateConnectionKeys(javax.crypto.SecretKey)>
<sun.security.ssl.Handshaker: void checkThrown()>/enter-monitor/instruction4	4	<sun.security.ssl.Handshaker: void checkThrown()>/$stack5	<sun.security.ssl.Handshaker: void checkThrown()>
<java.nio.channels.spi.AbstractSelector: void cancel(java.nio.channels.SelectionKey)>/enter-monitor/instruction5	5	<java.nio.channels.spi.AbstractSelector: void cancel(java.nio.channels.SelectionKey)>/$stack4	<java.nio.channels.spi.AbstractSelector: void cancel(java.nio.channels.SelectionKey)>
<java.io.FileInputStream: void close()>/enter-monitor/instruction4	4	<java.io.FileInputStream: void close()>/$stack3	<java.io.FileInputStream: void close()>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>/enter-monitor/instruction3	3	<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>/l0#_0	<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<java.util.Vector$1: java.lang.Object nextElement()>/enter-monitor/instruction4	4	<java.util.Vector$1: java.lang.Object nextElement()>/$stack3	<java.util.Vector$1: java.lang.Object nextElement()>
<sun.security.ssl.SSLSocketImpl: void readRecord(sun.security.ssl.InputRecord,boolean)>/enter-monitor/instruction6	6	<sun.security.ssl.SSLSocketImpl: void readRecord(sun.security.ssl.InputRecord,boolean)>/$stack11	<sun.security.ssl.SSLSocketImpl: void readRecord(sun.security.ssl.InputRecord,boolean)>
<sun.security.ssl.SSLSocketImpl: void readRecord(sun.security.ssl.InputRecord,boolean)>/enter-monitor/instruction131	131	<sun.security.ssl.SSLSocketImpl: void readRecord(sun.security.ssl.InputRecord,boolean)>/l0#_0	<sun.security.ssl.SSLSocketImpl: void readRecord(sun.security.ssl.InputRecord,boolean)>
<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm putInCache(java.lang.invoke.LambdaFormEditor$Transform,java.lang.invoke.LambdaForm)>/enter-monitor/instruction44	44	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm putInCache(java.lang.invoke.LambdaFormEditor$Transform,java.lang.invoke.LambdaForm)>/$stack20	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm putInCache(java.lang.invoke.LambdaFormEditor$Transform,java.lang.invoke.LambdaForm)>
<sun.security.ssl.SSLSocketImpl: void performInitialHandshake()>/enter-monitor/instruction4	4	<sun.security.ssl.SSLSocketImpl: void performInitialHandshake()>/$stack3	<sun.security.ssl.SSLSocketImpl: void performInitialHandshake()>
<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/enter-monitor/instruction31	31	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/l0#_0	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>
<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/enter-monitor/instruction39	39	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/l0#_0	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>
<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/enter-monitor/instruction127	127	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/l0#_0	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>
<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/enter-monitor/instruction160	160	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/l0#_0	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>
<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/enter-monitor/instruction192	192	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/l0#_0	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>
<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/enter-monitor/instruction248	248	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/l0#_0	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>
<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/enter-monitor/instruction298	298	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>/l0#_0	<sun.security.ssl.SSLSocketImpl: void closeInternal(boolean)>
<sun.security.ssl.SSLSocketImpl: void disposeCiphers()>/enter-monitor/instruction4	4	<sun.security.ssl.SSLSocketImpl: void disposeCiphers()>/$stack4	<sun.security.ssl.SSLSocketImpl: void disposeCiphers()>
<sun.security.ssl.SSLSocketImpl: void recvAlert(sun.security.ssl.InputRecord)>/enter-monitor/instruction21	21	<sun.security.ssl.SSLSocketImpl: void recvAlert(sun.security.ssl.InputRecord)>/$stack23	<sun.security.ssl.SSLSocketImpl: void recvAlert(sun.security.ssl.InputRecord)>
<sun.security.ssl.SSLSocketImpl: void sendAlert(byte,byte)>/enter-monitor/instruction35	35	<sun.security.ssl.SSLSocketImpl: void sendAlert(byte,byte)>/$stack12	<sun.security.ssl.SSLSocketImpl: void sendAlert(byte,byte)>
<sun.security.ssl.SSLSocketImpl: javax.net.ssl.SSLSession getSession()>/enter-monitor/instruction26	26	<sun.security.ssl.SSLSocketImpl: javax.net.ssl.SSLSession getSession()>/l0#_0	<sun.security.ssl.SSLSocketImpl: javax.net.ssl.SSLSession getSession()>
<java.net.AbstractPlainSocketImpl: void doConnect(java.net.InetAddress,int,int)>/enter-monitor/instruction7	7	<java.net.AbstractPlainSocketImpl: void doConnect(java.net.InetAddress,int,int)>/$stack8	<java.net.AbstractPlainSocketImpl: void doConnect(java.net.InetAddress,int,int)>
<java.net.AbstractPlainSocketImpl: void doConnect(java.net.InetAddress,int,int)>/enter-monitor/instruction27	27	<java.net.AbstractPlainSocketImpl: void doConnect(java.net.InetAddress,int,int)>/$stack12	<java.net.AbstractPlainSocketImpl: void doConnect(java.net.InetAddress,int,int)>
<java.net.AbstractPlainSocketImpl: void bind(java.net.InetAddress,int)>/enter-monitor/instruction6	6	<java.net.AbstractPlainSocketImpl: void bind(java.net.InetAddress,int)>/$stack5	<java.net.AbstractPlainSocketImpl: void bind(java.net.InetAddress,int)>
<java.net.AbstractPlainSocketImpl: java.io.InputStream getInputStream()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: java.io.InputStream getInputStream()>/$stack3	<java.net.AbstractPlainSocketImpl: java.io.InputStream getInputStream()>
<java.net.AbstractPlainSocketImpl: java.io.OutputStream getOutputStream()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: java.io.OutputStream getOutputStream()>/$stack3	<java.net.AbstractPlainSocketImpl: java.io.OutputStream getOutputStream()>
<java.net.AbstractPlainSocketImpl: void close()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: void close()>/$stack4	<java.net.AbstractPlainSocketImpl: void close()>
<java.net.AbstractPlainSocketImpl: java.io.FileDescriptor acquireFD()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: java.io.FileDescriptor acquireFD()>/$stack3	<java.net.AbstractPlainSocketImpl: java.io.FileDescriptor acquireFD()>
<java.net.AbstractPlainSocketImpl: void releaseFD()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: void releaseFD()>/$stack5	<java.net.AbstractPlainSocketImpl: void releaseFD()>
<java.net.AbstractPlainSocketImpl: boolean isConnectionReset()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: boolean isConnectionReset()>/$stack3	<java.net.AbstractPlainSocketImpl: boolean isConnectionReset()>
<java.net.AbstractPlainSocketImpl: boolean isConnectionResetPending()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: boolean isConnectionResetPending()>/$stack3	<java.net.AbstractPlainSocketImpl: boolean isConnectionResetPending()>
<java.net.AbstractPlainSocketImpl: void setConnectionReset()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: void setConnectionReset()>/$stack3	<java.net.AbstractPlainSocketImpl: void setConnectionReset()>
<java.net.AbstractPlainSocketImpl: void setConnectionResetPending()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: void setConnectionResetPending()>/$stack3	<java.net.AbstractPlainSocketImpl: void setConnectionResetPending()>
<java.net.AbstractPlainSocketImpl: boolean isClosedOrPending()>/enter-monitor/instruction4	4	<java.net.AbstractPlainSocketImpl: boolean isClosedOrPending()>/$stack3	<java.net.AbstractPlainSocketImpl: boolean isClosedOrPending()>
<java.util.Vector$Itr: java.lang.Object next()>/enter-monitor/instruction4	4	<java.util.Vector$Itr: java.lang.Object next()>/$stack4	<java.util.Vector$Itr: java.lang.Object next()>
<java.util.Vector$Itr: void remove()>/enter-monitor/instruction9	9	<java.util.Vector$Itr: void remove()>/$stack4	<java.util.Vector$Itr: void remove()>
<java.util.Vector$Itr: void forEachRemaining(java.util.function.Consumer)>/enter-monitor/instruction6	6	<java.util.Vector$Itr: void forEachRemaining(java.util.function.Consumer)>/$stack8	<java.util.Vector$Itr: void forEachRemaining(java.util.function.Consumer)>
<java.nio.channels.Channels$WritableByteChannelImpl: int write(java.nio.ByteBuffer)>/enter-monitor/instruction7	7	<java.nio.channels.Channels$WritableByteChannelImpl: int write(java.nio.ByteBuffer)>/$stack9	<java.nio.channels.Channels$WritableByteChannelImpl: int write(java.nio.ByteBuffer)>
<java.nio.channels.Channels$ReadableByteChannelImpl: int read(java.nio.ByteBuffer)>/enter-monitor/instruction8	8	<java.nio.channels.Channels$ReadableByteChannelImpl: int read(java.nio.ByteBuffer)>/$stack10	<java.nio.channels.Channels$ReadableByteChannelImpl: int read(java.nio.ByteBuffer)>
<sun.security.ssl.SignatureAndHashAlgorithm: void <clinit>()>/enter-monitor/instruction15	15	<sun.security.ssl.SignatureAndHashAlgorithm: void <clinit>()>/$stack10	<sun.security.ssl.SignatureAndHashAlgorithm: void <clinit>()>
<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/enter-monitor/instruction71	71	<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/$stack39	<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>
<java.lang.Class: boolean desiredAssertionStatus()>/enter-monitor/instruction8	8	<java.lang.Class: boolean desiredAssertionStatus()>/$stack5	<java.lang.Class: boolean desiredAssertionStatus()>
<sun.net.www.MessageHeader$HeaderIterator: boolean hasNext()>/enter-monitor/instruction4	4	<sun.net.www.MessageHeader$HeaderIterator: boolean hasNext()>/$stack3	<sun.net.www.MessageHeader$HeaderIterator: boolean hasNext()>
<sun.net.www.MessageHeader$HeaderIterator: java.lang.String next()>/enter-monitor/instruction4	4	<sun.net.www.MessageHeader$HeaderIterator: java.lang.String next()>/$stack3	<sun.net.www.MessageHeader$HeaderIterator: java.lang.String next()>
<sun.net.www.protocol.https.HttpsClient: sun.net.www.http.HttpClient New(javax.net.ssl.SSLSocketFactory,java.net.URL,javax.net.ssl.HostnameVerifier,java.net.Proxy,boolean,int,sun.net.www.protocol.http.HttpURLConnection)>/enter-monitor/instruction57	57	<sun.net.www.protocol.https.HttpsClient: sun.net.www.http.HttpClient New(javax.net.ssl.SSLSocketFactory,java.net.URL,javax.net.ssl.HostnameVerifier,java.net.Proxy,boolean,int,sun.net.www.protocol.http.HttpURLConnection)>/l8_$$A_3#_335	<sun.net.www.protocol.https.HttpsClient: sun.net.www.http.HttpClient New(javax.net.ssl.SSLSocketFactory,java.net.URL,javax.net.ssl.HostnameVerifier,java.net.Proxy,boolean,int,sun.net.www.protocol.http.HttpURLConnection)>
<sun.net.www.protocol.https.HttpsClient: sun.net.www.http.HttpClient New(javax.net.ssl.SSLSocketFactory,java.net.URL,javax.net.ssl.HostnameVerifier,java.net.Proxy,boolean,int,sun.net.www.protocol.http.HttpURLConnection)>/enter-monitor/instruction92	92	<sun.net.www.protocol.https.HttpsClient: sun.net.www.http.HttpClient New(javax.net.ssl.SSLSocketFactory,java.net.URL,javax.net.ssl.HostnameVerifier,java.net.Proxy,boolean,int,sun.net.www.protocol.http.HttpURLConnection)>/l8_$$A_3#_335	<sun.net.www.protocol.https.HttpsClient: sun.net.www.http.HttpClient New(javax.net.ssl.SSLSocketFactory,java.net.URL,javax.net.ssl.HostnameVerifier,java.net.Proxy,boolean,int,sun.net.www.protocol.http.HttpURLConnection)>
<java.lang.String: void <init>(java.lang.StringBuffer)>/enter-monitor/instruction5	5	<java.lang.String: void <init>(java.lang.StringBuffer)>/l1#_0	<java.lang.String: void <init>(java.lang.StringBuffer)>
<java.lang.String: boolean contentEquals(java.lang.CharSequence)>/enter-monitor/instruction8	8	<java.lang.String: boolean contentEquals(java.lang.CharSequence)>/l1#_0	<java.lang.String: boolean contentEquals(java.lang.CharSequence)>
<sun.util.resources.ParallelListResourceBundle: java.util.Set keySet()>/enter-monitor/instruction12	12	<sun.util.resources.ParallelListResourceBundle: java.util.Set keySet()>/l0#_0	<sun.util.resources.ParallelListResourceBundle: java.util.Set keySet()>
<sun.util.resources.ParallelListResourceBundle: void loadLookupTablesIfNecessary()>/enter-monitor/instruction54	54	<sun.util.resources.ParallelListResourceBundle: void loadLookupTablesIfNecessary()>/l0#_0	<sun.util.resources.ParallelListResourceBundle: void loadLookupTablesIfNecessary()>
<java.io.FilePermissionCollection: void add(java.security.Permission)>/enter-monitor/instruction21	21	<java.io.FilePermissionCollection: void add(java.security.Permission)>/l0#_0	<java.io.FilePermissionCollection: void add(java.security.Permission)>
<java.io.FilePermissionCollection: boolean implies(java.security.Permission)>/enter-monitor/instruction12	12	<java.io.FilePermissionCollection: boolean implies(java.security.Permission)>/l0#_0	<java.io.FilePermissionCollection: boolean implies(java.security.Permission)>
<java.io.FilePermissionCollection: java.util.Enumeration elements()>/enter-monitor/instruction3	3	<java.io.FilePermissionCollection: java.util.Enumeration elements()>/l0#_0	<java.io.FilePermissionCollection: java.util.Enumeration elements()>
<java.io.FilePermissionCollection: void writeObject(java.io.ObjectOutputStream)>/enter-monitor/instruction9	9	<java.io.FilePermissionCollection: void writeObject(java.io.ObjectOutputStream)>/l0#_0	<java.io.FilePermissionCollection: void writeObject(java.io.ObjectOutputStream)>
<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry lowerEntry(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry lowerEntry(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry lowerEntry(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.lang.Object lowerKey(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.lang.Object lowerKey(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.lang.Object lowerKey(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry floorEntry(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry floorEntry(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry floorEntry(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.lang.Object floorKey(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.lang.Object floorKey(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.lang.Object floorKey(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry ceilingEntry(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry ceilingEntry(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry ceilingEntry(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.lang.Object ceilingKey(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.lang.Object ceilingKey(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.lang.Object ceilingKey(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry higherEntry(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry higherEntry(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry higherEntry(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.lang.Object higherKey(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.lang.Object higherKey(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.lang.Object higherKey(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry firstEntry()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry firstEntry()>/$stack3	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry firstEntry()>
<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry lastEntry()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry lastEntry()>/$stack3	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry lastEntry()>
<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry pollFirstEntry()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry pollFirstEntry()>/$stack3	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry pollFirstEntry()>
<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry pollLastEntry()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry pollLastEntry()>/$stack3	<java.util.Collections$SynchronizedNavigableMap: java.util.Map$Entry pollLastEntry()>
<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap descendingMap()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap descendingMap()>/$stack3	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap descendingMap()>
<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableSet navigableKeySet()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableSet navigableKeySet()>/$stack3	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableSet navigableKeySet()>
<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableSet descendingKeySet()>/enter-monitor/instruction4	4	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableSet descendingKeySet()>/$stack3	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableSet descendingKeySet()>
<java.util.Collections$SynchronizedNavigableMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedNavigableMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>/$stack5	<java.util.Collections$SynchronizedNavigableMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.util.SortedMap headMap(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.util.SortedMap headMap(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.util.SortedMap headMap(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.util.SortedMap tailMap(java.lang.Object)>/enter-monitor/instruction5	5	<java.util.Collections$SynchronizedNavigableMap: java.util.SortedMap tailMap(java.lang.Object)>/$stack4	<java.util.Collections$SynchronizedNavigableMap: java.util.SortedMap tailMap(java.lang.Object)>
<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>/enter-monitor/instruction8	8	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>/$stack7	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>
<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>/$stack5	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap headMap(java.lang.Object,boolean)>
<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>/$stack5	<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableMap tailMap(java.lang.Object,boolean)>
<java.security.Policy: void initPolicy(java.security.Policy)>/enter-monitor/instruction8	8	<java.security.Policy: void initPolicy(java.security.Policy)>/l0#_0	<java.security.Policy: void initPolicy(java.security.Policy)>
<java.security.Policy: void initPolicy(java.security.Policy)>/enter-monitor/instruction40	40	<java.security.Policy: void initPolicy(java.security.Policy)>/$stack15	<java.security.Policy: void initPolicy(java.security.Policy)>
<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/enter-monitor/instruction12	12	<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/$stack8	<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>
<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/enter-monitor/instruction30	30	<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/l2#_655	<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>
<java.security.Policy: void addStaticPerms(java.security.PermissionCollection,java.security.PermissionCollection)>/enter-monitor/instruction6	6	<java.security.Policy: void addStaticPerms(java.security.PermissionCollection,java.security.PermissionCollection)>/l2#_0	<java.security.Policy: void addStaticPerms(java.security.PermissionCollection,java.security.PermissionCollection)>
<java.security.Policy: boolean implies(java.security.ProtectionDomain,java.security.Permission)>/enter-monitor/instruction9	9	<java.security.Policy: boolean implies(java.security.ProtectionDomain,java.security.Permission)>/$stack8	<java.security.Policy: boolean implies(java.security.ProtectionDomain,java.security.Permission)>
<java.security.Policy: boolean implies(java.security.ProtectionDomain,java.security.Permission)>/enter-monitor/instruction31	31	<java.security.Policy: boolean implies(java.security.ProtectionDomain,java.security.Permission)>/$stack14	<java.security.Policy: boolean implies(java.security.ProtectionDomain,java.security.Permission)>
<java.net.ServerSocket: void close()>/enter-monitor/instruction4	4	<java.net.ServerSocket: void close()>/$stack3	<java.net.ServerSocket: void close()>
<java.net.ServerSocket: boolean isClosed()>/enter-monitor/instruction4	4	<java.net.ServerSocket: boolean isClosed()>/$stack3	<java.net.ServerSocket: boolean isClosed()>
<sun.security.ssl.EphemeralKeyManager: java.security.KeyPair getRSAKeyPair(boolean,java.security.SecureRandom)>/enter-monitor/instruction16	16	<sun.security.ssl.EphemeralKeyManager: java.security.KeyPair getRSAKeyPair(boolean,java.security.SecureRandom)>/$stack9	<sun.security.ssl.EphemeralKeyManager: java.security.KeyPair getRSAKeyPair(boolean,java.security.SecureRandom)>
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/enter-monitor/instruction41	41	<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/$stack56	<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>
<java.util.stream.Collectors: void lambda$groupingByConcurrent$51(java.util.function.Function,java.util.function.Supplier,java.util.function.BiConsumer,java.util.concurrent.ConcurrentMap,java.lang.Object)>/enter-monitor/instruction15	15	<java.util.stream.Collectors: void lambda$groupingByConcurrent$51(java.util.function.Function,java.util.function.Supplier,java.util.function.BiConsumer,java.util.concurrent.ConcurrentMap,java.lang.Object)>/l6#_1071	<java.util.stream.Collectors: void lambda$groupingByConcurrent$51(java.util.function.Function,java.util.function.Supplier,java.util.function.BiConsumer,java.util.concurrent.ConcurrentMap,java.lang.Object)>
<java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>/enter-monitor/instruction8	8	<java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>/$stack6	<java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>
<sun.nio.fs.AbstractWatchService: void close()>/enter-monitor/instruction4	4	<sun.nio.fs.AbstractWatchService: void close()>/$stack3	<sun.nio.fs.AbstractWatchService: void close()>
<java.lang.ClassLoader$ParallelLoaders: boolean register(java.lang.Class)>/enter-monitor/instruction4	4	<java.lang.ClassLoader$ParallelLoaders: boolean register(java.lang.Class)>/$stack3	<java.lang.ClassLoader$ParallelLoaders: boolean register(java.lang.Class)>
<java.lang.ClassLoader$ParallelLoaders: boolean isRegistered(java.lang.Class)>/enter-monitor/instruction4	4	<java.lang.ClassLoader$ParallelLoaders: boolean isRegistered(java.lang.Class)>/$stack3	<java.lang.ClassLoader$ParallelLoaders: boolean isRegistered(java.lang.Class)>
<java.lang.ClassLoader$ParallelLoaders: void <clinit>()>/enter-monitor/instruction7	7	<java.lang.ClassLoader$ParallelLoaders: void <clinit>()>/$stack4	<java.lang.ClassLoader$ParallelLoaders: void <clinit>()>
<java.io.FileOutputStream: void close()>/enter-monitor/instruction4	4	<java.io.FileOutputStream: void close()>/$stack3	<java.io.FileOutputStream: void close()>
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>/enter-monitor/instruction3	3	<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>/l0#_0	<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
<sun.net.www.http.KeepAliveStream: void queueForCleanup(sun.net.www.http.KeepAliveCleanerEntry)>/enter-monitor/instruction4	4	<sun.net.www.http.KeepAliveStream: void queueForCleanup(sun.net.www.http.KeepAliveCleanerEntry)>/$stack4	<sun.net.www.http.KeepAliveStream: void queueForCleanup(sun.net.www.http.KeepAliveCleanerEntry)>
<java.util.Collections$SynchronizedRandomAccessList: java.util.List subList(int,int)>/enter-monitor/instruction6	6	<java.util.Collections$SynchronizedRandomAccessList: java.util.List subList(int,int)>/$stack5	<java.util.Collections$SynchronizedRandomAccessList: java.util.List subList(int,int)>
<sun.security.ssl.Handshaker$DelegatedTask: void run()>/enter-monitor/instruction5	5	<sun.security.ssl.Handshaker$DelegatedTask: void run()>/$stack5	<sun.security.ssl.Handshaker$DelegatedTask: void run()>
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/enter-monitor/instruction7	7	<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/$stack10	<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>
<sun.nio.fs.UnixFileAttributes: sun.nio.fs.UnixFileKey fileKey()>/enter-monitor/instruction5	5	<sun.nio.fs.UnixFileAttributes: sun.nio.fs.UnixFileKey fileKey()>/l0#_0	<sun.nio.fs.UnixFileAttributes: sun.nio.fs.UnixFileKey fileKey()>
<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.UserPrincipal owner()>/enter-monitor/instruction5	5	<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.UserPrincipal owner()>/l0#_0	<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.UserPrincipal owner()>
<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.GroupPrincipal group()>/enter-monitor/instruction5	5	<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.GroupPrincipal group()>/l0#_0	<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.GroupPrincipal group()>
<java.lang.invoke.MemberName: java.lang.invoke.MethodType getMethodType()>/enter-monitor/instruction20	20	<java.lang.invoke.MemberName: java.lang.invoke.MethodType getMethodType()>/l0#_0	<java.lang.invoke.MemberName: java.lang.invoke.MethodType getMethodType()>
<java.lang.invoke.MemberName: java.lang.Class getFieldType()>/enter-monitor/instruction20	20	<java.lang.invoke.MemberName: java.lang.Class getFieldType()>/l0#_0	<java.lang.invoke.MemberName: java.lang.Class getFieldType()>
<java.util.concurrent.ForkJoinPool: int awaitRunStateLock()>/enter-monitor/instruction72	72	<java.util.concurrent.ForkJoinPool: int awaitRunStateLock()>/l1#_1436	<java.util.concurrent.ForkJoinPool: int awaitRunStateLock()>
<java.util.concurrent.ForkJoinPool: void unlockRunState(int,int)>/enter-monitor/instruction12	12	<java.util.concurrent.ForkJoinPool: void unlockRunState(int,int)>/l3#_1464	<java.util.concurrent.ForkJoinPool: void unlockRunState(int,int)>
<java.util.concurrent.ForkJoinPool: boolean tryTerminate(boolean,boolean)>/enter-monitor/instruction156	156	<java.util.concurrent.ForkJoinPool: boolean tryTerminate(boolean,boolean)>/l0#_0	<java.util.concurrent.ForkJoinPool: boolean tryTerminate(boolean,boolean)>
<java.util.concurrent.ForkJoinPool: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>/enter-monitor/instruction26	26	<java.util.concurrent.ForkJoinPool: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>/l0#_0	<java.util.concurrent.ForkJoinPool: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>
