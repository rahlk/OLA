<jdk.internal.org.objectweb.asm.ByteVector: void <init>(int)>/assign/instruction4	<jdk.internal.org.objectweb.asm.ByteVector: void <init>(int)>/l1#_0
<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>/assign/instruction6	<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>/$stack10
<sun.security.x509.NetscapeCertTypeExtension: void set(int,boolean)>/assign/instruction8	<sun.security.x509.NetscapeCertTypeExtension: void set(int,boolean)>/$stack7
<java.util.regex.Pattern$BnM: java.util.regex.Pattern$Node optimize(java.util.regex.Pattern$Node)>/assign/instruction11	<java.util.regex.Pattern$BnM: java.util.regex.Pattern$Node optimize(java.util.regex.Pattern$Node)>/l2#_5399
<jdk.internal.org.objectweb.asm.ByteVector: void enlarge(int)>/assign/instruction14	<jdk.internal.org.objectweb.asm.ByteVector: void enlarge(int)>/$stack10_$$A_2
<java.io.DataOutputStream: int writeUTF(java.lang.String,java.io.DataOutput)>/assign/instruction50	<java.io.DataOutputStream: int writeUTF(java.lang.String,java.io.DataOutput)>/$stack60
<java.io.DataOutputStream: int writeUTF(java.lang.String,java.io.DataOutput)>/assign/instruction55	<java.io.DataOutputStream: int writeUTF(java.lang.String,java.io.DataOutput)>/$stack10
<java.nio.DirectCharBufferRU: java.lang.String toString(int,int)>/assign/instruction11	<java.nio.DirectCharBufferRU: java.lang.String toString(int,int)>/l3#_419
<java.util.Arrays: void parallelSort(byte[])>/assign/instruction12	<java.util.Arrays: void parallelSort(byte[])>/l1#_463
<java.util.Arrays: void parallelSort(byte[],int,int)>/assign/instruction15	<java.util.Arrays: void parallelSort(byte[],int,int)>/l3#_503
<java.util.Arrays: void parallelSort(char[])>/assign/instruction15	<java.util.Arrays: void parallelSort(char[])>/l1#_533
<java.util.Arrays: void parallelSort(char[],int,int)>/assign/instruction18	<java.util.Arrays: void parallelSort(char[],int,int)>/l3#_573
<java.util.Arrays: void parallelSort(short[])>/assign/instruction15	<java.util.Arrays: void parallelSort(short[])>/l1#_603
<sun.misc.Launcher$ExtClassLoader: java.io.File[] getExtDirs()>/assign/instruction9	<sun.misc.Launcher$ExtClassLoader: java.io.File[] getExtDirs()>/l3#_175
<java.util.Arrays: void parallelSort(short[],int,int)>/assign/instruction18	<java.util.Arrays: void parallelSort(short[],int,int)>/l3#_643
<java.util.Arrays: void parallelSort(int[])>/assign/instruction15	<java.util.Arrays: void parallelSort(int[])>/l1#_673
<sun.misc.Launcher$ExtClassLoader: java.net.URL[] getExtURLs(java.io.File[])>/assign/instruction38	<sun.misc.Launcher$ExtClassLoader: java.net.URL[] getExtURLs(java.io.File[])>/$stack8
<java.util.Arrays: void parallelSort(int[],int,int)>/assign/instruction18	<java.util.Arrays: void parallelSort(int[],int,int)>/l3#_713
<java.util.Arrays: void parallelSort(long[])>/assign/instruction15	<java.util.Arrays: void parallelSort(long[])>/l1#_743
<java.util.Arrays: void parallelSort(long[],int,int)>/assign/instruction18	<java.util.Arrays: void parallelSort(long[],int,int)>/l3#_783
<java.util.Arrays: void parallelSort(float[])>/assign/instruction15	<java.util.Arrays: void parallelSort(float[])>/l1#_821
<java.io.ObjectOutputStream$HandleTable: void <init>(int,float)>/assign/instruction6	<java.io.ObjectOutputStream$HandleTable: void <init>(int,float)>/l1#_0
<java.io.ObjectOutputStream$HandleTable: void <init>(int,float)>/assign/instruction8	<java.io.ObjectOutputStream$HandleTable: void <init>(int,float)>/l1#_0
<java.io.ObjectOutputStream$HandleTable: void <init>(int,float)>/assign/instruction10	<java.io.ObjectOutputStream$HandleTable: void <init>(int,float)>/l1#_0
<java.util.Arrays: void parallelSort(float[],int,int)>/assign/instruction18	<java.util.Arrays: void parallelSort(float[],int,int)>/l3#_869
<java.util.Arrays: void parallelSort(double[])>/assign/instruction15	<java.util.Arrays: void parallelSort(double[])>/l1#_907
<java.util.Arrays: void parallelSort(double[],int,int)>/assign/instruction18	<java.util.Arrays: void parallelSort(double[],int,int)>/l3#_955
<java.io.ObjectOutputStream$HandleTable: void growSpine()>/assign/instruction6	<java.io.ObjectOutputStream$HandleTable: void growSpine()>/$stack5
<java.io.ObjectOutputStream$HandleTable: void growEntries()>/assign/instruction6	<java.io.ObjectOutputStream$HandleTable: void growEntries()>/l1#_2346
<java.io.ObjectOutputStream$HandleTable: void growEntries()>/assign/instruction13	<java.io.ObjectOutputStream$HandleTable: void growEntries()>/l1#_2346
<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$ASCIIToBinaryConverter readJavaFormatString(java.lang.String)>/assign/instruction60	<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$ASCIIToBinaryConverter readJavaFormatString(java.lang.String)>/l5#_1840
<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/assign/instruction5	<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/l1#_0
<java.util.Arrays: byte[] copyOf(byte[],int)>/assign/instruction3	<java.util.Arrays: byte[] copyOf(byte[],int)>/l1#_0
<java.util.Arrays: short[] copyOf(short[],int)>/assign/instruction3	<java.util.Arrays: short[] copyOf(short[],int)>/l1#_0
<java.util.Arrays: int[] copyOf(int[],int)>/assign/instruction3	<java.util.Arrays: int[] copyOf(int[],int)>/l1#_0
<java.util.Arrays: long[] copyOf(long[],int)>/assign/instruction3	<java.util.Arrays: long[] copyOf(long[],int)>/l1#_0
<java.util.Arrays: char[] copyOf(char[],int)>/assign/instruction3	<java.util.Arrays: char[] copyOf(char[],int)>/l1#_0
<java.util.Arrays: float[] copyOf(float[],int)>/assign/instruction3	<java.util.Arrays: float[] copyOf(float[],int)>/l1#_0
<java.util.Arrays: double[] copyOf(double[],int)>/assign/instruction3	<java.util.Arrays: double[] copyOf(double[],int)>/l1#_0
<java.util.Arrays: boolean[] copyOf(boolean[],int)>/assign/instruction3	<java.util.Arrays: boolean[] copyOf(boolean[],int)>/l1#_0
<java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class)>/assign/instruction18	<java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class)>/l4#_3478
<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/assign/instruction16	<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/l3#_3517
<java.util.Arrays: short[] copyOfRange(short[],int,int)>/assign/instruction16	<java.util.Arrays: short[] copyOfRange(short[],int,int)>/l3#_3553
<java.util.Arrays: int[] copyOfRange(int[],int,int)>/assign/instruction16	<java.util.Arrays: int[] copyOfRange(int[],int,int)>/l3#_3589
<java.util.stream.DoublePipeline: java.lang.Double[] lambda$toArray$9(int)>/assign/instruction2	<java.util.stream.DoublePipeline: java.lang.Double[] lambda$toArray$9(int)>/l0#_0
<java.util.Arrays: long[] copyOfRange(long[],int,int)>/assign/instruction16	<java.util.Arrays: long[] copyOfRange(long[],int,int)>/l3#_3625
<java.util.Arrays: char[] copyOfRange(char[],int,int)>/assign/instruction16	<java.util.Arrays: char[] copyOfRange(char[],int,int)>/l3#_3661
<java.util.Arrays: float[] copyOfRange(float[],int,int)>/assign/instruction16	<java.util.Arrays: float[] copyOfRange(float[],int,int)>/l3#_3697
<java.util.Arrays: double[] copyOfRange(double[],int,int)>/assign/instruction16	<java.util.Arrays: double[] copyOfRange(double[],int,int)>/l3#_3733
<java.util.Arrays: boolean[] copyOfRange(boolean[],int,int)>/assign/instruction16	<java.util.Arrays: boolean[] copyOfRange(boolean[],int,int)>/l3#_3769
<java.io.ExpiringCache: void cleanup()>/assign/instruction5	<java.io.ExpiringCache: void cleanup()>/$stack8
<java.lang.invoke.LambdaForm$1: void <clinit>()>/assign/instruction3	<java.lang.invoke.LambdaForm$1: void <clinit>()>/$stack2
<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/assign/instruction241	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/$stack76
<java.lang.invoke.DirectMethodHandle: void <clinit>()>/assign/instruction43	<java.lang.invoke.DirectMethodHandle: void <clinit>()>/$stack13
<java.nio.file.FileTreeWalker$1: void <clinit>()>/assign/instruction3	<java.nio.file.FileTreeWalker$1: void <clinit>()>/$stack2
<java.lang.invoke.MethodHandles$1: void <clinit>()>/assign/instruction3	<java.lang.invoke.MethodHandles$1: void <clinit>()>/$stack2
<jdk.internal.util.xml.impl.Attrs: void setLength(char)>/assign/instruction9	<jdk.internal.util.xml.impl.Attrs: void setLength(char)>/$stack6
<java.util.stream.ReferencePipeline: java.lang.Object[] lambda$toArray$0(int)>/assign/instruction2	<java.util.stream.ReferencePipeline: java.lang.Object[] lambda$toArray$0(int)>/l0#_0
<java.text.DigitList: void append(char)>/assign/instruction9	<java.text.DigitList: void append(char)>/$stack10
<java.nio.HeapCharBuffer: void <init>(int,int)>/assign/instruction4	<java.nio.HeapCharBuffer: void <init>(int,int)>/l1#_0
<sun.security.util.DerInputBuffer: byte[] toByteArray()>/assign/instruction6	<sun.security.util.DerInputBuffer: byte[] toByteArray()>/l1#_65
<sun.security.util.DerInputBuffer: java.math.BigInteger getBigInteger(int,boolean)>/assign/instruction15	<sun.security.util.DerInputBuffer: java.math.BigInteger getBigInteger(int,boolean)>/l1#_0
<sun.security.util.DerInputBuffer: byte[] getBitString(int)>/assign/instruction24	<sun.security.util.DerInputBuffer: byte[] getBitString(int)>/$stack8
<java.text.DigitList: java.lang.Object clone()>/assign/instruction6	<java.text.DigitList: java.lang.Object clone()>/$stack5
<sun.security.util.DerInputBuffer: sun.security.util.BitArray getUnalignedBitString()>/assign/instruction23	<sun.security.util.DerInputBuffer: sun.security.util.BitArray getUnalignedBitString()>/$stack12
<java.text.DigitList: void extendDigits(int)>/assign/instruction6	<java.text.DigitList: void extendDigits(int)>/l1#_0
<java.text.DigitList: char[] getDataChars(int)>/assign/instruction8	<java.text.DigitList: char[] getDataChars(int)>/l1#_0
<java.util.stream.Nodes$LongArrayNode: void <init>(long)>/assign/instruction11	<java.util.stream.Nodes$LongArrayNode: void <init>(long)>/$stack4
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>/assign/instruction11	<java.io.BufferedWriter: void <init>(java.io.Writer,int)>/l2#_0
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertIndirect(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/assign/instruction74	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertIndirect(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/$stack38
<java.util.Spliterators$AbstractDoubleSpliterator: java.util.Spliterator$OfDouble trySplit()>/assign/instruction22	<java.util.Spliterators$AbstractDoubleSpliterator: java.util.Spliterator$OfDouble trySplit()>/l4_$$A_4#_1647
<java.lang.invoke.MethodHandleImpl: java.lang.Object[] computeValueConversions(java.lang.invoke.MethodType,java.lang.invoke.MethodType,boolean,boolean)>/assign/instruction7	<java.lang.invoke.MethodHandleImpl: java.lang.Object[] computeValueConversions(java.lang.invoke.MethodType,java.lang.invoke.MethodType,boolean,boolean)>/$stack11
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeSpreadArguments(java.lang.invoke.MethodHandle,java.lang.Class,int,int)>/assign/instruction33	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeSpreadArguments(java.lang.invoke.MethodHandle,java.lang.Class,int,int)>/$stack25
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeSpreadArguments(java.lang.invoke.MethodHandle,java.lang.Class,int,int)>/assign/instruction107	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeSpreadArguments(java.lang.invoke.MethodHandle,java.lang.Class,int,int)>/$stack29
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeCollectArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,boolean)>/assign/instruction41	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeCollectArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,boolean)>/$stack37
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.LambdaForm makeGuardWithCatchForm(java.lang.invoke.MethodType)>/assign/instruction78	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.LambdaForm makeGuardWithCatchForm(java.lang.invoke.MethodType)>/$stack65
<java.lang.invoke.MethodHandleImpl: java.lang.Object[] prepend(java.lang.Object,java.lang.Object[])>/assign/instruction5	<java.lang.invoke.MethodHandleImpl: java.lang.Object[] prepend(java.lang.Object,java.lang.Object[])>/$stack4
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] makeArrays()>/assign/instruction26	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] makeArrays()>/$stack16
<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillNewArray(java.lang.Integer,java.lang.Object[])>/assign/instruction4	<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillNewArray(java.lang.Integer,java.lang.Object[])>/$stack3
<java.util.StringTokenizer: void setMaxDelimCodePoint()>/assign/instruction43	<java.util.StringTokenizer: void setMaxDelimCodePoint()>/l3_$$A_1#_152
<java.time.zone.ZoneOffsetTransitionRule$1: void <clinit>()>/assign/instruction3	<java.time.zone.ZoneOffsetTransitionRule$1: void <clinit>()>/$stack2
<java.lang.invoke.MethodHandleImpl: void <clinit>()>/assign/instruction34	<java.lang.invoke.MethodHandleImpl: void <clinit>()>/$stack16
<sun.security.ssl.HandshakeMessage$DH_ServerKeyExchange: void <init>(sun.security.ssl.HandshakeInStream,java.security.PublicKey,byte[],byte[],int,java.util.Collection,sun.security.ssl.ProtocolVersion)>/assign/instruction73	<sun.security.ssl.HandshakeMessage$DH_ServerKeyExchange: void <init>(sun.security.ssl.HandshakeInStream,java.security.PublicKey,byte[],byte[],int,java.util.Collection,sun.security.ssl.ProtocolVersion)>/l5#5_$$A_2#_825
<java.security.SecureRandom: int next(int)>/assign/instruction5	<java.security.SecureRandom: int next(int)>/l2#_487
<sun.security.ssl.SSLContextImpl$CustomizedTLSContext: void <clinit>()>/assign/instruction43	<sun.security.ssl.SSLContextImpl$CustomizedTLSContext: void <clinit>()>/$stack10
<java.time.chrono.ThaiBuddhistDate$1: void <clinit>()>/assign/instruction3	<java.time.chrono.ThaiBuddhistDate$1: void <clinit>()>/$stack2
<java.net.URI: java.lang.String normalize(java.lang.String)>/assign/instruction6	<java.net.URI: java.lang.String normalize(java.lang.String)>/l1#_2425
<java.lang.Class$MethodArray: void <init>(int)>/assign/instruction9	<java.lang.Class$MethodArray: void <init>(int)>/l1#_0
<sun.security.util.DerValue: void <init>(sun.security.util.DerInputBuffer)>/assign/instruction17	<sun.security.util.DerValue: void <init>(sun.security.util.DerInputBuffer)>/$stack24
<sun.security.util.DerValue: sun.security.util.DerInputStream init(boolean,java.io.InputStream)>/assign/instruction16	<sun.security.util.DerValue: sun.security.util.DerInputStream init(boolean,java.io.InputStream)>/$stack29
<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>/assign/instruction10	<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>/$stack8
<sun.security.util.DerValue: byte[] append(byte[],byte[])>/assign/instruction9	<sun.security.util.DerValue: byte[] append(byte[],byte[])>/$stack6
<sun.security.util.DerValue: byte[] getOctetString()>/assign/instruction18	<sun.security.util.DerValue: byte[] getOctetString()>/$stack4
<java.util.Base64$Decoder: byte[] decode(byte[])>/assign/instruction6	<java.util.Base64$Decoder: byte[] decode(byte[])>/$stack5
<java.util.Base64$Decoder: java.nio.ByteBuffer decode(java.nio.ByteBuffer)>/assign/instruction17	<java.util.Base64$Decoder: java.nio.ByteBuffer decode(java.nio.ByteBuffer)>/$stack9
<java.util.Base64$Decoder: java.nio.ByteBuffer decode(java.nio.ByteBuffer)>/assign/instruction28	<java.util.Base64$Decoder: java.nio.ByteBuffer decode(java.nio.ByteBuffer)>/$stack11
<sun.security.util.DerValue: byte[] getDataBytes()>/assign/instruction3	<sun.security.util.DerValue: byte[] getDataBytes()>/$stack4
<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/assign/instruction40	<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/l5#_176
<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/assign/instruction52	<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/l6#_191
<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/assign/instruction66	<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/l6_$$A_1#_197
<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/assign/instruction89	<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/l6_$$A_2#_212
<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/assign/instruction105	<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/l6_$$A_3#_220
<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/assign/instruction121	<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/l6_$$A_4#_226
<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/assign/instruction137	<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/l6_$$A_5#_234
<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/assign/instruction153	<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/l6_$$A_6#_242
<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/assign/instruction169	<sun.util.locale.provider.BreakDictionary: void readDictionaryFile(java.lang.String)>/l6_$$A_7#_250
<sun.util.logging.PlatformLogger$JavaLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Object[])>/assign/instruction15	<sun.util.logging.PlatformLogger$JavaLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Object[])>/l4#_623
<java.util.jar.Manifest$FastInputStream: void <init>(java.io.InputStream,int)>/assign/instruction9	<java.util.jar.Manifest$FastInputStream: void <init>(java.io.InputStream,int)>/l2#_0
<sun.text.normalizer.NormalizerImpl: void <init>()>/assign/instruction19	<sun.text.normalizer.NormalizerImpl: void <init>()>/$stack16
<sun.text.normalizer.NormalizerImpl: void <init>()>/assign/instruction22	<sun.text.normalizer.NormalizerImpl: void <init>()>/l5#_268
<sun.text.normalizer.NormalizerImpl: void <init>()>/assign/instruction26	<sun.text.normalizer.NormalizerImpl: void <init>()>/l6#_271
<sun.text.normalizer.NormalizerImpl: void <init>()>/assign/instruction30	<sun.text.normalizer.NormalizerImpl: void <init>()>/$stack22
<sun.text.normalizer.NormalizerImpl: void <init>()>/assign/instruction33	<sun.text.normalizer.NormalizerImpl: void <init>()>/$stack24
<java.lang.Throwable: java.lang.StackTraceElement[] getOurStackTrace()>/assign/instruction10	<java.lang.Throwable: java.lang.StackTraceElement[] getOurStackTrace()>/l1#_824
<java.util.concurrent.ForkJoinPool: void externalSubmit(java.util.concurrent.ForkJoinTask)>/assign/instruction94	<java.util.concurrent.ForkJoinPool: void externalSubmit(java.util.concurrent.ForkJoinTask)>/l11_$$A_7#_2342
<sun.text.normalizer.NormalizerImpl: char[] composePart(sun.text.normalizer.NormalizerImpl$ComposePartArgs,int,char[],int,int,int,sun.text.normalizer.UnicodeSet)>/assign/instruction19	<sun.text.normalizer.NormalizerImpl: char[] composePart(sun.text.normalizer.NormalizerImpl$ComposePartArgs,int,char[],int,int,int,sun.text.normalizer.UnicodeSet)>/$stack14
<sun.text.normalizer.NormalizerImpl: char[] composePart(sun.text.normalizer.NormalizerImpl$ComposePartArgs,int,char[],int,int,int,sun.text.normalizer.UnicodeSet)>/assign/instruction31	<sun.text.normalizer.NormalizerImpl: char[] composePart(sun.text.normalizer.NormalizerImpl$ComposePartArgs,int,char[],int,int,int,sun.text.normalizer.UnicodeSet)>/$stack19
<java.time.chrono.HijrahChronology$1: void <clinit>()>/assign/instruction3	<java.time.chrono.HijrahChronology$1: void <clinit>()>/$stack2
<java.lang.ProcessImpl: byte[] toCString(java.lang.String)>/assign/instruction8	<java.lang.ProcessImpl: byte[] toCString(java.lang.String)>/$stack5
<sun.security.ssl.ClientHandshaker$2: void <clinit>()>/assign/instruction3	<sun.security.ssl.ClientHandshaker$2: void <clinit>()>/$stack2
<java.nio.HeapIntBuffer: void <init>(int,int)>/assign/instruction4	<java.nio.HeapIntBuffer: void <init>(int,int)>/l1#_0
<sun.text.normalizer.NormalizerImpl: java.lang.String canonicalDecomposeWithSingleQuotation(java.lang.String)>/assign/instruction7	<sun.text.normalizer.NormalizerImpl: java.lang.String canonicalDecomposeWithSingleQuotation(java.lang.String)>/$stack26
<java.lang.ProcessImpl: java.lang.Process start(java.lang.String[],java.util.Map,java.lang.String,java.lang.ProcessBuilder$Redirect[],boolean)>/assign/instruction16	<java.lang.ProcessImpl: java.lang.Process start(java.lang.String[],java.util.Map,java.lang.String,java.lang.ProcessBuilder$Redirect[],boolean)>/$stack25
<java.lang.ProcessImpl: java.lang.Process start(java.lang.String[],java.util.Map,java.lang.String,java.lang.ProcessBuilder$Redirect[],boolean)>/assign/instruction34	<java.lang.ProcessImpl: java.lang.Process start(java.lang.String[],java.util.Map,java.lang.String,java.lang.ProcessBuilder$Redirect[],boolean)>/l6_$$A_1#_74
<sun.text.normalizer.NormalizerImpl: java.lang.String canonicalDecomposeWithSingleQuotation(java.lang.String)>/assign/instruction205	<sun.text.normalizer.NormalizerImpl: java.lang.String canonicalDecomposeWithSingleQuotation(java.lang.String)>/$stack73
<sun.misc.FormattedFloatingDecimal$2: void <clinit>()>/assign/instruction3	<sun.misc.FormattedFloatingDecimal$2: void <clinit>()>/$stack2
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>/assign/instruction15	<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>/$stack9
<java.time.chrono.ChronoLocalDateTimeImpl$1: void <clinit>()>/assign/instruction3	<java.time.chrono.ChronoLocalDateTimeImpl$1: void <clinit>()>/$stack2
<sun.misc.ExtensionDependency: java.io.File[] getExtDirs()>/assign/instruction19	<sun.misc.ExtensionDependency: java.io.File[] getExtDirs()>/l3#_440
<sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>/assign/instruction53	<sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>/$stack8
<java.util.Properties$LineReader: int readLine()>/assign/instruction258	<java.util.Properties$LineReader: int readLine()>/l9_$$A_3#_484
<java.util.Collections$CheckedMap$CheckedEntrySet: java.lang.Object[] toArray()>/assign/instruction12	<java.util.Collections$CheckedMap$CheckedEntrySet: java.lang.Object[] toArray()>/$stack10
<sun.invoke.util.ValueConversions$1: void <clinit>()>/assign/instruction3	<sun.invoke.util.ValueConversions$1: void <clinit>()>/$stack2
<sun.net.idn.StringPrepDataReader: int[] readIndexes(int)>/assign/instruction3	<sun.net.idn.StringPrepDataReader: int[] readIndexes(int)>/l1#_0
<java.nio.ByteBufferAsCharBufferRL: java.lang.String toString(int,int)>/assign/instruction11	<java.nio.ByteBufferAsCharBufferRL: java.lang.String toString(int,int)>/l3#_180
<java.util.AbstractCollection: java.lang.Object[] toArray()>/assign/instruction3	<java.util.AbstractCollection: java.lang.Object[] toArray()>/$stack4
<java.lang.invoke.InnerClassLambdaMetafactory: void <init>(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodType,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,java.lang.Class[],java.lang.invoke.MethodType[])>/assign/instruction57	<java.lang.invoke.InnerClassLambdaMetafactory: void <init>(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodType,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,java.lang.Class[],java.lang.invoke.MethodType[])>/l10#_167
<java.lang.invoke.InnerClassLambdaMetafactory: void <init>(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodType,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,java.lang.Class[],java.lang.invoke.MethodType[])>/assign/instruction59	<java.lang.invoke.InnerClassLambdaMetafactory: void <init>(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodType,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,java.lang.Class[],java.lang.invoke.MethodType[])>/l10#_167
<java.lang.invoke.InnerClassLambdaMetafactory: java.lang.Class spinInnerClass()>/assign/instruction64	<java.lang.invoke.InnerClassLambdaMetafactory: java.lang.Class spinInnerClass()>/$stack20
<java.lang.invoke.LambdaForm: java.lang.invoke.MethodType signatureType(java.lang.String)>/assign/instruction3	<java.lang.invoke.LambdaForm: java.lang.invoke.MethodType signatureType(java.lang.String)>/$stack3
<java.util.Spliterators$IntIteratorSpliterator: java.util.Spliterator$OfInt trySplit()>/assign/instruction20	<java.util.Spliterators$IntIteratorSpliterator: java.util.Spliterator$OfInt trySplit()>/l4_$$A_4#_1894
<sun.net.www.protocol.https.HttpsClient: java.lang.String[] getCipherSuites()>/assign/instruction26	<sun.net.www.protocol.https.HttpsClient: java.lang.String[] getCipherSuites()>/$stack13
<java.io.ObjectInputStream$HandleTable: void <init>(int)>/assign/instruction8	<java.io.ObjectInputStream$HandleTable: void <init>(int)>/l1#_0
<java.io.ObjectInputStream$HandleTable: void <init>(int)>/assign/instruction10	<java.io.ObjectInputStream$HandleTable: void <init>(int)>/l1#_0
<java.io.ObjectInputStream$HandleTable: void <init>(int)>/assign/instruction12	<java.io.ObjectInputStream$HandleTable: void <init>(int)>/l1#_0
<sun.net.www.protocol.https.HttpsClient: java.lang.String[] getProtocols()>/assign/instruction26	<sun.net.www.protocol.https.HttpsClient: java.lang.String[] getProtocols()>/$stack13
<java.io.ObjectInputStream$HandleTable: void grow()>/assign/instruction6	<java.io.ObjectInputStream$HandleTable: void grow()>/l1#_3775
<java.io.ObjectInputStream$HandleTable: void grow()>/assign/instruction7	<java.io.ObjectInputStream$HandleTable: void grow()>/l1#_3775
<java.io.ObjectInputStream$HandleTable: void grow()>/assign/instruction8	<java.io.ObjectInputStream$HandleTable: void grow()>/l1#_3775
<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm permuteArguments(int,int[],java.lang.invoke.LambdaForm$BasicType[])>/assign/instruction35	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm permuteArguments(int,int[],java.lang.invoke.LambdaForm$BasicType[])>/$stack21
<java.lang.invoke.LambdaForm: java.lang.String basicTypeSignature(java.lang.invoke.MethodType)>/assign/instruction4	<java.lang.invoke.LambdaForm: java.lang.String basicTypeSignature(java.lang.invoke.MethodType)>/$stack6
<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,java.lang.String)>/assign/instruction5	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,java.lang.String)>/$stack6
<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,char[])>/assign/instruction5	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,char[])>/$stack5
<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,java.util.List)>/assign/instruction5	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,java.util.List)>/$stack6
<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,java.lang.Class[])>/assign/instruction5	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,java.lang.Class[])>/$stack5
<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,java.lang.invoke.MethodType)>/assign/instruction5	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] arguments(int,java.lang.invoke.MethodType)>/$stack6
<java.lang.invoke.LambdaForm: void <clinit>()>/assign/instruction48	<java.lang.invoke.LambdaForm: void <clinit>()>/$stack13
<java.lang.invoke.LambdaForm: void <clinit>()>/assign/instruction51	<java.lang.invoke.LambdaForm: void <clinit>()>/$stack15
<java.lang.invoke.LambdaForm: void <clinit>()>/assign/instruction54	<java.lang.invoke.LambdaForm: void <clinit>()>/$stack17
<java.lang.invoke.LambdaForm: void <clinit>()>/assign/instruction57	<java.lang.invoke.LambdaForm: void <clinit>()>/$stack19
<sun.net.ftp.impl.FtpClient: sun.net.ftp.FtpClient getFile(java.lang.String,java.io.OutputStream)>/assign/instruction37	<sun.net.ftp.impl.FtpClient: sun.net.ftp.FtpClient getFile(java.lang.String,java.io.OutputStream)>/$stack34
<sun.net.ftp.impl.FtpClient: sun.net.ftp.FtpClient getFile(java.lang.String,java.io.OutputStream)>/assign/instruction61	<sun.net.ftp.impl.FtpClient: sun.net.ftp.FtpClient getFile(java.lang.String,java.io.OutputStream)>/$stack17
<sun.net.ftp.impl.FtpClient: sun.net.ftp.FtpClient putFile(java.lang.String,java.io.InputStream,boolean)>/assign/instruction25	<sun.net.ftp.impl.FtpClient: sun.net.ftp.FtpClient putFile(java.lang.String,java.io.InputStream,boolean)>/$stack20
<sun.net.ftp.impl.FtpClient: sun.net.ftp.FtpClient appendFile(java.lang.String,java.io.InputStream)>/assign/instruction15	<sun.net.ftp.impl.FtpClient: sun.net.ftp.FtpClient appendFile(java.lang.String,java.io.InputStream)>/$stack15
<java.lang.invoke.BoundMethodHandle$SpeciesData: void <init>(java.lang.String,java.lang.Class)>/assign/instruction14	<java.lang.invoke.BoundMethodHandle$SpeciesData: void <init>(java.lang.String,java.lang.Class)>/$stack12
<java.lang.invoke.BoundMethodHandle$SpeciesData: void <init>(java.lang.String,java.lang.Class)>/assign/instruction17	<java.lang.invoke.BoundMethodHandle$SpeciesData: void <init>(java.lang.String,java.lang.Class)>/$stack14
<java.lang.invoke.BoundMethodHandle$SpeciesData: void <init>(java.lang.String,java.lang.Class)>/assign/instruction31	<java.lang.invoke.BoundMethodHandle$SpeciesData: void <init>(java.lang.String,java.lang.Class)>/$stack9
<sun.net.ftp.impl.FtpClient: void <clinit>()>/assign/instruction134	<sun.net.ftp.impl.FtpClient: void <clinit>()>/$stack23
<sun.net.ftp.impl.FtpClient: void <clinit>()>/assign/instruction163	<sun.net.ftp.impl.FtpClient: void <clinit>()>/$stack29
<java.time.chrono.ChronoZonedDateTime$1: void <clinit>()>/assign/instruction3	<java.time.chrono.ChronoZonedDateTime$1: void <clinit>()>/$stack2
<java.time.format.DateTimeFormatterBuilder$3: void <clinit>()>/assign/instruction3	<java.time.format.DateTimeFormatterBuilder$3: void <clinit>()>/$stack2
<sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/assign/instruction23	<sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/l8#_1075
<sun.reflect.generics.visitor.Reifier: java.lang.reflect.Type[] reifyTypeArguments(sun.reflect.generics.tree.TypeArgument[])>/assign/instruction4	<sun.reflect.generics.visitor.Reifier: java.lang.reflect.Type[] reifyTypeArguments(sun.reflect.generics.tree.TypeArgument[])>/$stack4
<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)>/assign/instruction8	<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)>/$stack8
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/assign/instruction34	<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/l6_$$A_1#_303
<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/assign/instruction63	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/$stack40
<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/assign/instruction111	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/$stack32
<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()>/assign/instruction17	<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()>/$stack22
<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()>/assign/instruction15	<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()>/$stack19
<java.lang.AbstractStringBuilder: void <init>(int)>/assign/instruction4	<java.lang.AbstractStringBuilder: void <init>(int)>/l1#_0
<sun.security.ssl.UnknownExtension: void <init>(sun.security.ssl.HandshakeInStream,int,sun.security.ssl.ExtensionType)>/assign/instruction6	<sun.security.ssl.UnknownExtension: void <init>(sun.security.ssl.HandshakeInStream,int,sun.security.ssl.ExtensionType)>/l2#_0
<java.util.stream.Nodes$DoubleArrayNode: void <init>(long)>/assign/instruction11	<java.util.stream.Nodes$DoubleArrayNode: void <init>(long)>/$stack4
<java.lang.Class: java.lang.reflect.Field[] privateGetPublicFields(java.util.Set)>/assign/instruction44	<java.lang.Class: java.lang.reflect.Field[] privateGetPublicFields(java.util.Set)>/$stack15
<java.util.stream.SortedOps$SizedDoubleSortingSink: void begin(long)>/assign/instruction10	<java.util.stream.SortedOps$SizedDoubleSortingSink: void begin(long)>/$stack4
<java.lang.Class: java.lang.reflect.Field[] copyFields(java.lang.reflect.Field[])>/assign/instruction3	<java.lang.Class: java.lang.reflect.Field[] copyFields(java.lang.reflect.Field[])>/$stack4
<java.lang.Class: java.lang.reflect.Method[] copyMethods(java.lang.reflect.Method[])>/assign/instruction3	<java.lang.Class: java.lang.reflect.Method[] copyMethods(java.lang.reflect.Method[])>/$stack4
<java.time.chrono.HijrahDate$1: void <clinit>()>/assign/instruction3	<java.time.chrono.HijrahDate$1: void <clinit>()>/$stack2
<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>/assign/instruction82	<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>/l7#39_$$A_3#_1240
<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)>/assign/instruction49	<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)>/l2_$$A_2#_1519
<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)>/assign/instruction50	<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)>/l3_$$A_1#_1517
<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)>/assign/instruction130	<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)>/l6_$$A_4#_1536
<java.util.regex.Pattern: void RemoveQEQuoting()>/assign/instruction29	<java.util.regex.Pattern: void RemoveQEQuoting()>/$stack13
<java.util.regex.Pattern: void compile()>/assign/instruction17	<java.util.regex.Pattern: void compile()>/$stack9
<java.util.stream.StreamSpliterators$ArrayBuffer$OfRef: void <init>(int)>/assign/instruction4	<java.util.stream.StreamSpliterators$ArrayBuffer$OfRef: void <init>(int)>/l1#_0
<java.util.IdentityHashMap$IdentityHashMapIterator: void remove()>/assign/instruction68	<java.util.IdentityHashMap$IdentityHashMapIterator: void remove()>/l9#_804
<java.io.ObjectOutputStream$ReplaceTable: void <init>(int,float)>/assign/instruction8	<java.io.ObjectOutputStream$ReplaceTable: void <init>(int,float)>/l1#_0
<java.util.stream.Nodes$1: void <clinit>()>/assign/instruction3	<java.util.stream.Nodes$1: void <clinit>()>/$stack2
<java.io.ObjectOutputStream$ReplaceTable: void grow()>/assign/instruction6	<java.io.ObjectOutputStream$ReplaceTable: void grow()>/$stack5
<java.lang.CharacterName: byte[] initNamePool()>/assign/instruction25	<java.lang.CharacterName: byte[] initNamePool()>/l3#_57
<java.lang.CharacterName: byte[] initNamePool()>/assign/instruction87	<java.lang.CharacterName: byte[] initNamePool()>/$stack34
<java.util.regex.Pattern: void append(int,int)>/assign/instruction8	<java.util.regex.Pattern: void append(int,int)>/$stack7
<java.lang.ProcessBuilder: java.lang.Process start()>/assign/instruction5	<java.lang.ProcessBuilder: java.lang.Process start()>/$stack11
<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>/assign/instruction27	<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>/$stack8
<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>/assign/instruction11	<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>/l4#_542
<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>/assign/instruction47	<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>/$stack20
<java.util.LinkedList: java.lang.Object[] toArray()>/assign/instruction3	<java.util.LinkedList: java.lang.Object[] toArray()>/$stack4
<java.security.CodeSource: java.security.CodeSigner[] convertCertArrayToSignerArray(java.security.cert.Certificate[])>/assign/instruction56	<java.security.CodeSource: java.security.CodeSigner[] convertCertArrayToSignerArray(java.security.cert.Certificate[])>/$stack11
<java.util.stream.Nodes: java.util.stream.Node$OfInt collectInt(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>/assign/instruction17	<java.util.stream.Nodes: java.util.stream.Node$OfInt collectInt(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>/$stack17
<java.util.stream.Nodes: java.util.stream.Node$OfLong collectLong(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>/assign/instruction17	<java.util.stream.Nodes: java.util.stream.Node$OfLong collectLong(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>/$stack17
<java.util.stream.Nodes: java.util.stream.Node$OfDouble collectDouble(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>/assign/instruction17	<java.util.stream.Nodes: java.util.stream.Node$OfDouble collectDouble(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>/$stack17
<java.util.stream.Nodes: java.util.stream.Node$OfInt flattenInt(java.util.stream.Node$OfInt)>/assign/instruction12	<java.util.stream.Nodes: java.util.stream.Node$OfInt flattenInt(java.util.stream.Node$OfInt)>/$stack7
<java.util.stream.Nodes: java.util.stream.Node$OfLong flattenLong(java.util.stream.Node$OfLong)>/assign/instruction12	<java.util.stream.Nodes: java.util.stream.Node$OfLong flattenLong(java.util.stream.Node$OfLong)>/$stack7
<java.util.stream.Nodes: java.util.stream.Node$OfDouble flattenDouble(java.util.stream.Node$OfDouble)>/assign/instruction12	<java.util.stream.Nodes: java.util.stream.Node$OfDouble flattenDouble(java.util.stream.Node$OfDouble)>/$stack7
<java.util.regex.Pattern: java.util.regex.Pattern$Node newSlice(int[],int,boolean)>/assign/instruction5	<java.util.regex.Pattern: java.util.regex.Pattern$Node newSlice(int[],int,boolean)>/l2#_0
<java.util.stream.Node$OfLong: long[] newArray(int)>/assign/instruction3	<java.util.stream.Node$OfLong: long[] newArray(int)>/l1#_0
<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)>/assign/instruction25	<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)>/l6#_125
<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)>/assign/instruction49	<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)>/l7#_152
<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)>/assign/instruction51	<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)>/l7#_152
<java.util.ComparableTimSort: java.lang.Object[] ensureCapacity(int)>/assign/instruction26	<java.util.ComparableTimSort: java.lang.Object[] ensureCapacity(int)>/l2_$$A_9#_898
<sun.reflect.ByteVectorImpl: void <init>(int)>/assign/instruction4	<sun.reflect.ByteVectorImpl: void <init>(int)>/l1#_0
<sun.nio.cs.FastCharsetProvider: java.lang.String toLower(java.lang.String)>/assign/instruction21	<sun.nio.cs.FastCharsetProvider: java.lang.String toLower(java.lang.String)>/l1#_74
<sun.reflect.ByteVectorImpl: void trim()>/assign/instruction9	<sun.reflect.ByteVectorImpl: void trim()>/$stack7
<sun.reflect.ByteVectorImpl: void resize(int)>/assign/instruction12	<sun.reflect.ByteVectorImpl: void resize(int)>/l1_$$A_2#_83
<sun.security.util.ECUtil: byte[] encodePoint(java.security.spec.ECPoint,java.security.spec.EllipticCurve)>/assign/instruction23	<sun.security.util.ECUtil: byte[] encodePoint(java.security.spec.ECPoint,java.security.spec.EllipticCurve)>/$stack19
<java.nio.DirectCharBufferS: java.lang.String toString(int,int)>/assign/instruction11	<java.nio.DirectCharBufferS: java.lang.String toString(int,int)>/l3#_419
<sun.misc.CharacterEncoder: void encode(java.io.InputStream,java.io.OutputStream)>/assign/instruction5	<sun.misc.CharacterEncoder: void encode(java.io.InputStream,java.io.OutputStream)>/$stack6
<sun.misc.CharacterEncoder: byte[] getBytes(java.nio.ByteBuffer)>/assign/instruction22	<sun.misc.CharacterEncoder: byte[] getBytes(java.nio.ByteBuffer)>/$stack5
<sun.misc.CharacterEncoder: void encodeBuffer(java.io.InputStream,java.io.OutputStream)>/assign/instruction5	<sun.misc.CharacterEncoder: void encodeBuffer(java.io.InputStream,java.io.OutputStream)>/$stack6
<sun.nio.ch.AbstractPollSelectorImpl: void implRegister(sun.nio.ch.SelectionKeyImpl)>/assign/instruction18	<sun.nio.ch.AbstractPollSelectorImpl: void implRegister(sun.nio.ch.SelectionKeyImpl)>/l3#_148
<sun.security.ssl.X509TrustManagerImpl: java.security.cert.X509Certificate[] getAcceptedIssuers()>/assign/instruction4	<sun.security.ssl.X509TrustManagerImpl: java.security.cert.X509Certificate[] getAcceptedIssuers()>/$stack3
<sun.reflect.UTF8: byte[] encode(java.lang.String)>/assign/instruction4	<sun.reflect.UTF8: byte[] encode(java.lang.String)>/$stack7
<java.util.HashMap: java.util.HashMap$Node[] resize()>/assign/instruction56	<java.util.HashMap: java.util.HashMap$Node[] resize()>/l4_$$A_3#_695
<java.nio.HeapDoubleBuffer: void <init>(int,int)>/assign/instruction4	<java.nio.HeapDoubleBuffer: void <init>(int,int)>/l1#_0
<java.util.BitSet: void initWords(int)>/assign/instruction6	<java.util.BitSet: void initWords(int)>/$stack4
<java.util.BitSet: java.util.BitSet valueOf(java.nio.LongBuffer)>/assign/instruction13	<java.util.BitSet: java.util.BitSet valueOf(java.nio.LongBuffer)>/l1_$$A_1#_224
<sun.text.normalizer.Trie: void unserialize(java.io.InputStream)>/assign/instruction4	<sun.text.normalizer.Trie: void unserialize(java.io.InputStream)>/$stack4
<java.util.BitSet: java.util.BitSet valueOf(java.nio.ByteBuffer)>/assign/instruction16	<java.util.BitSet: java.util.BitSet valueOf(java.nio.ByteBuffer)>/$stack11
<java.util.BitSet: byte[] toByteArray()>/assign/instruction20	<java.util.BitSet: byte[] toByteArray()>/l2_$$A_1#_302
<sun.text.normalizer.NormalizerBase$1: void <clinit>()>/assign/instruction3	<sun.text.normalizer.NormalizerBase$1: void <clinit>()>/$stack2
<java.util.HashMap: void readObject(java.io.ObjectInputStream)>/assign/instruction67	<java.util.HashMap: void readObject(java.io.ObjectInputStream)>/l5#_1391
<sun.nio.ch.IOVecWrapper: void <init>(int)>/assign/instruction5	<sun.nio.ch.IOVecWrapper: void <init>(int)>/l1#_0
<sun.nio.ch.IOVecWrapper: void <init>(int)>/assign/instruction7	<sun.nio.ch.IOVecWrapper: void <init>(int)>/l1#_0
<sun.nio.ch.IOVecWrapper: void <init>(int)>/assign/instruction9	<sun.nio.ch.IOVecWrapper: void <init>(int)>/l1#_0
<sun.nio.ch.IOVecWrapper: void <init>(int)>/assign/instruction11	<sun.nio.ch.IOVecWrapper: void <init>(int)>/l1#_0
<java.time.Instant$1: void <clinit>()>/assign/instruction3	<java.time.Instant$1: void <clinit>()>/$stack2
<java.time.Instant$1: void <clinit>()>/assign/instruction108	<java.time.Instant$1: void <clinit>()>/$stack29
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>/assign/instruction125	<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>/$stack26
<java.util.stream.SpinedBuffer$OfDouble: double[][] newArrayArray(int)>/assign/instruction3	<java.util.stream.SpinedBuffer$OfDouble: double[][] newArrayArray(int)>/l1#_0
<java.util.stream.SpinedBuffer$OfDouble: double[] newArray(int)>/assign/instruction3	<java.util.stream.SpinedBuffer$OfDouble: double[] newArray(int)>/l1#_0
<sun.text.ComposedCharIter: void <clinit>()>/assign/instruction2	<sun.text.ComposedCharIter: void <clinit>()>/l0#_46
<sun.text.ComposedCharIter: void <clinit>()>/assign/instruction4	<sun.text.ComposedCharIter: void <clinit>()>/l0#_46
<sun.security.ssl.HandshakeMessage$CertificateMsg: void <init>(sun.security.ssl.HandshakeInStream)>/assign/instruction42	<sun.security.ssl.HandshakeMessage$CertificateMsg: void <init>(sun.security.ssl.HandshakeInStream)>/$stack9
<javax.crypto.spec.RC2ParameterSpec: void <init>(int,byte[],int)>/assign/instruction22	<javax.crypto.spec.RC2ParameterSpec: void <init>(int,byte[],int)>/l4#_96
<sun.net.www.http.ChunkedOutputStream: byte[] getHeader(int)>/assign/instruction6	<sun.net.www.http.ChunkedOutputStream: byte[] getHeader(int)>/$stack7
<sun.net.www.http.ChunkedOutputStream: void <init>(java.io.PrintStream,int)>/assign/instruction49	<sun.net.www.http.ChunkedOutputStream: void <init>(java.io.PrintStream,int)>/$stack18
<sun.misc.CharacterDecoder: byte[] decodeBuffer(java.lang.String)>/assign/instruction4	<sun.misc.CharacterDecoder: byte[] decodeBuffer(java.lang.String)>/$stack5
<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>/assign/instruction27	<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>/l3#_0
<java.time.chrono.ChronoLocalDateImpl$1: void <clinit>()>/assign/instruction3	<java.time.chrono.ChronoLocalDateImpl$1: void <clinit>()>/$stack2
<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>/assign/instruction39	<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>/l5#5_$$A_2#_1462
<java.nio.HeapShortBuffer: void <init>(int,int)>/assign/instruction4	<java.nio.HeapShortBuffer: void <init>(int,int)>/l1#_0
<sun.security.x509.X500Name: void parseDER(sun.security.util.DerInputStream)>/assign/instruction32	<sun.security.x509.X500Name: void parseDER(sun.security.util.DerInputStream)>/$stack8
<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>/assign/instruction91	<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>/$stack45
<sun.security.x509.X500Name: void parseRFC2253DN(java.lang.String)>/assign/instruction57	<sun.security.x509.X500Name: void parseRFC2253DN(java.lang.String)>/$stack14
<sun.text.normalizer.NormalizerDataReader: int[] readIndexes(int)>/assign/instruction3	<sun.text.normalizer.NormalizerDataReader: int[] readIndexes(int)>/l1#_0
<sun.security.x509.X500Name: sun.security.x509.X500Name commonAncestor(sun.security.x509.X500Name)>/assign/instruction36	<sun.security.x509.X500Name: sun.security.x509.X500Name commonAncestor(sun.security.x509.X500Name)>/l5_$$A_1#_1339
<sun.security.ssl.RSAClientKeyExchange: void <init>(sun.security.ssl.ProtocolVersion,sun.security.ssl.ProtocolVersion,java.security.SecureRandom,sun.security.ssl.HandshakeInStream,int,java.security.PrivateKey)>/assign/instruction30	<sun.security.ssl.RSAClientKeyExchange: void <init>(sun.security.ssl.ProtocolVersion,sun.security.ssl.ProtocolVersion,java.security.SecureRandom,sun.security.ssl.HandshakeInStream,int,java.security.PrivateKey)>/l5#_0
<jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>/assign/instruction33	<jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>/l3_$$A_1#_357
<jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.reflect.Method)>/assign/instruction4	<jdk.internal.org.objectweb.asm.Type: jdk.internal.org.objectweb.asm.Type[] getArgumentTypes(java.lang.reflect.Method)>/$stack5
<sun.security.ssl.SupportedEllipticCurvesExtension: void <init>(sun.security.ssl.HandshakeInStream,int)>/assign/instruction24	<sun.security.ssl.SupportedEllipticCurvesExtension: void <init>(sun.security.ssl.HandshakeInStream,int)>/$stack16
<sun.security.ssl.SupportedEllipticCurvesExtension: sun.security.ssl.SupportedEllipticCurvesExtension createExtension(java.security.AlgorithmConstraints)>/assign/instruction30	<sun.security.ssl.SupportedEllipticCurvesExtension: sun.security.ssl.SupportedEllipticCurvesExtension createExtension(java.security.AlgorithmConstraints)>/$stack10
<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Node[] initTable()>/assign/instruction35	<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Node[] initTable()>/l3#_2231
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>/assign/instruction10	<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>/l2#_0
<sun.security.ssl.SupportedEllipticCurvesExtension: void <clinit>()>/assign/instruction160	<sun.security.ssl.SupportedEllipticCurvesExtension: void <clinit>()>/$stack21
<java.util.concurrent.ConcurrentHashMap: void tryPresize(int)>/assign/instruction43	<java.util.concurrent.ConcurrentHashMap: void tryPresize(int)>/l5_$$A_3#_2329
<sun.security.util.Password: char[] readPassword(java.io.InputStream,boolean)>/assign/instruction96	<sun.security.util.Password: char[] readPassword(java.io.InputStream,boolean)>/$stack28
<sun.security.util.Password: char[] readPassword(java.io.InputStream,boolean)>/assign/instruction126	<sun.security.util.Password: char[] readPassword(java.io.InputStream,boolean)>/l9_$$A_1#_81
<java.nio.ByteBufferAsCharBufferRB: java.lang.String toString(int,int)>/assign/instruction11	<java.nio.ByteBufferAsCharBufferRB: java.lang.String toString(int,int)>/l3#_180
<sun.security.util.Password: byte[] convertToBytes(char[])>/assign/instruction25	<sun.security.util.Password: byte[] convertToBytes(char[])>/$stack11
<java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>/assign/instruction21	<java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>/$stack99
<java.util.zip.CRC32: void update(java.nio.ByteBuffer)>/assign/instruction31	<java.util.zip.CRC32: void update(java.nio.ByteBuffer)>/l4#_105
<java.util.concurrent.ConcurrentHashMap: void fullAddCount(long,boolean)>/assign/instruction131	<java.util.concurrent.ConcurrentHashMap: void fullAddCount(long,boolean)>/$stack60
<sun.text.normalizer.NormalizerBase: java.lang.Object clone()>/assign/instruction12	<sun.text.normalizer.NormalizerBase: java.lang.Object clone()>/$stack8
<sun.text.normalizer.NormalizerBase: java.lang.String compose(java.lang.String,boolean,int)>/assign/instruction8	<sun.text.normalizer.NormalizerBase: java.lang.String compose(java.lang.String,boolean,int)>/$stack28
<sun.text.normalizer.NormalizerBase: java.lang.String compose(java.lang.String,boolean,int)>/assign/instruction13	<sun.text.normalizer.NormalizerBase: java.lang.String compose(java.lang.String,boolean,int)>/$stack8
<sun.text.normalizer.NormalizerBase: java.lang.String compose(java.lang.String,boolean,int)>/assign/instruction41	<sun.text.normalizer.NormalizerBase: java.lang.String compose(java.lang.String,boolean,int)>/l5#29#_681
<sun.text.normalizer.NormalizerBase: java.lang.String decompose(java.lang.String,boolean,int)>/assign/instruction11	<sun.text.normalizer.NormalizerBase: java.lang.String decompose(java.lang.String,boolean,int)>/$stack30
<sun.text.normalizer.NormalizerBase: java.lang.String decompose(java.lang.String,boolean,int)>/assign/instruction28	<sun.text.normalizer.NormalizerBase: java.lang.String decompose(java.lang.String,boolean,int)>/l4#3_$$A_1#_732
<sun.text.normalizer.NormalizerBase: java.lang.String decompose(java.lang.String,boolean,int)>/assign/instruction32	<sun.text.normalizer.NormalizerBase: java.lang.String decompose(java.lang.String,boolean,int)>/$stack10
<sun.text.normalizer.NormalizerBase: java.lang.String decompose(java.lang.String,boolean,int)>/assign/instruction49	<sun.text.normalizer.NormalizerBase: java.lang.String decompose(java.lang.String,boolean,int)>/l4#3_$$A_3#_745
<sun.security.ssl.X509KeyManagerImpl: java.lang.String[] toAliases(java.util.List)>/assign/instruction4	<sun.security.ssl.X509KeyManagerImpl: java.lang.String[] toAliases(java.util.List)>/$stack6
<sun.text.normalizer.NormalizerBase: int findPreviousIterationBoundary(sun.text.normalizer.UCharacterIterator,sun.text.normalizer.NormalizerBase$IsPrevBoundary,int,int,char[],int[])>/assign/instruction32	<sun.text.normalizer.NormalizerBase: int findPreviousIterationBoundary(sun.text.normalizer.UCharacterIterator,sun.text.normalizer.NormalizerBase$IsPrevBoundary,int,int,char[],int[])>/$stack31
<sun.text.normalizer.NormalizerBase: int findNextIterationBoundary(sun.text.normalizer.UCharacterIterator,sun.text.normalizer.NormalizerBase$IsNextBoundary,int,int,char[])>/assign/instruction96	<sun.text.normalizer.NormalizerBase: int findNextIterationBoundary(sun.text.normalizer.UCharacterIterator,sun.text.normalizer.NormalizerBase$IsNextBoundary,int,int,char[])>/$stack22
<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/assign/instruction96	<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/$stack15
<sun.security.ssl.InputRecord: void queueHandshake(sun.security.ssl.InputRecord)>/assign/instruction29	<sun.security.ssl.InputRecord: void queueHandshake(sun.security.ssl.InputRecord)>/l2_$$A_2#_405
<sun.security.ssl.InputRecord: void readV3Record(java.io.InputStream,java.io.OutputStream)>/assign/instruction40	<sun.security.ssl.InputRecord: void readV3Record(java.io.InputStream,java.io.OutputStream)>/$stack81
<sun.security.ssl.InputRecord: void handleUnknownRecord(java.io.InputStream,java.io.OutputStream)>/assign/instruction48	<sun.security.ssl.InputRecord: void handleUnknownRecord(java.io.InputStream,java.io.OutputStream)>/l4#3#_663
<java.util.stream.AbstractPipeline: java.lang.Object[] lambda$opEvaluateParallelLazy$2(int)>/assign/instruction2	<java.util.stream.AbstractPipeline: java.lang.Object[] lambda$opEvaluateParallelLazy$2(int)>/l0#_0
<java.util.stream.SliceOps: java.lang.Object[] lambda$castingArray$0(int)>/assign/instruction2	<java.util.stream.SliceOps: java.lang.Object[] lambda$castingArray$0(int)>/l0#_0
<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/assign/instruction16	<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/l2#_114
<java.util.WeakHashMap: java.util.WeakHashMap$Entry[] newTable(int)>/assign/instruction3	<java.util.WeakHashMap: java.util.WeakHashMap$Entry[] newTable(int)>/l1#_0
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>/assign/instruction4	<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>/$stack8
<java.time.LocalTime$1: void <clinit>()>/assign/instruction3	<java.time.LocalTime$1: void <clinit>()>/$stack2
<java.time.LocalTime$1: void <clinit>()>/assign/instruction95	<java.time.LocalTime$1: void <clinit>()>/$stack26
<sun.util.locale.provider.LocaleProviderAdapter$1: void <clinit>()>/assign/instruction3	<sun.util.locale.provider.LocaleProviderAdapter$1: void <clinit>()>/$stack2
<java.util.jar.Manifest: void read(java.io.InputStream)>/assign/instruction87	<java.util.jar.Manifest: void read(java.io.InputStream)>/$stack51
<java.util.jar.Manifest: void read(java.io.InputStream)>/assign/instruction96	<java.util.jar.Manifest: void read(java.io.InputStream)>/$stack18
<java.util.regex.Matcher: void <init>(java.util.regex.Pattern,java.lang.CharSequence)>/assign/instruction25	<java.util.regex.Matcher: void <init>(java.util.regex.Pattern,java.lang.CharSequence)>/$stack6
<java.util.regex.Matcher: void <init>(java.util.regex.Pattern,java.lang.CharSequence)>/assign/instruction28	<java.util.regex.Matcher: void <init>(java.util.regex.Pattern,java.lang.CharSequence)>/$stack8
<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>/assign/instruction13	<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>/$stack6
<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>/assign/instruction16	<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>/$stack8
<javax.crypto.NullCipherSpi: byte[] engineUpdate(byte[],int,int)>/assign/instruction8	<javax.crypto.NullCipherSpi: byte[] engineUpdate(byte[],int,int)>/l3#_0
<java.nio.channels.spi.AbstractSelectableChannel: void addKey(java.nio.channels.SelectionKey)>/assign/instruction38	<java.nio.channels.spi.AbstractSelectableChannel: void addKey(java.nio.channels.SelectionKey)>/l3#_107
<sun.security.util.ObjectIdentifier: void <init>(java.lang.String)>/assign/instruction15	<sun.security.util.ObjectIdentifier: void <init>(java.lang.String)>/$stack13
<sun.security.util.ObjectIdentifier: void <init>(java.lang.String)>/assign/instruction105	<sun.security.util.ObjectIdentifier: void <init>(java.lang.String)>/l5_$$A_5#_193
<sun.security.util.ObjectIdentifier: void <init>(sun.security.util.DerInputStream)>/assign/instruction42	<sun.security.util.ObjectIdentifier: void <init>(sun.security.util.DerInputStream)>/l4#_258
<sun.security.util.ObjectIdentifier: void <init>(sun.security.util.DerInputBuffer)>/assign/instruction16	<sun.security.util.ObjectIdentifier: void <init>(sun.security.util.DerInputBuffer)>/$stack4
<sun.security.util.ObjectIdentifier: void init(int[],int)>/assign/instruction7	<sun.security.util.ObjectIdentifier: void init(int[],int)>/$stack7
<sun.security.util.ObjectIdentifier: void init(int[],int)>/assign/instruction45	<sun.security.util.ObjectIdentifier: void init(int[],int)>/l3#2_$$A_3#_295
<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>/assign/instruction30	<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>/$stack14
<sun.security.util.DerOutputStream: void putOrderedSet(byte,sun.security.util.DerEncoder[],java.util.Comparator)>/assign/instruction6	<sun.security.util.DerOutputStream: void putOrderedSet(byte,sun.security.util.DerEncoder[],java.util.Comparator)>/$stack8
<sun.security.util.DerOutputStream: void putOrderedSet(byte,sun.security.util.DerEncoder[],java.util.Comparator)>/assign/instruction21	<sun.security.util.DerOutputStream: void putOrderedSet(byte,sun.security.util.DerEncoder[],java.util.Comparator)>/$stack10
<jdk.internal.org.objectweb.asm.Frame: void set(int,int)>/assign/instruction14	<jdk.internal.org.objectweb.asm.Frame: void set(int,int)>/$stack10
<jdk.internal.org.objectweb.asm.Frame: void push(int)>/assign/instruction15	<jdk.internal.org.objectweb.asm.Frame: void push(int)>/$stack19
<jdk.internal.org.objectweb.asm.Frame: void init(int)>/assign/instruction15	<jdk.internal.org.objectweb.asm.Frame: void init(int)>/$stack13
<jdk.internal.org.objectweb.asm.Frame: void initInputFrame(jdk.internal.org.objectweb.asm.ClassWriter,int,jdk.internal.org.objectweb.asm.Type[],int)>/assign/instruction6	<jdk.internal.org.objectweb.asm.Frame: void initInputFrame(jdk.internal.org.objectweb.asm.ClassWriter,int,jdk.internal.org.objectweb.asm.Type[],int)>/l4#_0
<jdk.internal.org.objectweb.asm.Frame: boolean merge(jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Frame,int)>/assign/instruction12	<jdk.internal.org.objectweb.asm.Frame: boolean merge(jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Frame,int)>/l10#_1319
<sun.security.ssl.SunX509KeyManagerImpl: void <init>(java.security.KeyStore,char[])>/assign/instruction51	<sun.security.ssl.SunX509KeyManagerImpl: void <init>(java.security.KeyStore,char[])>/$stack50
<jdk.internal.org.objectweb.asm.Frame: boolean merge(jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Frame,int)>/assign/instruction139	<jdk.internal.org.objectweb.asm.Frame: boolean merge(jdk.internal.org.objectweb.asm.ClassWriter,jdk.internal.org.objectweb.asm.Frame,int)>/$stack63
<sun.security.ssl.SunX509KeyManagerImpl: javax.security.auth.x500.X500Principal[] convertPrincipals(java.security.Principal[])>/assign/instruction27	<sun.security.ssl.SunX509KeyManagerImpl: javax.security.auth.x500.X500Principal[] convertPrincipals(java.security.Principal[])>/$stack8
<sun.net.idn.Punycode: java.lang.StringBuffer encode(java.lang.StringBuffer,boolean[])>/assign/instruction6	<sun.net.idn.Punycode: java.lang.StringBuffer encode(java.lang.StringBuffer,boolean[])>/l18#_176
<sun.net.idn.Punycode: java.lang.StringBuffer decode(java.lang.StringBuffer,boolean[])>/assign/instruction8	<sun.net.idn.Punycode: java.lang.StringBuffer decode(java.lang.StringBuffer,boolean[])>/l20#_338
<java.io.ObjectOutputStream$PutFieldImpl: void <init>(java.io.ObjectOutputStream,java.io.ObjectStreamClass)>/assign/instruction8	<java.io.ObjectOutputStream$PutFieldImpl: void <init>(java.io.ObjectOutputStream,java.io.ObjectStreamClass)>/$stack3
<java.io.ObjectOutputStream$PutFieldImpl: void <init>(java.io.ObjectOutputStream,java.io.ObjectStreamClass)>/assign/instruction11	<java.io.ObjectOutputStream$PutFieldImpl: void <init>(java.io.ObjectOutputStream,java.io.ObjectStreamClass)>/$stack5
<java.security.SignatureSpi: void engineUpdate(java.nio.ByteBuffer)>/assign/instruction19	<java.security.SignatureSpi: void engineUpdate(java.nio.ByteBuffer)>/$stack9
<java.security.SignatureSpi: boolean engineVerify(byte[],int,int)>/assign/instruction5	<java.security.SignatureSpi: boolean engineVerify(byte[],int,int)>/l3#_0
<sun.reflect.annotation.AnnotationParser: java.lang.annotation.Annotation[][] parseParameterAnnotations2(byte[],sun.reflect.ConstantPool,java.lang.Class)>/assign/instruction7	<sun.reflect.annotation.AnnotationParser: java.lang.annotation.Annotation[][] parseParameterAnnotations2(byte[],sun.reflect.ConstantPool,java.lang.Class)>/l4#_176
<java.util.Vector: void <init>(int,int)>/assign/instruction15	<java.util.Vector: void <init>(int,int)>/l1#_0
<java.util.stream.ForEachOps$ForEachOrderedTask: java.lang.Object[] lambda$doCompute$0(int)>/assign/instruction2	<java.util.stream.ForEachOps$ForEachOrderedTask: java.lang.Object[] lambda$doCompute$0(int)>/l0#_0
<sun.security.util.DerInputStream: void init(byte[],int,int,boolean)>/assign/instruction25	<sun.security.util.DerInputStream: void init(byte[],int,int,boolean)>/l3#_0
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseByteArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/assign/instruction4	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseByteArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/l0#_0
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseCharArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/assign/instruction4	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseCharArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/l0#_0
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseDoubleArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/assign/instruction4	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseDoubleArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/l0#_0
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseFloatArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/assign/instruction4	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseFloatArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/l0#_0
<sun.security.util.DerInputStream: sun.security.util.BitArray getUnalignedBitString()>/assign/instruction26	<sun.security.util.DerInputStream: sun.security.util.BitArray getUnalignedBitString()>/l1#_255
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseIntArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/assign/instruction4	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseIntArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/l0#_0
<sun.security.util.DerInputStream: byte[] getOctetString()>/assign/instruction11	<sun.security.util.DerInputStream: byte[] getOctetString()>/l1#_286
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseLongArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/assign/instruction4	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseLongArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/l0#_0
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseShortArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/assign/instruction4	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseShortArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/l0#_0
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseBooleanArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/assign/instruction4	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseBooleanArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/l0#_0
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseStringArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/assign/instruction4	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseStringArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool)>/l0#_0
<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/assign/instruction13	<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/$stack36
<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/assign/instruction71	<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/l8#25#_434
<sun.reflect.annotation.AnnotationParser: java.lang.Object parseClassArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool,java.lang.Class)>/assign/instruction5	<sun.reflect.annotation.AnnotationParser: java.lang.Object parseClassArray(int,java.nio.ByteBuffer,sun.reflect.ConstantPool,java.lang.Class)>/l0#_0
<sun.misc.FDBigInteger: void <init>(long,char[],int,int)>/assign/instruction13	<sun.misc.FDBigInteger: void <init>(long,char[],int,int)>/l6#_208
<sun.security.util.DerInputStream: java.lang.String readString(byte,java.lang.String,java.lang.String)>/assign/instruction21	<sun.security.util.DerInputStream: java.lang.String readString(byte,java.lang.String,java.lang.String)>/l4#_517
<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)>/assign/instruction79	<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)>/$stack52
<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)>/assign/instruction93	<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)>/$stack34
<java.util.stream.Node$OfInt: int[] newArray(int)>/assign/instruction3	<java.util.stream.Node$OfInt: int[] newArray(int)>/l1#_0
<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)>/assign/instruction29	<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)>/$stack65
<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)>/assign/instruction34	<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)>/$stack59
<sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedWildcardTypeImpl: java.lang.reflect.AnnotatedType[] getAnnotatedBounds(java.lang.reflect.Type[])>/assign/instruction4	<sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedWildcardTypeImpl: java.lang.reflect.AnnotatedType[] getAnnotatedBounds(java.lang.reflect.Type[])>/$stack11
<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)>/assign/instruction97	<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)>/$stack34
<sun.misc.FDBigInteger: sun.misc.FDBigInteger multBy10()>/assign/instruction9	<sun.misc.FDBigInteger: sun.misc.FDBigInteger multBy10()>/$stack35
<sun.misc.FDBigInteger: sun.misc.FDBigInteger multByPow52(int,int)>/assign/instruction22	<sun.misc.FDBigInteger: sun.misc.FDBigInteger multByPow52(int,int)>/$stack28
<sun.misc.FDBigInteger: sun.misc.FDBigInteger multByPow52(int,int)>/assign/instruction38	<sun.misc.FDBigInteger: sun.misc.FDBigInteger multByPow52(int,int)>/$stack15
<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftInplaceSub(sun.misc.FDBigInteger)>/assign/instruction44	<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftInplaceSub(sun.misc.FDBigInteger)>/l8#_796
<sun.misc.FDBigInteger: sun.misc.FDBigInteger rightInplaceSub(sun.misc.FDBigInteger)>/assign/instruction43	<sun.misc.FDBigInteger: sun.misc.FDBigInteger rightInplaceSub(sun.misc.FDBigInteger)>/l8#_862
<java.net.URLConnection: java.lang.String typeToPackageName(java.lang.String)>/assign/instruction5	<java.net.URLConnection: java.lang.String typeToPackageName(java.lang.String)>/l2#_1338
<sun.misc.FDBigInteger: sun.misc.FDBigInteger mult(int)>/assign/instruction8	<sun.misc.FDBigInteger: sun.misc.FDBigInteger mult(int)>/$stack5
<javax.crypto.CipherSpi: int bufferCrypt(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)>/assign/instruction60	<javax.crypto.CipherSpi: int bufferCrypt(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)>/$stack65
<sun.misc.FDBigInteger: sun.misc.FDBigInteger mult(sun.misc.FDBigInteger)>/assign/instruction24	<sun.misc.FDBigInteger: sun.misc.FDBigInteger mult(sun.misc.FDBigInteger)>/$stack9
<javax.crypto.CipherSpi: int bufferCrypt(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)>/assign/instruction99	<javax.crypto.CipherSpi: int bufferCrypt(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)>/$stack25
<javax.crypto.CipherSpi: int bufferCrypt(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)>/assign/instruction106	<javax.crypto.CipherSpi: int bufferCrypt(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)>/$stack26
<javax.crypto.CipherSpi: int bufferCrypt(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)>/assign/instruction186	<javax.crypto.CipherSpi: int bufferCrypt(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)>/l13_$$A_3#_848
<sun.misc.FDBigInteger: sun.misc.FDBigInteger add(sun.misc.FDBigInteger)>/assign/instruction24	<sun.misc.FDBigInteger: sun.misc.FDBigInteger add(sun.misc.FDBigInteger)>/$stack14
<java.time.Month$1: void <clinit>()>/assign/instruction3	<java.time.Month$1: void <clinit>()>/$stack2
<sun.misc.FDBigInteger: long multDiffMe(long,sun.misc.FDBigInteger)>/assign/instruction42	<sun.misc.FDBigInteger: long multDiffMe(long,sun.misc.FDBigInteger)>/$stack17
<java.time.format.DateTimeTextProvider$2: void <clinit>()>/assign/instruction3	<java.time.format.DateTimeTextProvider$2: void <clinit>()>/$stack2
<java.net.URLConnection: int readBytes(int[],int,java.io.InputStream)>/assign/instruction4	<java.net.URLConnection: int readBytes(int[],int,java.io.InputStream)>/l1#_0
<sun.misc.FDBigInteger: java.math.BigInteger toBigInteger()>/assign/instruction5	<sun.misc.FDBigInteger: java.math.BigInteger toBigInteger()>/$stack6
<java.time.chrono.ThaiBuddhistChronology$1: void <clinit>()>/assign/instruction3	<java.time.chrono.ThaiBuddhistChronology$1: void <clinit>()>/$stack2
<java.text.AttributedString: int ensureRunBreak(int,boolean)>/assign/instruction29	<java.text.AttributedString: int ensureRunBreak(int,boolean)>/l4#_469
<java.text.AttributedString: int ensureRunBreak(int,boolean)>/assign/instruction30	<java.text.AttributedString: int ensureRunBreak(int,boolean)>/l4#_469
<java.text.AttributedString: int ensureRunBreak(int,boolean)>/assign/instruction32	<java.text.AttributedString: int ensureRunBreak(int,boolean)>/l4#_469
<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator$MethodInfo generateMethod()>/assign/instruction13	<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator$MethodInfo generateMethod()>/$stack20
<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator$MethodInfo generateMethod()>/assign/instruction198	<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator$MethodInfo generateMethod()>/$stack55
<java.lang.Integer$IntegerCache: void <clinit>()>/assign/instruction36	<java.lang.Integer$IntegerCache: void <clinit>()>/$stack9
<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/assign/instruction335	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/l12#113#_523
<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/assign/instruction350	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/l12#113_$$A_1#_534
<javax.crypto.MacSpi: void engineUpdate(java.nio.ByteBuffer)>/assign/instruction19	<javax.crypto.MacSpi: void engineUpdate(java.nio.ByteBuffer)>/$stack9
<java.util.regex.Pattern$Branch: void add(java.util.regex.Pattern$Node)>/assign/instruction10	<java.util.regex.Pattern$Branch: void add(java.util.regex.Pattern$Node)>/$stack11
<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>/assign/instruction313	<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>/l8#101#_848
<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>/assign/instruction340	<java.net.SocksSocketImpl: void socksBind(java.net.InetSocketAddress)>/l8#101_$$A_1#_862
<java.net.SocksSocketImpl: void acceptFrom(java.net.SocketImpl,java.net.InetSocketAddress)>/assign/instruction31	<java.net.SocksSocketImpl: void acceptFrom(java.net.SocketImpl,java.net.InetSocketAddress)>/l9#_952
<sun.nio.fs.Util: java.lang.String[] split(java.lang.String,char)>/assign/instruction19	<sun.nio.fs.Util: java.lang.String[] split(java.lang.String,char)>/$stack8
<jdk.internal.util.xml.impl.Parser: void dtdent()>/assign/instruction121	<jdk.internal.util.xml.impl.Parser: void dtdent()>/$stack72
<jdk.internal.util.xml.impl.Parser: void dtdent()>/assign/instruction174	<jdk.internal.util.xml.impl.Parser: void dtdent()>/$stack34
<java.net.SocketInputStream: long skip(long)>/assign/instruction11	<java.net.SocketInputStream: long skip(long)>/l5#_242
<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>/assign/instruction29	<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>/$stack15
<jdk.internal.util.xml.impl.Parser: void dtdatt(jdk.internal.util.xml.impl.Pair)>/assign/instruction215	<jdk.internal.util.xml.impl.Parser: void dtdatt(jdk.internal.util.xml.impl.Pair)>/$stack12
<sun.security.ssl.CipherSuiteList: java.lang.String[] toStringArray()>/assign/instruction6	<sun.security.ssl.CipherSuiteList: java.lang.String[] toStringArray()>/$stack9
<sun.security.ssl.CipherSuiteList: void send(sun.security.ssl.HandshakeOutStream)>/assign/instruction6	<sun.security.ssl.CipherSuiteList: void send(sun.security.ssl.HandshakeOutStream)>/$stack8
<java.nio.file.Files$3: void <clinit>()>/assign/instruction3	<java.nio.file.Files$3: void <clinit>()>/$stack2
<jdk.internal.util.xml.impl.Parser: char[] qname(boolean)>/assign/instruction8	<jdk.internal.util.xml.impl.Parser: char[] qname(boolean)>/$stack4
<jdk.internal.util.xml.impl.Parser: boolean isdecl(jdk.internal.util.xml.impl.Pair,java.lang.String)>/assign/instruction49	<jdk.internal.util.xml.impl.Parser: boolean isdecl(jdk.internal.util.xml.impl.Pair,java.lang.String)>/$stack17
<jdk.internal.util.xml.impl.Input: void <init>(int)>/assign/instruction4	<jdk.internal.util.xml.impl.Input: void <init>(int)>/l1#_0
<jdk.internal.util.xml.impl.Parser: void bappend(char)>/assign/instruction14	<jdk.internal.util.xml.impl.Parser: void bappend(char)>/$stack10
<jdk.internal.util.xml.impl.Parser: void bcopy(int,int)>/assign/instruction14	<jdk.internal.util.xml.impl.Parser: void bcopy(int,int)>/$stack16
<java.util.stream.SliceOps$2: java.lang.Integer[] lambda$opEvaluateParallelLazy$0(int)>/assign/instruction2	<java.util.stream.SliceOps$2: java.lang.Integer[] lambda$opEvaluateParallelLazy$0(int)>/l0#_0
<java.text.DecimalFormat: void checkAndSetFastPathStatus()>/assign/instruction132	<java.text.DecimalFormat: void checkAndSetFastPathStatus()>/l4#_1029
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>/assign/instruction28	<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>/$stack11
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/assign/instruction33	<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/$stack9
<java.util.stream.LongPipeline: java.lang.Long[] lambda$toArray$6(int)>/assign/instruction2	<java.util.stream.LongPipeline: java.lang.Long[] lambda$toArray$6(int)>/l0#_0
<sun.security.ssl.HandshakeInStream: byte[] getBytes8()>/assign/instruction4	<sun.security.ssl.HandshakeInStream: byte[] getBytes8()>/l1#_198
<sun.security.ssl.HandshakeInStream: byte[] getBytes16()>/assign/instruction4	<sun.security.ssl.HandshakeInStream: byte[] getBytes16()>/l1#_207
<sun.security.ssl.HandshakeInStream: byte[] getBytes24()>/assign/instruction4	<sun.security.ssl.HandshakeInStream: byte[] getBytes24()>/l1#_216
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>/assign/instruction12	<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>/l2#_0
<java.io.BufferedInputStream: void fill()>/assign/instruction55	<java.io.BufferedInputStream: void fill()>/l2_$$A_3#_233
<java.lang.invoke.MethodHandles: void <clinit>()>/assign/instruction19	<java.lang.invoke.MethodHandles: void <clinit>()>/$stack5
<java.lang.invoke.MethodHandles: void <clinit>()>/assign/instruction23	<java.lang.invoke.MethodHandles: void <clinit>()>/$stack8
<java.util.concurrent.ForkJoinPool$WorkQueue: java.util.concurrent.ForkJoinTask[] growArray()>/assign/instruction16	<java.util.concurrent.ForkJoinPool$WorkQueue: java.util.concurrent.ForkJoinTask[] growArray()>/l2#_882
<sun.util.calendar.AbstractCalendar: sun.util.calendar.Era[] getEras()>/assign/instruction7	<sun.util.calendar.AbstractCalendar: sun.util.calendar.Era[] getEras()>/$stack4
<java.time.MonthDay$1: void <clinit>()>/assign/instruction3	<java.time.MonthDay$1: void <clinit>()>/$stack2
<java.time.Year$1: void <clinit>()>/assign/instruction3	<java.time.Year$1: void <clinit>()>/$stack2
<java.time.Year$1: void <clinit>()>/assign/instruction69	<java.time.Year$1: void <clinit>()>/$stack20
<java.lang.UNIXProcess$ProcessPipeInputStream: byte[] drainInputStream(java.io.InputStream)>/assign/instruction14	<java.lang.UNIXProcess$ProcessPipeInputStream: byte[] drainInputStream(java.io.InputStream)>/l2#_518
<sun.reflect.annotation.TypeAnnotation$LocationInfo: sun.reflect.annotation.TypeAnnotation$LocationInfo parseLocationInfo(java.nio.ByteBuffer)>/assign/instruction7	<sun.reflect.annotation.TypeAnnotation$LocationInfo: sun.reflect.annotation.TypeAnnotation$LocationInfo parseLocationInfo(java.nio.ByteBuffer)>/l1#_150
<sun.misc.URLClassPath: java.net.URL[] getURLs()>/assign/instruction8	<sun.misc.URLClassPath: java.net.URL[] getURLs()>/$stack6
<sun.reflect.annotation.TypeAnnotation$LocationInfo: sun.reflect.annotation.TypeAnnotation$LocationInfo pushLocation(byte,short)>/assign/instruction6	<sun.reflect.annotation.TypeAnnotation$LocationInfo: sun.reflect.annotation.TypeAnnotation$LocationInfo pushLocation(byte,short)>/l3#_183
<sun.misc.URLClassPath: java.net.URL[] pathToURLs(java.lang.String)>/assign/instruction7	<sun.misc.URLClassPath: java.net.URL[] pathToURLs(java.lang.String)>/$stack8
<sun.misc.URLClassPath: java.net.URL[] pathToURLs(java.lang.String)>/assign/instruction44	<sun.misc.URLClassPath: java.net.URL[] pathToURLs(java.lang.String)>/l3_$$A_1#_595
<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>/assign/instruction23	<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>/$stack8
<java.io.File: java.io.File[] listFiles()>/assign/instruction7	<java.io.File: java.io.File[] listFiles()>/l2#_1209
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>/assign/instruction26	<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>/$stack10
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>/assign/instruction27	<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>/$stack11
<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm collectArgumentArrayForm(int,java.lang.invoke.MethodHandle)>/assign/instruction72	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm collectArgumentArrayForm(int,java.lang.invoke.MethodHandle)>/l4#_585
<java.io.ObjectOutputStream: void defaultWriteFields(java.lang.Object,java.io.ObjectStreamClass)>/assign/instruction19	<java.io.ObjectOutputStream: void defaultWriteFields(java.lang.Object,java.io.ObjectStreamClass)>/l4#_1529
<java.io.ObjectOutputStream: void defaultWriteFields(java.lang.Object,java.io.ObjectStreamClass)>/assign/instruction31	<java.io.ObjectOutputStream: void defaultWriteFields(java.lang.Object,java.io.ObjectStreamClass)>/$stack18
<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm makeArgumentCombinationForm(int,java.lang.invoke.MethodType,boolean,boolean)>/assign/instruction84	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm makeArgumentCombinationForm(int,java.lang.invoke.MethodType,boolean,boolean)>/$stack44
<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm makeArgumentCombinationForm(int,java.lang.invoke.MethodType,boolean,boolean)>/assign/instruction94	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm makeArgumentCombinationForm(int,java.lang.invoke.MethodType,boolean,boolean)>/l6#_654
<java.lang.Long: java.lang.String toUnsignedString0(long,int)>/assign/instruction10	<java.lang.Long: java.lang.String toUnsignedString0(long,int)>/l4#_355
<java.lang.Long: java.lang.String toString(long)>/assign/instruction16	<java.lang.Long: java.lang.String toString(long)>/l2#_396
<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite altMetafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.Object[])>/assign/instruction21	<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite altMetafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.Object[])>/l11#_439
<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite altMetafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.Object[])>/assign/instruction41	<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite altMetafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.Object[])>/l11_$$A_2#_447
<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm permuteArgumentsForm(int,int[])>/assign/instruction60	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm permuteArgumentsForm(int,int[])>/l5_$$A_1#_781
<java.text.RuleBasedCollationKey: byte[] toByteArray()>/assign/instruction6	<java.text.RuleBasedCollationKey: byte[] toByteArray()>/$stack8
<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm permuteArgumentsForm(int,int[])>/assign/instruction102	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm permuteArgumentsForm(int,int[])>/$stack31
<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>/assign/instruction8	<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>/$stack10
<java.time.LocalDateTime$1: void <clinit>()>/assign/instruction3	<java.time.LocalDateTime$1: void <clinit>()>/$stack2
<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>/assign/instruction15	<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>/$stack12
<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>/assign/instruction19	<jdk.internal.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>/l4#_203
<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String getClassName()>/assign/instruction5	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String getClassName()>/$stack2
<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String getSuperName()>/assign/instruction5	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String getSuperName()>/$stack2
<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] getInterfaces()>/assign/instruction5	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] getInterfaces()>/l2#_298
<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] getInterfaces()>/assign/instruction8	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String[] getInterfaces()>/$stack8
<jdk.internal.org.objectweb.asm.ClassReader: void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)>/assign/instruction4	<jdk.internal.org.objectweb.asm.ClassReader: void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)>/$stack11
<jdk.internal.org.objectweb.asm.ClassReader: void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)>/assign/instruction7	<jdk.internal.org.objectweb.asm.ClassReader: void copyPool(jdk.internal.org.objectweb.asm.ClassWriter)>/l3#_319
<java.util.stream.SliceOps$4: java.lang.Double[] lambda$opEvaluateParallelLazy$0(int)>/assign/instruction2	<java.util.stream.SliceOps$4: java.lang.Double[] lambda$opEvaluateParallelLazy$0(int)>/l0#_0
<java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.Object[] toArray()>/assign/instruction11	<java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.Object[] toArray()>/l3#_4414
<jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>/assign/instruction9	<jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>/$stack8
<jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>/assign/instruction23	<jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>/l3_$$A_1#_489
<jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>/assign/instruction47	<jdk.internal.org.objectweb.asm.ClassReader: byte[] readClass(java.io.InputStream,boolean)>/$stack22
<java.util.SimpleTimeZone: void readObject(java.io.ObjectInputStream)>/assign/instruction22	<java.util.SimpleTimeZone: void readObject(java.io.ObjectInputStream)>/l2#_1693
<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>/assign/instruction7	<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>/$stack28
<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>/assign/instruction21	<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>/$stack36
<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>/assign/instruction151	<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>/l25_$$A_2#_624
<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>/assign/instruction169	<jdk.internal.org.objectweb.asm.ClassReader: void accept(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Attribute[],int)>/$stack158
<sun.util.locale.provider.DictionaryBasedBreakIterator: void prepareCategoryFlags(byte[])>/assign/instruction4	<sun.util.locale.provider.DictionaryBasedBreakIterator: void prepareCategoryFlags(byte[])>/$stack3
<jdk.internal.org.objectweb.asm.ClassReader: int readMethod(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction78	<jdk.internal.org.objectweb.asm.ClassReader: int readMethod(jdk.internal.org.objectweb.asm.ClassVisitor,jdk.internal.org.objectweb.asm.Context,int)>/$stack151
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/assign/instruction156	<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack53
<sun.reflect.annotation.TypeAnnotationParser: java.lang.reflect.AnnotatedType[] buildAnnotatedTypes(byte[],sun.reflect.ConstantPool,java.lang.reflect.AnnotatedElement,java.lang.Class,java.lang.reflect.Type[],sun.reflect.annotation.TypeAnnotation$TypeAnnotationTarget)>/assign/instruction8	<sun.reflect.annotation.TypeAnnotationParser: java.lang.reflect.AnnotatedType[] buildAnnotatedTypes(byte[],sun.reflect.ConstantPool,java.lang.reflect.AnnotatedElement,java.lang.Class,java.lang.reflect.Type[],sun.reflect.annotation.TypeAnnotation$TypeAnnotationTarget)>/l6#_105
<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/assign/instruction95	<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/$stack15
<sun.reflect.annotation.TypeAnnotationParser: java.lang.reflect.AnnotatedType[] buildAnnotatedTypes(byte[],sun.reflect.ConstantPool,java.lang.reflect.AnnotatedElement,java.lang.Class,java.lang.reflect.Type[],sun.reflect.annotation.TypeAnnotation$TypeAnnotationTarget)>/assign/instruction11	<sun.reflect.annotation.TypeAnnotationParser: java.lang.reflect.AnnotatedType[] buildAnnotatedTypes(byte[],sun.reflect.ConstantPool,java.lang.reflect.AnnotatedElement,java.lang.Class,java.lang.reflect.Type[],sun.reflect.annotation.TypeAnnotation$TypeAnnotationTarget)>/l6#_105
<sun.reflect.annotation.TypeAnnotationParser: java.lang.reflect.AnnotatedType[] buildAnnotatedTypes(byte[],sun.reflect.ConstantPool,java.lang.reflect.AnnotatedElement,java.lang.Class,java.lang.reflect.Type[],sun.reflect.annotation.TypeAnnotation$TypeAnnotationTarget)>/assign/instruction50	<sun.reflect.annotation.TypeAnnotationParser: java.lang.reflect.AnnotatedType[] buildAnnotatedTypes(byte[],sun.reflect.ConstantPool,java.lang.reflect.AnnotatedElement,java.lang.Class,java.lang.reflect.Type[],sun.reflect.annotation.TypeAnnotation$TypeAnnotationTarget)>/$stack24
<sun.reflect.annotation.TypeAnnotationParser: java.lang.reflect.AnnotatedType[] parseAnnotatedBounds(java.lang.reflect.Type[],java.lang.reflect.GenericDeclaration,int,sun.reflect.annotation.TypeAnnotation$LocationInfo)>/assign/instruction9	<sun.reflect.annotation.TypeAnnotationParser: java.lang.reflect.AnnotatedType[] parseAnnotatedBounds(java.lang.reflect.Type[],java.lang.reflect.GenericDeclaration,int,sun.reflect.annotation.TypeAnnotation$LocationInfo)>/$stack14
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction16	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/$stack42
<java.security.UnresolvedPermission: void readObject(java.io.ObjectInputStream)>/assign/instruction17	<java.security.UnresolvedPermission: void readObject(java.io.ObjectInputStream)>/l4#_559
<java.security.UnresolvedPermission: void readObject(java.io.ObjectInputStream)>/assign/instruction53	<java.security.UnresolvedPermission: void readObject(java.io.ObjectInputStream)>/$stack16
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction614	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/l7#_1070
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction616	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/l6#_1069
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction817	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/$stack218
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction843	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/l31_$$A_9#_1402
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction844	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/l31_$$A_9#_1402
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction936	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/l33#200_$$A_1#_1458
<sun.security.provider.NativePRNG$RandomIO: void <init>(java.io.File,java.io.File)>/assign/instruction26	<sun.security.provider.NativePRNG$RandomIO: void <init>(java.io.File,java.io.File)>/$stack8
<sun.security.provider.NativePRNG$RandomIO: byte[] implGenerateSeed(int)>/assign/instruction6	<sun.security.provider.NativePRNG$RandomIO: byte[] implGenerateSeed(int)>/l1#_0
<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction1334	<jdk.internal.org.objectweb.asm.ClassReader: void readCode(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int)>/$stack132
<sun.security.provider.NativePRNG$RandomIO: void ensureBufferValid()>/assign/instruction35	<sun.security.provider.NativePRNG$RandomIO: void ensureBufferValid()>/l3_$$A_3#_503
<jdk.internal.org.objectweb.asm.ClassReader: int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>/assign/instruction8	<jdk.internal.org.objectweb.asm.ClassReader: int[] readTypeAnnotations(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.Context,int,boolean)>/$stack12
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction16	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>/l4#_1698
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction18	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>/l4#_1698
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>/assign/instruction20	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationTarget(jdk.internal.org.objectweb.asm.Context,int)>/l4#_1698
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/assign/instruction109	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/l6#_1897
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/assign/instruction128	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/l6#_1897
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/assign/instruction155	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/l6#_1897
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/assign/instruction174	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/l6#_1897
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/assign/instruction193	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/l6#_1897
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/assign/instruction211	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/l6#_1897
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/assign/instruction229	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/l6#_1897
<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/assign/instruction248	<jdk.internal.org.objectweb.asm.ClassReader: int readAnnotationValue(int,char[],java.lang.String,jdk.internal.org.objectweb.asm.AnnotationVisitor)>/l6#_1897
<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>/assign/instruction10	<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>/l3#_312
<java.lang.Integer: java.lang.String toString(int)>/assign/instruction14	<java.lang.Integer: java.lang.String toString(int)>/l1#_400
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/assign/instruction131	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/$stack31
<javax.crypto.CryptoPolicyParser: java.security.spec.AlgorithmParameterSpec getInstance(java.lang.String,java.lang.Integer[])>/assign/instruction5	<javax.crypto.CryptoPolicyParser: java.security.spec.AlgorithmParameterSpec getInstance(java.lang.String,java.lang.Integer[])>/$stack7
<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/assign/instruction42	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/$stack9
<sun.nio.fs.UnixChannelFactory$1: void <clinit>()>/assign/instruction3	<sun.nio.fs.UnixChannelFactory$1: void <clinit>()>/$stack2
<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/assign/instruction30	<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/$stack12
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/assign/instruction42	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/$stack10
<java.lang.UNIXProcess$1: void <clinit>()>/assign/instruction3	<java.lang.UNIXProcess$1: void <clinit>()>/$stack2
<sun.misc.JarIndex: void read(java.io.InputStream)>/assign/instruction46	<sun.misc.JarIndex: void read(java.io.InputStream)>/$stack11
<java.util.Base64$Encoder: byte[] encode(byte[])>/assign/instruction5	<java.util.Base64$Encoder: byte[] encode(byte[])>/l2#_261
<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>/assign/instruction8	<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>/$stack12
<java.util.Base64$Encoder: java.nio.ByteBuffer encode(java.nio.ByteBuffer)>/assign/instruction5	<java.util.Base64$Encoder: java.nio.ByteBuffer encode(java.nio.ByteBuffer)>/l2#_334
<java.util.Base64$Encoder: java.nio.ByteBuffer encode(java.nio.ByteBuffer)>/assign/instruction21	<java.util.Base64$Encoder: java.nio.ByteBuffer encode(java.nio.ByteBuffer)>/$stack9
<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>/assign/instruction8	<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>/$stack12
<java.nio.DirectCharBufferRS: java.lang.String toString(int,int)>/assign/instruction11	<java.nio.DirectCharBufferRS: java.lang.String toString(int,int)>/l3#_419
<sun.net.www.protocol.http.DigestAuthentication: java.lang.String encode(java.lang.String,char[],java.security.MessageDigest)>/assign/instruction18	<sun.net.www.protocol.http.DigestAuthentication: java.lang.String encode(java.lang.String,char[],java.security.MessageDigest)>/$stack26
<sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedParameterizedTypeImpl: java.lang.reflect.AnnotatedType[] getAnnotatedActualTypeArguments()>/assign/instruction5	<sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedParameterizedTypeImpl: java.lang.reflect.AnnotatedType[] getAnnotatedActualTypeArguments()>/$stack13
<sun.security.ssl.HandshakeMessage: byte[] toByteArray(java.math.BigInteger)>/assign/instruction9	<sun.security.ssl.HandshakeMessage: byte[] toByteArray(java.math.BigInteger)>/l2#_104
<sun.security.ssl.HandshakeMessage: byte[] genPad(int,int)>/assign/instruction3	<sun.security.ssl.HandshakeMessage: byte[] genPad(int,int)>/l1#_0
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FormalTypeParameter[] parseFormalTypeParameters()>/assign/instruction30	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FormalTypeParameter[] parseFormalTypeParameters()>/$stack9
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeArgument[] parseTypeArguments()>/assign/instruction28	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeArgument[] parseTypeArguments()>/$stack8
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature[] parseBounds()>/assign/instruction23	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature[] parseBounds()>/$stack5
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.ClassTypeSignature[] parseSuperInterfaces()>/assign/instruction12	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.ClassTypeSignature[] parseSuperInterfaces()>/$stack4
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature[] parseZeroOrMoreTypeSignatures()>/assign/instruction18	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature[] parseZeroOrMoreTypeSignatures()>/$stack4
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature[] parseZeroOrMoreThrowsSignatures()>/assign/instruction12	<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature[] parseZeroOrMoreThrowsSignatures()>/$stack4
<java.lang.StringCoding: char[] decode(java.nio.charset.Charset,byte[],int,int)>/assign/instruction8	<java.lang.StringCoding: char[] decode(java.nio.charset.Charset,byte[],int,int)>/l5#_214
<java.lang.StringCoding: byte[] encode(java.nio.charset.Charset,char[],int,int)>/assign/instruction8	<java.lang.StringCoding: byte[] encode(java.nio.charset.Charset,char[],int,int)>/l5#_349
<sun.security.util.BitArray: void <init>(int)>/assign/instruction13	<sun.security.util.BitArray: void <init>(int)>/$stack4
<java.util.stream.SliceOps$3: java.lang.Long[] lambda$opEvaluateParallelLazy$0(int)>/assign/instruction2	<java.util.stream.SliceOps$3: java.lang.Long[] lambda$opEvaluateParallelLazy$0(int)>/l0#_0
<sun.security.util.BitArray: void <init>(int,byte[])>/assign/instruction25	<sun.security.util.BitArray: void <init>(int,byte[])>/l3#_86
<java.util.ArrayList: void <init>(int)>/assign/instruction5	<java.util.ArrayList: void <init>(int)>/l1#_0
<sun.security.util.BitArray: void <init>(boolean[])>/assign/instruction9	<sun.security.util.BitArray: void <init>(boolean[])>/$stack6
<sun.security.util.BitArray: boolean[] toBooleanArray()>/assign/instruction3	<sun.security.util.BitArray: boolean[] toBooleanArray()>/$stack3
<java.lang.reflect.Proxy$KeyX: void <init>(java.lang.Class[])>/assign/instruction7	<java.lang.reflect.Proxy$KeyX: void <init>(java.lang.Class[])>/$stack4
<java.time.chrono.JapaneseEra: void <clinit>()>/assign/instruction42	<java.time.chrono.JapaneseEra: void <clinit>()>/$stack21
<java.util.Locale: java.lang.String[] getISOCountries()>/assign/instruction8	<java.util.Locale: java.lang.String[] getISOCountries()>/$stack3
<java.util.Locale: java.lang.String[] getISOLanguages()>/assign/instruction8	<java.util.Locale: java.lang.String[] getISOLanguages()>/$stack3
<java.util.Locale: java.lang.String[] getISO2Table(java.lang.String)>/assign/instruction4	<java.util.Locale: java.lang.String[] getISO2Table(java.lang.String)>/l1#_1048
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/assign/instruction80	<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack60
<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/assign/instruction6	<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/l2#_1930
<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/assign/instruction8	<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/l2#_1930
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/assign/instruction109	<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack45
<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/assign/instruction10	<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/l2#_1930
<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/assign/instruction12	<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/l2#_1930
<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/assign/instruction73	<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>/$stack16
<sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>/assign/instruction19	<sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>/$stack65
<sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>/assign/instruction87	<sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>/$stack32
<sun.security.util.KeyUtil: byte[] trimZeroes(byte[])>/assign/instruction16	<sun.security.util.KeyUtil: byte[] trimZeroes(byte[])>/$stack6
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>/assign/instruction52	<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>/$stack60
<java.util.Locale: java.lang.String[] getDisplayVariantArray(java.util.Locale)>/assign/instruction10	<java.util.Locale: java.lang.String[] getDisplayVariantArray(java.util.Locale)>/$stack8
<java.util.Locale: java.lang.String formatList(java.lang.String[],java.lang.String,java.lang.String)>/assign/instruction33	<java.util.Locale: java.lang.String formatList(java.lang.String[],java.lang.String,java.lang.String)>/$stack18
<java.util.Locale: java.lang.String[] composeList(java.text.MessageFormat,java.lang.String[])>/assign/instruction15	<java.util.Locale: java.lang.String[] composeList(java.text.MessageFormat,java.lang.String[])>/$stack11
<java.util.Spliterators$AbstractSpliterator: java.util.Spliterator trySplit()>/assign/instruction22	<java.util.Spliterators$AbstractSpliterator: java.util.Spliterator trySplit()>/l4_$$A_4#_1317
<java.time.OffsetTime$1: void <clinit>()>/assign/instruction3	<java.time.OffsetTime$1: void <clinit>()>/$stack2
<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/assign/instruction2	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/l0#_0
<java.lang.invoke.InvokerBytecodeGenerator$2: void <clinit>()>/assign/instruction3	<java.lang.invoke.InvokerBytecodeGenerator$2: void <clinit>()>/$stack2
<java.lang.invoke.InvokerBytecodeGenerator$2: void <clinit>()>/assign/instruction108	<java.lang.invoke.InvokerBytecodeGenerator$2: void <clinit>()>/$stack29
<java.lang.invoke.InvokerBytecodeGenerator$2: void <clinit>()>/assign/instruction226	<java.lang.invoke.InvokerBytecodeGenerator$2: void <clinit>()>/$stack59
<java.time.chrono.JapaneseChronology$1: void <clinit>()>/assign/instruction3	<java.time.chrono.JapaneseChronology$1: void <clinit>()>/$stack2
<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/assign/instruction74	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/$stack16
<java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>/assign/instruction18	<java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>/$stack5
<java.util.jar.JarVerifier: java.security.CodeSource[] mapSignersToCodeSources(java.net.URL,java.util.List,boolean)>/assign/instruction24	<java.util.jar.JarVerifier: java.security.CodeSource[] mapSignersToCodeSources(java.net.URL,java.util.List,boolean)>/$stack8
<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>/assign/instruction79	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>/$stack13
<sun.util.PreHashedMap: void <init>(int,int,int,int)>/assign/instruction11	<sun.util.PreHashedMap: void <init>(int,int,int,int)>/l1#_0
<sun.util.calendar.ZoneInfoFile: java.lang.String[] getZoneIds(int)>/assign/instruction19	<sun.util.calendar.ZoneInfoFile: java.lang.String[] getZoneIds(int)>/$stack9
<java.util.EnumMap$EntrySet: java.lang.Object[] toArray()>/assign/instruction4	<java.util.EnumMap$EntrySet: java.lang.Object[] toArray()>/$stack2
<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/assign/instruction26	<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/l3#2#_309
<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/assign/instruction36	<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/l5#4#_315
<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/assign/instruction43	<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/$stack43
<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/assign/instruction58	<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/l3#2_$$A_2#_324
<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/assign/instruction60	<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>/l3#2_$$A_2#_324
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/assign/instruction5	<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/l3#_352
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/assign/instruction15	<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/$stack14
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/assign/instruction26	<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/l6_$$A_3#_361
<java.util.DualPivotQuicksort: void sort(int[],int,int,int[],int,int)>/assign/instruction142	<java.util.DualPivotQuicksort: void sort(int[],int,int,int[],int,int)>/l12#_165
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/assign/instruction36	<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/$stack17
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/assign/instruction47	<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>/l9#8#_370
<java.util.DualPivotQuicksort: void sort(long[],int,int,long[],int,int)>/assign/instruction138	<java.util.DualPivotQuicksort: void sort(long[],int,int,long[],int,int)>/l12#_613
<java.util.DualPivotQuicksort: void doSort(short[],int,int,short[],int,int)>/assign/instruction133	<java.util.DualPivotQuicksort: void doSort(short[],int,int,short[],int,int)>/l12#_1097
<sun.security.provider.NativePRNG$2: void <clinit>()>/assign/instruction3	<sun.security.provider.NativePRNG$2: void <clinit>()>/$stack2
<java.util.DualPivotQuicksort: void doSort(char[],int,int,char[],int,int)>/assign/instruction133	<java.util.DualPivotQuicksort: void doSort(char[],int,int,char[],int,int)>/l12#_1581
<java.util.Collections$CopiesList: java.lang.Object[] toArray()>/assign/instruction3	<java.util.Collections$CopiesList: java.lang.Object[] toArray()>/$stack2
<java.lang.ClassValue$ClassValueMap: void sizeCache(int)>/assign/instruction18	<java.lang.ClassValue$ClassValueMap: void sizeCache(int)>/l1#_0
<java.util.DualPivotQuicksort: void doSort(float[],int,int,float[],int,int)>/assign/instruction138	<java.util.DualPivotQuicksort: void doSort(float[],int,int,float[],int,int)>/l12#_2161
<java.nio.file.Files: byte[] read(java.io.InputStream,int)>/assign/instruction4	<java.nio.file.Files: byte[] read(java.io.InputStream,int)>/l2#_3098
<java.util.DualPivotQuicksort: void doSort(double[],int,int,double[],int,int)>/assign/instruction138	<java.util.DualPivotQuicksort: void doSort(double[],int,int,double[],int,int)>/l12#_2700
<java.nio.file.CopyMoveHelper: java.nio.file.CopyOption[] convertMoveToCopyOptions(java.nio.file.CopyOption[])>/assign/instruction4	<java.nio.file.CopyMoveHelper: java.nio.file.CopyOption[] convertMoveToCopyOptions(java.nio.file.CopyOption[])>/$stack5
<sun.security.provider.PolicyParser: java.lang.String[] parseExtDirs(java.lang.String,int)>/assign/instruction31	<sun.security.provider.PolicyParser: java.lang.String[] parseExtDirs(java.lang.String,int)>/l9#_730
<java.io.Console: char[] readline(boolean)>/assign/instruction34	<java.io.Console: char[] readline(boolean)>/l2_$$A_4#_385
<java.io.Console: char[] grow()>/assign/instruction13	<java.io.Console: char[] grow()>/$stack5
<sun.nio.ch.Util$BufferCache: void <init>()>/assign/instruction4	<sun.nio.ch.Util$BufferCache: void <init>()>/$stack1
<java.util.stream.SortedOps$SizedRefSortingSink: void begin(long)>/assign/instruction10	<java.util.stream.SortedOps$SizedRefSortingSink: void begin(long)>/$stack4
<sun.nio.cs.ThreadLocalCoders$Cache: java.lang.Object forName(java.lang.Object)>/assign/instruction8	<sun.nio.cs.ThreadLocalCoders$Cache: java.lang.Object forName(java.lang.Object)>/$stack17
<java.lang.invoke.InvokerBytecodeGenerator: void <init>(java.lang.invoke.LambdaForm,int,java.lang.String,java.lang.String,java.lang.invoke.MethodType)>/assign/instruction49	<java.lang.invoke.InvokerBytecodeGenerator: void <init>(java.lang.invoke.LambdaForm,int,java.lang.String,java.lang.String,java.lang.invoke.MethodType)>/$stack18
<java.lang.invoke.InvokerBytecodeGenerator: void <init>(java.lang.invoke.LambdaForm,int,java.lang.String,java.lang.String,java.lang.invoke.MethodType)>/assign/instruction52	<java.lang.invoke.InvokerBytecodeGenerator: void <init>(java.lang.invoke.LambdaForm,int,java.lang.String,java.lang.String,java.lang.invoke.MethodType)>/$stack20
<java.lang.invoke.InvokerBytecodeGenerator: void <init>(java.lang.invoke.LambdaForm,int,java.lang.String,java.lang.String,java.lang.invoke.MethodType)>/assign/instruction55	<java.lang.invoke.InvokerBytecodeGenerator: void <init>(java.lang.invoke.LambdaForm,int,java.lang.String,java.lang.String,java.lang.invoke.MethodType)>/$stack22
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.Object[] cpPatches(byte[])>/assign/instruction4	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.Object[] cpPatches(byte[])>/l2#_236
<java.time.LocalDate$1: void <clinit>()>/assign/instruction3	<java.time.LocalDate$1: void <clinit>()>/$stack2
<java.time.LocalDate$1: void <clinit>()>/assign/instruction108	<java.time.LocalDate$1: void <clinit>()>/$stack29
<java.util.JapaneseImperialCalendar: void <clinit>()>/assign/instruction135	<java.util.JapaneseImperialCalendar: void <clinit>()>/l1#_224
<java.util.JapaneseImperialCalendar: void <clinit>()>/assign/instruction137	<java.util.JapaneseImperialCalendar: void <clinit>()>/l1#_224
<sun.text.normalizer.CharTrie: void <init>(int,int,sun.text.normalizer.Trie$DataManipulate)>/assign/instruction14	<sun.text.normalizer.CharTrie: void <init>(int,int,sun.text.normalizer.Trie$DataManipulate)>/l4_$$A_2#_105
<sun.text.normalizer.CharTrie: void unserialize(java.io.InputStream)>/assign/instruction9	<sun.text.normalizer.CharTrie: void unserialize(java.io.InputStream)>/l3#_276
<sun.security.provider.SecureRandom: byte[] engineGenerateSeed(int)>/assign/instruction3	<sun.security.provider.SecureRandom: byte[] engineGenerateSeed(int)>/l1#_0
<java.util.IdentityHashMap: void init(int)>/assign/instruction4	<java.util.IdentityHashMap: void init(int)>/$stack2
<java.util.IdentityHashMap: boolean resize(int)>/assign/instruction18	<java.util.IdentityHashMap: boolean resize(int)>/l2#_459
<java.lang.StringCoding$StringEncoder: byte[] encode(char[],int,int)>/assign/instruction8	<java.lang.StringCoding$StringEncoder: byte[] encode(char[],int,int)>/l4#_299
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray()>/assign/instruction5	<java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray()>/l1#_601
<java.util.stream.Nodes$IntArrayNode: void <init>(long)>/assign/instruction11	<java.util.stream.Nodes$IntArrayNode: void <init>(long)>/$stack4
<java.nio.HeapFloatBuffer: void <init>(int,int)>/assign/instruction4	<java.nio.HeapFloatBuffer: void <init>(int,int)>/l1#_0
<sun.security.ssl.CloneableDigest: void <init>(java.security.MessageDigest,int,java.lang.String)>/assign/instruction6	<sun.security.ssl.CloneableDigest: void <init>(java.security.MessageDigest,int,java.lang.String)>/l2#_0
<java.text.DigitList$1: void <clinit>()>/assign/instruction3	<java.text.DigitList$1: void <clinit>()>/$stack2
<java.io.ObjectStreamClass: void readNonProxy(java.io.ObjectInputStream)>/assign/instruction100	<java.io.ObjectStreamClass: void readNonProxy(java.io.ObjectInputStream)>/l4#_708
<java.io.ObjectStreamClass: java.io.ObjectStreamClass$ClassDataSlot[] getClassDataLayout0()>/assign/instruction102	<java.io.ObjectStreamClass: java.io.ObjectStreamClass$ClassDataSlot[] getClassDataLayout0()>/$stack11
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getDeclaredSerialFields(java.lang.Class)>/assign/instruction30	<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getDeclaredSerialFields(java.lang.Class)>/$stack12
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getDefaultSerialFields(java.lang.Class)>/assign/instruction28	<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getDefaultSerialFields(java.lang.Class)>/l4_$$A_3#_1692
<java.io.ObjectStreamClass: long computeDefaultSUID(java.lang.Class)>/assign/instruction39	<java.io.ObjectStreamClass: long computeDefaultSUID(java.lang.Class)>/$stack96
<java.io.ObjectStreamClass: long computeDefaultSUID(java.lang.Class)>/assign/instruction64	<java.io.ObjectStreamClass: long computeDefaultSUID(java.lang.Class)>/$stack26
<java.io.ObjectStreamClass: long computeDefaultSUID(java.lang.Class)>/assign/instruction111	<java.io.ObjectStreamClass: long computeDefaultSUID(java.lang.Class)>/$stack32
<java.io.ObjectStreamClass: long computeDefaultSUID(java.lang.Class)>/assign/instruction148	<java.io.ObjectStreamClass: long computeDefaultSUID(java.lang.Class)>/$stack36
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] matchFields(java.io.ObjectStreamField[],java.io.ObjectStreamClass)>/assign/instruction11	<java.io.ObjectStreamClass: java.io.ObjectStreamField[] matchFields(java.io.ObjectStreamField[],java.io.ObjectStreamClass)>/$stack9
<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/assign/instruction77	<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/$stack193
<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/assign/instruction203	<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/$stack89
<java.util.Formatter$FormatSpecifier: char[] addZeros(char[],int)>/assign/instruction47	<java.util.Formatter$FormatSpecifier: char[] addZeros(char[],int)>/$stack17
<sun.security.ssl.EngineArgs: void init(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)>/assign/instruction32	<sun.security.ssl.EngineArgs: void init(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)>/$stack13
<sun.security.ssl.EngineArgs: void init(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)>/assign/instruction35	<sun.security.ssl.EngineArgs: void init(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)>/$stack15
<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/assign/instruction93	<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/$stack145
<java.util.Formatter$FormatSpecifier: char[] addDot(char[])>/assign/instruction6	<java.util.Formatter$FormatSpecifier: char[] addDot(char[])>/$stack4
<java.util.Formatter$FormatSpecifier: char[] trailingZeros(char[],int)>/assign/instruction8	<java.util.Formatter$FormatSpecifier: char[] trailingZeros(char[],int)>/$stack6
<java.time.Duration$1: void <clinit>()>/assign/instruction3	<java.time.Duration$1: void <clinit>()>/$stack2
<java.time.chrono.MinguoChronology$1: void <clinit>()>/assign/instruction3	<java.time.chrono.MinguoChronology$1: void <clinit>()>/$stack2
<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/assign/instruction45	<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/$stack10
<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain,java.security.DomainCombiner,java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>/assign/instruction41	<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain,java.security.DomainCombiner,java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>/$stack15
<java.security.AccessControlContext: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/assign/instruction35	<java.security.AccessControlContext: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/$stack10
<java.security.AccessControlContext: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/assign/instruction79	<java.security.AccessControlContext: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/l5_$$A_1#_683
<jdk.internal.org.objectweb.asm.ClassWriter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>/assign/instruction29	<jdk.internal.org.objectweb.asm.ClassWriter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>/$stack12
<java.lang.UNIXProcess: byte[] toCString(java.lang.String)>/assign/instruction8	<java.lang.UNIXProcess: byte[] toCString(java.lang.String)>/$stack5
<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item addType(jdk.internal.org.objectweb.asm.Item)>/assign/instruction24	<jdk.internal.org.objectweb.asm.ClassWriter: jdk.internal.org.objectweb.asm.Item addType(jdk.internal.org.objectweb.asm.Item)>/$stack18
<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>/assign/instruction12	<jdk.internal.org.objectweb.asm.ClassWriter: void put(jdk.internal.org.objectweb.asm.Item)>/l3#_1758
<sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>/assign/instruction15	<sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>/l1#_89
<sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>/assign/instruction15	<sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>/l1#_109
<sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>/assign/instruction25	<sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>/l1#_130
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>/assign/instruction16	<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>/$stack10
<javax.security.auth.PrivateCredentialPermission: void init(java.lang.String)>/assign/instruction211	<javax.security.auth.PrivateCredentialPermission: void init(java.lang.String)>/$stack18
<sun.security.provider.certpath.X509CertPath: byte[] encodePKCS7()>/assign/instruction11	<sun.security.provider.certpath.X509CertPath: byte[] encodePKCS7()>/$stack10
<sun.security.ssl.ClientHandshaker: void serverHello(sun.security.ssl.HandshakeMessage$ServerHello)>/assign/instruction54	<sun.security.ssl.ClientHandshaker: void serverHello(sun.security.ssl.HandshakeMessage$ServerHello)>/$stack163
<java.util.stream.Node$OfDouble: double[] newArray(int)>/assign/instruction3	<java.util.stream.Node$OfDouble: double[] newArray(int)>/l1#_0
<sun.misc.Launcher: java.net.URL[] pathToURLs(java.io.File[])>/assign/instruction3	<sun.misc.Launcher: java.net.URL[] pathToURLs(java.io.File[])>/$stack3
<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>/assign/instruction20	<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>/l3_$$A_1#_437
<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>/assign/instruction68	<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>/l2#10_$$A_2#_459
<sun.security.ssl.ClientHandshaker: void serverHelloDone(sun.security.ssl.HandshakeMessage$ServerHelloDone)>/assign/instruction67	<sun.security.ssl.ClientHandshaker: void serverHelloDone(sun.security.ssl.HandshakeMessage$ServerHelloDone)>/l6#21#_803
<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>/assign/instruction13	<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>/l5_$$A_2#_543
<java.time.OffsetDateTime$1: void <clinit>()>/assign/instruction3	<java.time.OffsetDateTime$1: void <clinit>()>/$stack2
<java.text.DateFormatSymbols: void setZoneStrings(java.lang.String[][])>/assign/instruction4	<java.text.DateFormatSymbols: void setZoneStrings(java.lang.String[][])>/$stack5
<java.text.DateFormatSymbols: java.lang.String[] toOneBasedArray(java.lang.String[])>/assign/instruction4	<java.text.DateFormatSymbols: java.lang.String[] toOneBasedArray(java.lang.String[])>/$stack4
<java.text.DateFormatSymbols: java.lang.String[][] getZoneStringsImpl(boolean)>/assign/instruction13	<java.text.DateFormatSymbols: java.lang.String[][] getZoneStringsImpl(boolean)>/l2#_826
<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>/assign/instruction9	<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>/l3#_381
<java.lang.ThreadLocal$ThreadLocalMap: void resize()>/assign/instruction5	<java.lang.ThreadLocal$ThreadLocalMap: void resize()>/l3#_684
<sun.security.ssl.HandshakeMessage$Finished: void <init>(sun.security.ssl.ProtocolVersion,sun.security.ssl.HandshakeInStream,sun.security.ssl.CipherSuite)>/assign/instruction18	<sun.security.ssl.HandshakeMessage$Finished: void <init>(sun.security.ssl.ProtocolVersion,sun.security.ssl.HandshakeInStream,sun.security.ssl.CipherSuite)>/l4#_1904
<java.util.Currency: int[] readIntArray(java.io.DataInputStream,int)>/assign/instruction3	<java.util.Currency: int[] readIntArray(java.io.DataInputStream,int)>/l1#_0
<java.util.Currency: long[] readLongArray(java.io.DataInputStream,int)>/assign/instruction3	<java.util.Currency: long[] readLongArray(java.io.DataInputStream,int)>/l1#_0
<java.util.Currency: java.lang.String[] readStringArray(java.io.DataInputStream,int)>/assign/instruction3	<java.util.Currency: java.lang.String[] readStringArray(java.io.DataInputStream,int)>/l1#_0
<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>/assign/instruction55	<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>/$stack28
<java.time.zone.TzdbZoneRulesProvider: void load(java.io.DataInputStream)>/assign/instruction27	<java.time.zone.TzdbZoneRulesProvider: void load(java.io.DataInputStream)>/l4#2#_176
<java.time.zone.TzdbZoneRulesProvider: void load(java.io.DataInputStream)>/assign/instruction39	<java.time.zone.TzdbZoneRulesProvider: void load(java.io.DataInputStream)>/l6#4#_183
<java.time.zone.TzdbZoneRulesProvider: void load(java.io.DataInputStream)>/assign/instruction45	<java.time.zone.TzdbZoneRulesProvider: void load(java.io.DataInputStream)>/$stack32
<java.util.Spliterators$IteratorSpliterator: java.util.Spliterator trySplit()>/assign/instruction36	<java.util.Spliterators$IteratorSpliterator: java.util.Spliterator trySplit()>/l4_$$A_4#_1782
<java.util.stream.SpinedBuffer: void <init>(int)>/assign/instruction6	<java.util.stream.SpinedBuffer: void <init>(int)>/$stack3
<java.util.stream.SpinedBuffer: void <init>()>/assign/instruction5	<java.util.stream.SpinedBuffer: void <init>()>/$stack2
<java.util.stream.SpinedBuffer: void ensureCapacity(long)>/assign/instruction34	<java.util.stream.SpinedBuffer: void ensureCapacity(long)>/l6_$$A_3#_142
<sun.security.ssl.ServerHandshaker$3: void <clinit>()>/assign/instruction3	<sun.security.ssl.ServerHandshaker$3: void <clinit>()>/$stack2
<sun.nio.fs.UnixFileSystemProvider$3: void <clinit>()>/assign/instruction3	<sun.nio.fs.UnixFileSystemProvider$3: void <clinit>()>/$stack2
<sun.misc.LRUCache: java.lang.Object forName(java.lang.Object)>/assign/instruction6	<sun.misc.LRUCache: java.lang.Object forName(java.lang.Object)>/$stack22
<sun.text.IntHashtable: void initialize(int)>/assign/instruction21	<sun.text.IntHashtable: void initialize(int)>/l2#_179
<sun.text.IntHashtable: void initialize(int)>/assign/instruction23	<sun.text.IntHashtable: void initialize(int)>/l2#_179
<sun.net.www.MimeTable: java.lang.String[] getExtensions(java.lang.String)>/assign/instruction8	<sun.net.www.MimeTable: java.lang.String[] getExtensions(java.lang.String)>/l3#_364
<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>/assign/instruction6	<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>/$stack12
<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>/assign/instruction94	<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>/l8_$$A_3#_140
<java.nio.HeapByteBuffer: void <init>(int,int)>/assign/instruction4	<java.nio.HeapByteBuffer: void <init>(int,int)>/l1#_0
<sun.net.www.MimeEntry: void setExtensions(java.lang.String)>/assign/instruction8	<sun.net.www.MimeEntry: void setExtensions(java.lang.String)>/l3#_191
<sun.security.ssl.ProtocolList: java.lang.String[] toStringArray()>/assign/instruction6	<sun.security.ssl.ProtocolList: java.lang.String[] toStringArray()>/$stack9
<javax.crypto.spec.GCMParameterSpec: void init(int,byte[],int,int)>/assign/instruction22	<javax.crypto.spec.GCMParameterSpec: void init(int,byte[],int,int)>/l4#_0
<sun.text.normalizer.UCharacterIterator: java.lang.String getText()>/assign/instruction3	<sun.text.normalizer.UCharacterIterator: java.lang.String getText()>/$stack2
<java.time.temporal.IsoFields$1: void <clinit>()>/assign/instruction3	<java.time.temporal.IsoFields$1: void <clinit>()>/$stack2
<java.util.Spliterators$AbstractLongSpliterator: java.util.Spliterator$OfLong trySplit()>/assign/instruction22	<java.util.Spliterators$AbstractLongSpliterator: java.util.Spliterator$OfLong trySplit()>/l4_$$A_4#_1537
<java.time.chrono.HijrahChronology: int[] createEpochMonths(int,int,int,java.util.Map)>/assign/instruction11	<java.time.chrono.HijrahChronology: int[] createEpochMonths(int,int,int,java.util.Map)>/l5#_996
<sun.security.pkcs.PKCS9Attributes: sun.security.pkcs.PKCS9Attribute[] getAttributes()>/assign/instruction4	<sun.security.pkcs.PKCS9Attributes: sun.security.pkcs.PKCS9Attribute[] getAttributes()>/$stack6
<sun.security.pkcs.PKCS9Attributes: sun.security.util.DerEncoder[] castToDerEncoder(java.lang.Object[])>/assign/instruction3	<sun.security.pkcs.PKCS9Attributes: sun.security.util.DerEncoder[] castToDerEncoder(java.lang.Object[])>/$stack3
<java.util.Locale$1: void <clinit>()>/assign/instruction3	<java.util.Locale$1: void <clinit>()>/$stack2
<sun.net.www.http.KeepAliveStream: boolean hurry()>/assign/instruction24	<sun.net.www.http.KeepAliveStream: boolean hurry()>/l1#_137
<java.nio.DirectCharBufferU: java.lang.String toString(int,int)>/assign/instruction11	<java.nio.DirectCharBufferU: java.lang.String toString(int,int)>/l3#_419
<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>/assign/instruction12	<jdk.internal.org.objectweb.asm.Attribute: jdk.internal.org.objectweb.asm.Attribute read(jdk.internal.org.objectweb.asm.ClassReader,int,int,char[],int,jdk.internal.org.objectweb.asm.Label[])>/l3#_0
<java.lang.invoke.LambdaFormEditor$Transform: byte[] fullBytes(int[])>/assign/instruction3	<java.lang.invoke.LambdaFormEditor$Transform: byte[] fullBytes(int[])>/$stack7
<java.lang.invoke.LambdaFormEditor$Transform: java.lang.invoke.LambdaFormEditor$Transform ofBothArrays(java.lang.invoke.LambdaFormEditor$Transform$Kind,int[],byte[])>/assign/instruction8	<java.lang.invoke.LambdaFormEditor$Transform: java.lang.invoke.LambdaFormEditor$Transform ofBothArrays(java.lang.invoke.LambdaFormEditor$Transform$Kind,int[],byte[])>/$stack12
<java.util.stream.StreamSpliterators$ArrayBuffer$OfInt: void <init>(int)>/assign/instruction4	<java.util.stream.StreamSpliterators$ArrayBuffer$OfInt: void <init>(int)>/l1#_0
<java.lang.invoke.BoundMethodHandle$Factory: java.lang.invoke.MethodHandle[] makeGetters(java.lang.Class,java.lang.String,java.lang.invoke.MethodHandle[])>/assign/instruction6	<java.lang.invoke.BoundMethodHandle$Factory: java.lang.invoke.MethodHandle[] makeGetters(java.lang.Class,java.lang.String,java.lang.invoke.MethodHandle[])>/$stack13
<java.lang.invoke.BoundMethodHandle$Factory: java.lang.invoke.LambdaForm$NamedFunction[] makeNominalGetters(java.lang.String,java.lang.invoke.LambdaForm$NamedFunction[],java.lang.invoke.MethodHandle[])>/assign/instruction6	<java.lang.invoke.BoundMethodHandle$Factory: java.lang.invoke.LambdaForm$NamedFunction[] makeNominalGetters(java.lang.String,java.lang.invoke.LambdaForm$NamedFunction[],java.lang.invoke.MethodHandle[])>/$stack9
<java.text.SimpleDateFormat: char[] compile(java.lang.String)>/assign/instruction310	<java.text.SimpleDateFormat: char[] compile(java.lang.String)>/l10_$$A_8#_854
<java.util.Spliterators$DoubleIteratorSpliterator: java.util.Spliterator$OfDouble trySplit()>/assign/instruction20	<java.util.Spliterators$DoubleIteratorSpliterator: java.util.Spliterator$OfDouble trySplit()>/l4_$$A_4#_2082
<sun.security.ssl.CipherBox$1: void <clinit>()>/assign/instruction3	<sun.security.ssl.CipherBox$1: void <clinit>()>/$stack2
<java.lang.StringCoding$StringDecoder: char[] decode(byte[],int,int)>/assign/instruction8	<java.lang.StringCoding$StringDecoder: char[] decode(byte[],int,int)>/l4#_148
<java.time.chrono.MinguoDate$1: void <clinit>()>/assign/instruction3	<java.time.chrono.MinguoDate$1: void <clinit>()>/$stack2
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry readLOC()>/assign/instruction32	<java.util.zip.ZipInputStream: java.util.zip.ZipEntry readLOC()>/l2_$$A_2#_292
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry readLOC()>/assign/instruction92	<java.util.zip.ZipInputStream: java.util.zip.ZipEntry readLOC()>/l1#2_$$A_1#_318
<sun.text.normalizer.UCharacterPropertyReader: void read(sun.text.normalizer.UCharacterProperty)>/assign/instruction81	<sun.text.normalizer.UCharacterPropertyReader: void read(sun.text.normalizer.UCharacterProperty)>/l3_$$A_3#_140
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>/assign/instruction6	<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>/$stack10
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>/assign/instruction6	<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>/$stack10
<java.util.Spliterators$LongIteratorSpliterator: java.util.Spliterator$OfLong trySplit()>/assign/instruction20	<java.util.Spliterators$LongIteratorSpliterator: java.util.Spliterator$OfLong trySplit()>/l4_$$A_4#_1988
<java.util.stream.SpinedBuffer$OfLong: long[][] newArrayArray(int)>/assign/instruction3	<java.util.stream.SpinedBuffer$OfLong: long[][] newArrayArray(int)>/l1#_0
<java.util.stream.SpinedBuffer$OfLong: long[] newArray(int)>/assign/instruction3	<java.util.stream.SpinedBuffer$OfLong: long[] newArray(int)>/l1#_0
<java.time.ZonedDateTime$1: void <clinit>()>/assign/instruction3	<java.time.ZonedDateTime$1: void <clinit>()>/$stack2
<sun.security.util.DisabledAlgorithmConstraints$1: void <clinit>()>/assign/instruction3	<sun.security.util.DisabledAlgorithmConstraints$1: void <clinit>()>/$stack2
<java.lang.Package: boolean isCompatibleWith(java.lang.String)>/assign/instruction17	<java.lang.Package: boolean isCompatibleWith(java.lang.String)>/$stack16
<java.lang.Package: boolean isCompatibleWith(java.lang.String)>/assign/instruction43	<java.lang.Package: boolean isCompatibleWith(java.lang.String)>/$stack19
<java.lang.Package: java.lang.Package[] getSystemPackages()>/assign/instruction20	<java.lang.Package: java.lang.Package[] getSystemPackages()>/$stack10
<jdk.internal.org.objectweb.asm.MethodWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>/assign/instruction42	<jdk.internal.org.objectweb.asm.MethodWriter: void <init>(jdk.internal.org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>/$stack45
<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>/assign/instruction39	<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>/$stack36
<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>/assign/instruction52	<jdk.internal.org.objectweb.asm.MethodWriter: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>/$stack21
<java.text.CollationElementIterator: int[] makeReorderedBuffer(int,int,int[],boolean)>/assign/instruction64	<java.text.CollationElementIterator: int[] makeReorderedBuffer(int,int,int[],boolean)>/$stack12
<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>/assign/instruction12	<jdk.internal.org.objectweb.asm.MethodWriter: int startFrame(int,int,int)>/l4#_1855
<java.math.BigDecimal: void <init>(char[],int,int,java.math.MathContext)>/assign/instruction243	<java.math.BigDecimal: void <init>(char[],int,int,java.math.MathContext)>/l3_$$A_3#_435
<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/assign/instruction8	<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/$stack18
<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/assign/instruction243	<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/$stack192
<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/assign/instruction246	<jdk.internal.org.objectweb.asm.MethodWriter: void resizeInstructions()>/$stack194
<java.nio.file.TempFileHelper: java.nio.file.Path create(java.nio.file.Path,java.lang.String,java.lang.String,boolean,java.nio.file.attribute.FileAttribute[])>/assign/instruction63	<java.nio.file.TempFileHelper: java.nio.file.Path create(java.nio.file.Path,java.lang.String,java.lang.String,boolean,java.nio.file.attribute.FileAttribute[])>/$stack21
<sun.security.pkcs.SigningCertificateInfo: void parse(byte[])>/assign/instruction16	<sun.security.pkcs.SigningCertificateInfo: void parse(byte[])>/$stack10
<java.nio.ByteBufferAsCharBufferB: java.lang.String toString(int,int)>/assign/instruction11	<java.nio.ByteBufferAsCharBufferB: java.lang.String toString(int,int)>/l3#_180
<java.math.BitSieve: void <init>()>/assign/instruction9	<java.math.BitSieve: void <init>()>/$stack6
<java.math.BitSieve: void <init>(java.math.BigInteger,int)>/assign/instruction8	<java.math.BitSieve: void <init>(java.math.BigInteger,int)>/$stack10
<java.lang.reflect.Executable: java.lang.reflect.Type[] getAllGenericParameterTypes()>/assign/instruction10	<java.lang.reflect.Executable: java.lang.reflect.Type[] getAllGenericParameterTypes()>/$stack14
<java.lang.reflect.Executable: java.lang.reflect.Parameter[] synthesizeAllParams()>/assign/instruction3	<java.lang.reflect.Executable: java.lang.reflect.Parameter[] synthesizeAllParams()>/l1#_361
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>/assign/instruction28	<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>/l4#_877
<sun.nio.cs.StreamEncoder: void write(java.lang.String,int,int)>/assign/instruction9	<sun.nio.cs.StreamEncoder: void write(java.lang.String,int,int)>/l3#_0
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object[] toArray()>/assign/instruction5	<java.util.concurrent.LinkedBlockingDeque: java.lang.Object[] toArray()>/$stack6
<java.nio.channels.Channels$WritableByteChannelImpl: int write(java.nio.ByteBuffer)>/assign/instruction19	<java.nio.channels.Channels$WritableByteChannelImpl: int write(java.nio.ByteBuffer)>/l5#_451
<sun.security.ssl.SSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()>/assign/instruction22	<sun.security.ssl.SSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()>/$stack14
<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>/assign/instruction97	<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>/$stack17
<sun.security.x509.RDN: void <init>(java.lang.String,java.lang.String,java.util.Map)>/assign/instruction96	<sun.security.x509.RDN: void <init>(java.lang.String,java.lang.String,java.util.Map)>/$stack18
<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>/assign/instruction17	<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>/$stack9
<sun.security.x509.RDN: void <init>(int)>/assign/instruction4	<sun.security.x509.RDN: void <init>(int)>/l1#_0
<sun.security.ssl.SSLSessionImpl: java.lang.String[] getValueNames()>/assign/instruction19	<sun.security.ssl.SSLSessionImpl: java.lang.String[] getValueNames()>/$stack11
<java.io.ByteArrayOutputStream: void <init>(int)>/assign/instruction14	<java.io.ByteArrayOutputStream: void <init>(int)>/l1#_0
<sun.util.cldr.CLDRLocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>/assign/instruction5	<sun.util.cldr.CLDRLocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>/$stack7
<java.io.ObjectInputStream$HandleTable$HandleList: void add(int)>/assign/instruction10	<java.io.ObjectInputStream$HandleTable$HandleList: void add(int)>/$stack11
<sun.text.CompactByteArray: void compact()>/assign/instruction94	<sun.text.CompactByteArray: void compact()>/l4_$$A_3#_201
<java.time.YearMonth$1: void <clinit>()>/assign/instruction3	<java.time.YearMonth$1: void <clinit>()>/$stack2
<java.time.YearMonth$1: void <clinit>()>/assign/instruction82	<java.time.YearMonth$1: void <clinit>()>/$stack23
<java.nio.ByteBufferAsCharBufferL: java.lang.String toString(int,int)>/assign/instruction11	<java.nio.ByteBufferAsCharBufferL: java.lang.String toString(int,int)>/l3#_180
<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/assign/instruction21	<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/l3#_378
<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/assign/instruction36	<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/l4#_379
<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/assign/instruction50	<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/l5#_380
<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/assign/instruction73	<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/l6#_381
<sun.security.provider.PolicyFile$PolicyInfo: void <init>(int)>/assign/instruction17	<sun.security.provider.PolicyFile$PolicyInfo: void <init>(int)>/l1#_0
<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/assign/instruction108	<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/l7#_382
<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/assign/instruction115	<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/l8#_383
<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/assign/instruction131	<sun.util.locale.provider.RuleBasedBreakIterator: void readTables(java.lang.String)>/l9#_384
<sun.util.locale.provider.RuleBasedBreakIterator: byte[] readFile(java.lang.String)>/assign/instruction17	<sun.util.locale.provider.RuleBasedBreakIterator: byte[] readFile(java.lang.String)>/l4#_460
<sun.util.locale.provider.RuleBasedBreakIterator: byte[] readFile(java.lang.String)>/assign/instruction61	<sun.util.locale.provider.RuleBasedBreakIterator: byte[] readFile(java.lang.String)>/l4_$$A_1#_482
<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaForm endEdit()>/assign/instruction52	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaForm endEdit()>/$stack24
<sun.security.x509.ReasonFlags: void set(int,boolean)>/assign/instruction8	<sun.security.x509.ReasonFlags: void set(int,boolean)>/$stack7
<java.time.chrono.JapaneseDate$1: void <clinit>()>/assign/instruction3	<java.time.chrono.JapaneseDate$1: void <clinit>()>/$stack2
<sun.nio.fs.UnixFileModeAttribute$1: void <clinit>()>/assign/instruction3	<sun.nio.fs.UnixFileModeAttribute$1: void <clinit>()>/$stack2
<java.util.stream.StreamSpliterators$ArrayBuffer$OfLong: void <init>(int)>/assign/instruction4	<java.util.stream.StreamSpliterators$ArrayBuffer$OfLong: void <init>(int)>/l1#_0
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] createAvailableLocales()>/assign/instruction35	<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] createAvailableLocales()>/$stack16
<java.io.InputStream: long skip(long)>/assign/instruction11	<java.io.InputStream: long skip(long)>/l6#_221
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean removeAll(java.util.Collection)>/assign/instruction30	<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean removeAll(java.util.Collection)>/l4#_1478
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean removeAll(java.util.Collection)>/assign/instruction50	<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean removeAll(java.util.Collection)>/$stack21
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean retainAll(java.util.Collection)>/assign/instruction30	<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean retainAll(java.util.Collection)>/l4#_1518
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean retainAll(java.util.Collection)>/assign/instruction50	<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean retainAll(java.util.Collection)>/$stack21
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/assign/instruction26	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/$stack17
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean removeIf(java.util.function.Predicate)>/assign/instruction30	<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean removeIf(java.util.function.Predicate)>/l4#_1558
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean removeIf(java.util.function.Predicate)>/assign/instruction50	<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean removeIf(java.util.function.Predicate)>/$stack21
<sun.security.ssl.SSLAlgorithmDecomposer$1: void <clinit>()>/assign/instruction3	<sun.security.ssl.SSLAlgorithmDecomposer$1: void <clinit>()>/$stack2
<sun.net.www.http.ChunkedInputStream: void ensureRawAvailable(int)>/assign/instruction16	<sun.net.www.http.ChunkedInputStream: void ensureRawAvailable(int)>/$stack20
<sun.net.www.http.ChunkedInputStream: void processRaw()>/assign/instruction103	<sun.net.www.http.ChunkedInputStream: void processRaw()>/$stack104
<java.io.BufferedReader: void <init>(java.io.Reader,int)>/assign/instruction19	<java.io.BufferedReader: void <init>(java.io.Reader,int)>/l2#_0
<java.io.BufferedReader: void fill()>/assign/instruction31	<java.io.BufferedReader: void fill()>/$stack11
<java.security.Security: java.security.Provider[] getProviders(java.util.Map)>/assign/instruction58	<java.security.Security: java.security.Provider[] getProviders(java.util.Map)>/$stack18
<sun.nio.fs.UnixUriUtils: java.nio.file.Path fromUri(sun.nio.fs.UnixFileSystem,java.net.URI)>/assign/instruction65	<sun.nio.fs.UnixUriUtils: java.nio.file.Path fromUri(sun.nio.fs.UnixFileSystem,java.net.URI)>/l4_$$A_2#_72
<java.util.concurrent.ForkJoinTask: java.util.Collection invokeAll(java.util.Collection)>/assign/instruction7	<java.util.concurrent.ForkJoinTask: java.util.Collection invokeAll(java.util.Collection)>/$stack7
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)>/assign/instruction16	<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)>/l4#_834
<java.lang.ProcessEnvironment$StringEnvironment: byte[] toEnvironmentBlock(int[])>/assign/instruction26	<java.lang.ProcessEnvironment$StringEnvironment: byte[] toEnvironmentBlock(int[])>/l2_$$A_1#_273
<java.lang.ClassLoader: java.lang.Package[] getPackages()>/assign/instruction41	<java.lang.ClassLoader: java.lang.Package[] getPackages()>/$stack12
<java.lang.ClassLoader: java.lang.String[] initializePath(java.lang.String)>/assign/instruction18	<java.lang.ClassLoader: java.lang.String[] initializePath(java.lang.String)>/$stack11
<sun.security.ssl.OutputRecord: void write(java.io.OutputStream,boolean,java.io.ByteArrayOutputStream)>/assign/instruction62	<sun.security.ssl.OutputRecord: void write(java.io.OutputStream,boolean,java.io.ByteArrayOutputStream)>/$stack94
<java.security.MessageDigestSpi: void engineUpdate(java.nio.ByteBuffer)>/assign/instruction24	<java.security.MessageDigestSpi: void engineUpdate(java.nio.ByteBuffer)>/l3_$$A_1#_118
<java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: void <init>(java.util.List,boolean)>/assign/instruction5	<java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: void <init>(java.util.List,boolean)>/$stack3
<java.util.Spliterators$AbstractIntSpliterator: java.util.Spliterator$OfInt trySplit()>/assign/instruction22	<java.util.Spliterators$AbstractIntSpliterator: java.util.Spliterator$OfInt trySplit()>/l4_$$A_4#_1427
<sun.security.ssl.HandshakeMessage$CertificateRequest: void <init>(java.security.cert.X509Certificate[],sun.security.ssl.CipherSuite$KeyExchange,java.util.Collection,sun.security.ssl.ProtocolVersion)>/assign/instruction9	<sun.security.ssl.HandshakeMessage$CertificateRequest: void <init>(java.security.cert.X509Certificate[],sun.security.ssl.CipherSuite$KeyExchange,java.util.Collection,sun.security.ssl.ProtocolVersion)>/$stack7
<sun.security.ssl.HandshakeMessage$CertificateRequest: void <init>(sun.security.ssl.HandshakeInStream,sun.security.ssl.ProtocolVersion)>/assign/instruction89	<sun.security.ssl.HandshakeMessage$CertificateRequest: void <init>(sun.security.ssl.HandshakeInStream,sun.security.ssl.ProtocolVersion)>/$stack15
<sun.security.ssl.HandshakeMessage$CertificateRequest: javax.security.auth.x500.X500Principal[] getAuthorities()>/assign/instruction4	<sun.security.ssl.HandshakeMessage$CertificateRequest: javax.security.auth.x500.X500Principal[] getAuthorities()>/$stack4
<sun.security.util.DerIndefLenConverter: byte[] convert(byte[])>/assign/instruction39	<sun.security.util.DerIndefLenConverter: byte[] convert(byte[])>/$stack12
<sun.security.pkcs.PKCS7: void <init>(java.io.InputStream)>/assign/instruction22	<sun.security.pkcs.PKCS7: void <init>(java.io.InputStream)>/$stack5
<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/assign/instruction10	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/$stack13
<sun.net.www.protocol.http.HttpURLConnection$13: void <clinit>()>/assign/instruction3	<sun.net.www.protocol.http.HttpURLConnection$13: void <clinit>()>/$stack2
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/assign/instruction9	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/l4#_280
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/assign/instruction56	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/l4_$$A_1#_312
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/assign/instruction166	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/l4_$$A_3#_357
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/assign/instruction232	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/l4_$$A_5#_387
<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/assign/instruction9	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/l4#_410
<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/assign/instruction45	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/l4_$$A_1#_433
<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/assign/instruction120	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/l4_$$A_2#_468
<sun.security.pkcs.PKCS7: void encodeSignedData(sun.security.util.DerOutputStream)>/assign/instruction20	<sun.security.pkcs.PKCS7: void encodeSignedData(sun.security.util.DerOutputStream)>/$stack50
<sun.security.pkcs.PKCS7: void encodeSignedData(sun.security.util.DerOutputStream)>/assign/instruction90	<sun.security.pkcs.PKCS7: void encodeSignedData(sun.security.util.DerOutputStream)>/$stack34
<sun.security.pkcs.PKCS7: sun.security.pkcs.SignerInfo[] verify(byte[])>/assign/instruction22	<sun.security.pkcs.PKCS7: sun.security.pkcs.SignerInfo[] verify(byte[])>/$stack9
<sun.security.pkcs.PKCS7: void populateCertIssuerNames()>/assign/instruction7	<sun.security.pkcs.PKCS7: void populateCertIssuerNames()>/$stack7
<java.util.EnumMap: void <init>(java.lang.Class)>/assign/instruction11	<java.util.EnumMap: void <init>(java.lang.Class)>/$stack4
<java.util.EnumMap: void <init>(java.util.Map)>/assign/instruction37	<java.util.EnumMap: void <init>(java.util.Map)>/$stack13
<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/assign/instruction36	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/$stack10
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add_unchecked(int)>/assign/instruction72	<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add_unchecked(int)>/$stack32
<java.util.EnumMap: void readObject(java.io.ObjectInputStream)>/assign/instruction9	<java.util.EnumMap: void readObject(java.io.ObjectInputStream)>/$stack9
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)>/assign/instruction34	<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)>/l3_$$A_1#_721
<sun.text.normalizer.UnicodeSet: void ensureCapacity(int)>/assign/instruction8	<sun.text.normalizer.UnicodeSet: void ensureCapacity(int)>/$stack5
<sun.text.normalizer.UnicodeSet: void ensureBufferCapacity(int)>/assign/instruction10	<sun.text.normalizer.UnicodeSet: void ensureBufferCapacity(int)>/$stack3
<java.util.Formatter$FormatSpecifier$BigDecimalLayout: char[] toCharArray(java.lang.StringBuilder)>/assign/instruction7	<java.util.Formatter$FormatSpecifier$BigDecimalLayout: char[] toCharArray(java.lang.StringBuilder)>/$stack3
<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>/assign/instruction31	<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>/l3#_0
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class,java.lang.Class[])>/assign/instruction6	<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class,java.lang.Class[])>/$stack5
<java.lang.invoke.MethodType: java.lang.invoke.MethodType genericMethodType(int,boolean)>/assign/instruction23	<java.lang.invoke.MethodType: java.lang.invoke.MethodType genericMethodType(int,boolean)>/$stack9
<java.util.concurrent.LinkedBlockingDeque$LBDSpliterator: java.util.Spliterator trySplit()>/assign/instruction27	<java.util.concurrent.LinkedBlockingDeque$LBDSpliterator: java.util.Spliterator trySplit()>/l4#_1167
<sun.security.x509.AVA: java.lang.String getEmbeddedHexString(java.util.List)>/assign/instruction3	<sun.security.x509.AVA: java.lang.String getEmbeddedHexString(java.util.List)>/l1#_531
<sun.nio.fs.UnixPath: byte[] encode(sun.nio.fs.UnixFileSystem,java.lang.String)>/assign/instruction35	<sun.nio.fs.UnixPath: byte[] encode(sun.nio.fs.UnixFileSystem,java.lang.String)>/$stack20
<sun.nio.fs.UnixPath: void initOffsets()>/assign/instruction44	<sun.nio.fs.UnixPath: void initOffsets()>/l1_$$A_5#_224
<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>/assign/instruction8	<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>/$stack10
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getFileName()>/assign/instruction22	<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getFileName()>/l3#_286
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getParent()>/assign/instruction15	<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getParent()>/l2#_301
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getName(int)>/assign/instruction31	<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getName(int)>/l3_$$A_2#_331
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath subpath(int,int)>/assign/instruction40	<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath subpath(int,int)>/l4_$$A_2#_360
<sun.nio.fs.UnixPath: byte[] resolve(byte[],byte[])>/assign/instruction15	<sun.nio.fs.UnixPath: byte[] resolve(byte[],byte[])>/$stack30
<sun.nio.fs.UnixPath: byte[] resolve(byte[],byte[])>/assign/instruction24	<sun.nio.fs.UnixPath: byte[] resolve(byte[],byte[])>/$stack7
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath relativize(java.nio.file.Path)>/assign/instruction59	<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath relativize(java.nio.file.Path)>/l10_$$A_2#_451
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath relativize(java.nio.file.Path)>/assign/instruction99	<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath relativize(java.nio.file.Path)>/$stack21
<sun.nio.fs.UnixPath: java.nio.file.Path normalize()>/assign/instruction7	<sun.nio.fs.UnixPath: java.nio.file.Path normalize()>/l1#_484
<sun.nio.fs.UnixPath: java.nio.file.Path normalize()>/assign/instruction8	<sun.nio.fs.UnixPath: java.nio.file.Path normalize()>/l1#_484
<sun.nio.fs.UnixPath: java.nio.file.Path normalize()>/assign/instruction222	<sun.nio.fs.UnixPath: java.nio.file.Path normalize()>/l7_$$A_9#_586
<jdk.internal.org.objectweb.asm.Label: void addReference(int,int)>/assign/instruction15	<jdk.internal.org.objectweb.asm.Label: void addReference(int,int)>/$stack16
<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>/assign/instruction143	<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>/$stack95
<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>/assign/instruction145	<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>/$stack96
<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>/assign/instruction195	<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>/$stack50
<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>/assign/instruction197	<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>/$stack51
<jdk.internal.org.objectweb.asm.Label: void addToSubroutine(long,int)>/assign/instruction12	<jdk.internal.org.objectweb.asm.Label: void addToSubroutine(long,int)>/$stack15
<java.math.BigInteger: void <init>(java.lang.String,int)>/assign/instruction81	<java.math.BigInteger: void <init>(java.lang.String,int)>/l11#_462
<java.math.BigInteger: void <init>(char[],int,int)>/assign/instruction43	<java.math.BigInteger: void <init>(char[],int,int)>/l6_$$A_2#_520
<java.math.BigInteger: byte[] randomBits(int,java.util.Random)>/assign/instruction12	<java.math.BigInteger: byte[] randomBits(int,java.util.Random)>/l2#_629
<javax.crypto.spec.RC5ParameterSpec: void <init>(int,int,int,byte[],int)>/assign/instruction27	<javax.crypto.spec.RC5ParameterSpec: void <init>(int,int,int,byte[],int)>/l6#_118
<java.math.BigInteger: java.math.BigInteger smallPrime(int,int,java.util.Random)>/assign/instruction6	<java.math.BigInteger: java.math.BigInteger smallPrime(int,int,java.util.Random)>/l3#_710
<java.math.BigInteger: int[] add(int[],long)>/assign/instruction8	<java.math.BigInteger: int[] add(int[],long)>/l6#_1270
<java.math.BigInteger: int[] add(int[],long)>/assign/instruction29	<java.math.BigInteger: int[] add(int[],long)>/l6#_1270
<java.math.BigInteger: int[] add(int[],long)>/assign/instruction95	<java.math.BigInteger: int[] add(int[],long)>/$stack28
<java.math.BigInteger: int[] add(int[],int[])>/assign/instruction15	<java.math.BigInteger: int[] add(int[],int[])>/l2#4#_1322
<java.math.BigInteger: int[] add(int[],int[])>/assign/instruction96	<java.math.BigInteger: int[] add(int[],int[])>/$stack14
<java.math.BigInteger: int[] subtract(int[],long)>/assign/instruction6	<java.math.BigInteger: int[] subtract(int[],long)>/l4#_1394
<java.math.BigInteger: int[] subtract(int[],int[])>/assign/instruction4	<java.math.BigInteger: int[] subtract(int[],int[])>/l2#_1450
<java.math.BigInteger: java.math.BigInteger multiplyByInt(int[],int,int)>/assign/instruction13	<java.math.BigInteger: java.math.BigInteger multiplyByInt(int[],int,int)>/$stack14
<java.math.BigInteger: java.math.BigInteger multiply(long)>/assign/instruction36	<java.math.BigInteger: java.math.BigInteger multiply(long)>/$stack58
<java.math.BigInteger: java.math.BigInteger multiply(long)>/assign/instruction39	<java.math.BigInteger: java.math.BigInteger multiply(long)>/$stack26
<java.math.BigInteger: int[] multiplyToLen(int[],int,int[],int,int[])>/assign/instruction13	<java.math.BigInteger: int[] multiplyToLen(int[],int,int[],int,int[])>/$stack14
<java.text.RBTableBuilder: int addExpansion(int,java.lang.String)>/assign/instruction19	<java.text.RBTableBuilder: int addExpansion(int,java.lang.String)>/$stack13
<java.text.RBTableBuilder: int addExpansion(int,java.lang.String)>/assign/instruction69	<java.text.RBTableBuilder: int addExpansion(int,java.lang.String)>/l5_$$A_1#_529
<java.math.BigInteger: java.math.BigInteger getToomSlice(int,int,int,int)>/assign/instruction40	<java.math.BigInteger: java.math.BigInteger getToomSlice(int,int,int,int)>/l7#_1785
<java.math.BigInteger: java.math.BigInteger exactDivideBy3()>/assign/instruction4	<java.math.BigInteger: java.math.BigInteger exactDivideBy3()>/l1#_1812
<java.math.BigInteger: java.math.BigInteger getLower(int)>/assign/instruction8	<java.math.BigInteger: java.math.BigInteger getLower(int)>/l1#_0
<java.math.BigInteger: java.math.BigInteger getUpper(int)>/assign/instruction9	<java.math.BigInteger: java.math.BigInteger getUpper(int)>/l3#_1872
<java.math.BigInteger: int[] squareToLen(int[],int,int[])>/assign/instruction8	<java.math.BigInteger: int[] squareToLen(int[],int,int[])>/l3#_1909
<java.lang.invoke.BoundMethodHandle$1: void <clinit>()>/assign/instruction3	<java.lang.invoke.BoundMethodHandle$1: void <clinit>()>/$stack2
<java.nio.file.attribute.FileTime$1: void <clinit>()>/assign/instruction3	<java.nio.file.attribute.FileTime$1: void <clinit>()>/$stack2
<java.math.BigInteger: int[] leftShift(int[],int,int)>/assign/instruction15	<java.math.BigInteger: int[] leftShift(int[],int,int)>/$stack15
<java.math.BigInteger: int[] leftShift(int[],int,int)>/assign/instruction24	<java.math.BigInteger: int[] leftShift(int[],int,int)>/$stack12
<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>/assign/instruction28	<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>/$stack17
<java.math.BigInteger: int[] materialize(int[],int)>/assign/instruction6	<java.math.BigInteger: int[] materialize(int[],int)>/l1#_0
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>/assign/instruction16	<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>/$stack12
<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object,java.lang.Object[],int)>/assign/instruction46	<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object,java.lang.Object[],int)>/$stack11
<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>/assign/instruction21	<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>/l6#_589
<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/assign/instruction21	<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/$stack143
<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/assign/instruction48	<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/l9#_2716
<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/assign/instruction53	<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/l6_$$A_2#_2703
<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/assign/instruction91	<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/l6_$$A_2#_2703
<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/assign/instruction311	<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>/$stack74
<java.util.concurrent.CopyOnWriteArrayList: boolean removeAll(java.util.Collection)>/assign/instruction13	<java.util.concurrent.CopyOnWriteArrayList: boolean removeAll(java.util.Collection)>/l4#_687
<java.util.concurrent.CopyOnWriteArrayList: boolean retainAll(java.util.Collection)>/assign/instruction13	<java.util.concurrent.CopyOnWriteArrayList: boolean retainAll(java.util.Collection)>/l4#_730
<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>/assign/instruction36	<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>/$stack22
<java.math.BigInteger: java.math.BigInteger mod2(int)>/assign/instruction8	<java.math.BigInteger: java.math.BigInteger mod2(int)>/l2#_3015
<java.util.concurrent.CopyOnWriteArrayList: boolean removeIf(java.util.function.Predicate)>/assign/instruction13	<java.util.concurrent.CopyOnWriteArrayList: boolean removeIf(java.util.function.Predicate)>/l4#_900
<java.math.BigInteger: int[] shiftLeft(int[],int)>/assign/instruction8	<java.math.BigInteger: int[] shiftLeft(int[],int)>/$stack29
<java.math.BigInteger: int[] shiftLeft(int[],int)>/assign/instruction20	<java.math.BigInteger: int[] shiftLeft(int[],int)>/$stack26
<java.math.BigInteger: int[] shiftLeft(int[],int)>/assign/instruction25	<java.math.BigInteger: int[] shiftLeft(int[],int)>/$stack11
<java.math.BigInteger: java.math.BigInteger shiftRightImpl(int)>/assign/instruction28	<java.math.BigInteger: java.math.BigInteger shiftRightImpl(int)>/$stack50
<java.math.BigInteger: java.math.BigInteger shiftRightImpl(int)>/assign/instruction34	<java.math.BigInteger: java.math.BigInteger shiftRightImpl(int)>/$stack14
<java.util.concurrent.CopyOnWriteArrayList: void readObject(java.io.ObjectInputStream)>/assign/instruction6	<java.util.concurrent.CopyOnWriteArrayList: void readObject(java.io.ObjectInputStream)>/l2#_991
<java.math.BigInteger: int[] javaIncrement(int[])>/assign/instruction21	<java.math.BigInteger: int[] javaIncrement(int[])>/$stack6
<java.math.BigInteger: java.math.BigInteger and(java.math.BigInteger)>/assign/instruction6	<java.math.BigInteger: java.math.BigInteger and(java.math.BigInteger)>/$stack6
<java.math.BigInteger: java.math.BigInteger or(java.math.BigInteger)>/assign/instruction6	<java.math.BigInteger: java.math.BigInteger or(java.math.BigInteger)>/$stack6
<java.math.BigInteger: java.math.BigInteger xor(java.math.BigInteger)>/assign/instruction6	<java.math.BigInteger: java.math.BigInteger xor(java.math.BigInteger)>/$stack6
<java.math.BigInteger: java.math.BigInteger not()>/assign/instruction3	<java.math.BigInteger: java.math.BigInteger not()>/$stack3
<java.math.BigInteger: java.math.BigInteger andNot(java.math.BigInteger)>/assign/instruction6	<java.math.BigInteger: java.math.BigInteger andNot(java.math.BigInteger)>/$stack6
<java.math.BigInteger: java.math.BigInteger setBit(int)>/assign/instruction12	<java.math.BigInteger: java.math.BigInteger setBit(int)>/$stack7
<java.math.BigInteger: java.math.BigInteger clearBit(int)>/assign/instruction14	<java.math.BigInteger: java.math.BigInteger clearBit(int)>/$stack9
<java.math.BigInteger: java.math.BigInteger flipBit(int)>/assign/instruction12	<java.math.BigInteger: java.math.BigInteger flipBit(int)>/$stack7
<java.util.stream.SpinedBuffer$OfInt: int[][] newArrayArray(int)>/assign/instruction3	<java.util.stream.SpinedBuffer$OfInt: int[][] newArrayArray(int)>/l1#_0
<java.util.stream.SpinedBuffer$OfInt: int[] newArray(int)>/assign/instruction3	<java.util.stream.SpinedBuffer$OfInt: int[] newArray(int)>/l1#_0
<java.util.JumboEnumSet: void <init>(java.lang.Class,java.lang.Enum[])>/assign/instruction10	<java.util.JumboEnumSet: void <init>(java.lang.Class,java.lang.Enum[])>/$stack5
<java.math.BigInteger: java.lang.String smallToString(int)>/assign/instruction12	<java.math.BigInteger: java.lang.String smallToString(int)>/l2#_3719
<java.math.BigInteger: byte[] toByteArray()>/assign/instruction5	<java.math.BigInteger: byte[] toByteArray()>/l1#_3876
<java.math.BigInteger: int[] stripLeadingZeroBytes(byte[])>/assign/instruction14	<java.math.BigInteger: int[] stripLeadingZeroBytes(byte[])>/l3#_4151
<java.math.BigInteger: int[] makePositive(byte[])>/assign/instruction30	<java.math.BigInteger: int[] makePositive(byte[])>/l5#_4183
<java.math.BigInteger: int[] makePositive(int[])>/assign/instruction31	<java.math.BigInteger: int[] makePositive(int[])>/$stack11
<java.math.BigInteger: byte[] magSerializedForm()>/assign/instruction18	<java.math.BigInteger: byte[] magSerializedForm()>/l3#_4498
<java.lang.SecurityManager: java.lang.String[] getPackages(java.lang.String)>/assign/instruction13	<java.lang.SecurityManager: java.lang.String[] getPackages(java.lang.String)>/l3#_1482
<java.io.DataInputStream: java.lang.String readLine()>/assign/instruction40	<java.io.DataInputStream: java.lang.String readLine()>/$stack27
<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/assign/instruction10	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/$stack74
<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/assign/instruction13	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/$stack76
<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/assign/instruction18	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/l1#_589
<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/assign/instruction19	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/l1#_589
<sun.misc.Perf: java.nio.ByteBuffer createString(java.lang.String,int,int,java.lang.String,int)>/assign/instruction10	<sun.misc.Perf: java.nio.ByteBuffer createString(java.lang.String,int,int,java.lang.String,int)>/$stack10
<sun.misc.Perf: java.nio.ByteBuffer createString(java.lang.String,int,int,java.lang.String)>/assign/instruction9	<sun.misc.Perf: java.nio.ByteBuffer createString(java.lang.String,int,int,java.lang.String)>/$stack9
<java.util.stream.SortedOps$SizedLongSortingSink: void begin(long)>/assign/instruction10	<java.util.stream.SortedOps$SizedLongSortingSink: void begin(long)>/$stack4
<java.lang.String: void <init>(int[],int,int)>/assign/instruction54	<java.lang.String: void <init>(int[],int,int)>/l5_$$A_1#_261
<java.lang.String: void <init>(byte[],int,int,int)>/assign/instruction8	<java.lang.String: void <init>(byte[],int,int,int)>/l4#_0
<java.time.chrono.ChronoZonedDateTimeImpl$1: void <clinit>()>/assign/instruction3	<java.time.chrono.ChronoZonedDateTimeImpl$1: void <clinit>()>/$stack2
<java.text.ChoiceFormat: void applyPattern(java.lang.String)>/assign/instruction220	<java.text.ChoiceFormat: void applyPattern(java.lang.String)>/l5_$$A_5#_249
<java.text.ChoiceFormat: void applyPattern(java.lang.String)>/assign/instruction226	<java.text.ChoiceFormat: void applyPattern(java.lang.String)>/l5_$$A_5#_249
<java.lang.String: java.lang.String replace(char,char)>/assign/instruction17	<java.lang.String: java.lang.String replace(char,char)>/l3#_2068
<sun.misc.ProxyGenerator: void addProxyMethod(java.lang.reflect.Method,java.lang.Class)>/assign/instruction33	<sun.misc.ProxyGenerator: void addProxyMethod(java.lang.reflect.Method,java.lang.Class)>/$stack44
<java.text.ChoiceFormat: double[] doubleArraySize(double[])>/assign/instruction4	<java.text.ChoiceFormat: double[] doubleArraySize(double[])>/$stack3
<java.text.ChoiceFormat: java.lang.String[] doubleArraySize(java.lang.String[])>/assign/instruction5	<java.text.ChoiceFormat: java.lang.String[] doubleArraySize(java.lang.String[])>/$stack4
<java.lang.String: java.lang.String[] split(java.lang.String,int)>/assign/instruction100	<java.lang.String: java.lang.String[] split(java.lang.String,int)>/l8_$$A_3#_2375
<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/assign/instruction38	<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/l3#_2567
<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/assign/instruction113	<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/$stack38
<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/assign/instruction37	<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/l3#_2727
<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/assign/instruction113	<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/$stack36
<java.lang.String: char[] toCharArray()>/assign/instruction4	<java.lang.String: char[] toCharArray()>/$stack3
<sun.security.ssl.CipherBox: javax.crypto.spec.IvParameterSpec getFixedMask(int)>/assign/instruction14	<sun.security.ssl.CipherBox: javax.crypto.spec.IvParameterSpec getFixedMask(int)>/l0#_0
<java.io.ObjectInputStream: java.lang.Class resolveProxyClass(java.lang.String[])>/assign/instruction7	<java.io.ObjectInputStream: java.lang.Class resolveProxyClass(java.lang.String[])>/$stack9
<java.util.Hashtable: void <init>(int,float)>/assign/instruction35	<java.util.Hashtable: void <init>(int,float)>/l1_$$A_2#_189
<java.util.Hashtable: void rehash()>/assign/instruction14	<java.util.Hashtable: void rehash()>/l3_$$A_2#_400
<java.util.Hashtable: java.lang.Object clone()>/assign/instruction6	<java.util.Hashtable: java.lang.Object clone()>/$stack5
<java.io.ObjectInputStream: java.io.ObjectStreamClass readProxyDesc(boolean)>/assign/instruction24	<java.io.ObjectInputStream: java.io.ObjectStreamClass readProxyDesc(boolean)>/l4#_1748
<sun.security.ssl.CipherBox: byte[] createExplicitNonce(sun.security.ssl.Authenticator,byte,int)>/assign/instruction18	<sun.security.ssl.CipherBox: byte[] createExplicitNonce(sun.security.ssl.Authenticator,byte,int)>/$stack37
<java.util.Hashtable: void readObject(java.io.ObjectInputStream)>/assign/instruction53	<java.util.Hashtable: void readObject(java.io.ObjectInputStream)>/l4_$$A_3#_1194
<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)>/assign/instruction17	<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)>/l4#_75
<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)>/assign/instruction37	<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)>/l4_$$A_1#_90
<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)>/assign/instruction55	<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)>/l4_$$A_2#_99
<java.io.ObjectInputStream: void defaultReadFields(java.lang.Object,java.io.ObjectStreamClass)>/assign/instruction18	<java.io.ObjectInputStream: void defaultReadFields(java.lang.Object,java.io.ObjectStreamClass)>/l4#_2216
<java.io.ObjectInputStream: void defaultReadFields(java.lang.Object,java.io.ObjectStreamClass)>/assign/instruction32	<java.io.ObjectInputStream: void defaultReadFields(java.lang.Object,java.io.ObjectStreamClass)>/$stack18
<java.io.Writer: void write(java.lang.String,int,int)>/assign/instruction15	<java.io.Writer: void write(java.lang.String,int,int)>/l3#_0
<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.net.PasswordAuthentication)>/assign/instruction39	<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.net.PasswordAuthentication)>/$stack19
<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.net.PasswordAuthentication)>/assign/instruction53	<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.net.PasswordAuthentication)>/$stack23
<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.net.PasswordAuthentication)>/assign/instruction38	<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.net.PasswordAuthentication)>/$stack18
<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.net.PasswordAuthentication)>/assign/instruction52	<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.net.PasswordAuthentication)>/$stack22
<java.security.spec.ECFieldF2m: void <init>(int,java.math.BigInteger)>/assign/instruction32	<java.security.spec.ECFieldF2m: void <init>(int,java.math.BigInteger)>/$stack18
<java.io.ObjectInputStream$GetFieldImpl: void <init>(java.io.ObjectInputStream,java.io.ObjectStreamClass)>/assign/instruction8	<java.io.ObjectInputStream$GetFieldImpl: void <init>(java.io.ObjectInputStream,java.io.ObjectStreamClass)>/$stack3
<java.io.ObjectInputStream$GetFieldImpl: void <init>(java.io.ObjectInputStream,java.io.ObjectStreamClass)>/assign/instruction11	<java.io.ObjectInputStream$GetFieldImpl: void <init>(java.io.ObjectInputStream,java.io.ObjectStreamClass)>/$stack5
<java.io.ObjectInputStream$GetFieldImpl: void <init>(java.io.ObjectInputStream,java.io.ObjectStreamClass)>/assign/instruction15	<java.io.ObjectInputStream$GetFieldImpl: void <init>(java.io.ObjectInputStream,java.io.ObjectStreamClass)>/$stack8
<java.text.MessageFormat: java.text.Format[] getFormatsByArgumentIndex()>/assign/instruction20	<java.text.MessageFormat: java.text.Format[] getFormatsByArgumentIndex()>/$stack5
<java.text.MessageFormat: java.text.Format[] getFormats()>/assign/instruction4	<java.text.MessageFormat: java.text.Format[] getFormats()>/$stack3
<java.text.MessageFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>/assign/instruction24	<java.text.MessageFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>/$stack10
<sun.security.validator.PKIXValidator: java.security.cert.X509Certificate[] engineValidate(java.security.cert.X509Certificate[],java.util.Collection,java.security.AlgorithmConstraints,java.lang.Object)>/assign/instruction53	<sun.security.validator.PKIXValidator: java.security.cert.X509Certificate[] engineValidate(java.security.cert.X509Certificate[],java.util.Collection,java.security.AlgorithmConstraints,java.lang.Object)>/l8_$$A_1#_225
<sun.security.validator.PKIXValidator: java.security.cert.X509Certificate[] engineValidate(java.security.cert.X509Certificate[],java.util.Collection,java.security.AlgorithmConstraints,java.lang.Object)>/assign/instruction83	<sun.security.validator.PKIXValidator: java.security.cert.X509Certificate[] engineValidate(java.security.cert.X509Certificate[],java.util.Collection,java.security.AlgorithmConstraints,java.lang.Object)>/$stack30
<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>/assign/instruction25	<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>/$stack14
<sun.security.validator.PKIXValidator: java.security.cert.X509Certificate[] toArray(java.security.cert.CertPath,java.security.cert.TrustAnchor)>/assign/instruction6	<sun.security.validator.PKIXValidator: java.security.cert.X509Certificate[] toArray(java.security.cert.CertPath,java.security.cert.TrustAnchor)>/$stack7
<sun.nio.ch.Util: java.nio.ByteBuffer[] subsequence(java.nio.ByteBuffer[],int,int)>/assign/instruction9	<sun.nio.ch.Util: java.nio.ByteBuffer[] subsequence(java.nio.ByteBuffer[],int,int)>/l3#_308
<java.lang.invoke.MethodHandleImpl$BindCaller$2: java.lang.Void run()>/assign/instruction17	<java.lang.invoke.MethodHandleImpl$BindCaller$2: java.lang.Void run()>/l5#_1238
<java.util.ArrayDeque: void allocateElements(int)>/assign/instruction22	<java.util.ArrayDeque: void allocateElements(int)>/l2_$$A_9#_141
<java.util.ArrayDeque: void doubleCapacity()>/assign/instruction20	<java.util.ArrayDeque: void doubleCapacity()>/l4#_154
<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/assign/instruction6	<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/$stack11
<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/assign/instruction58	<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/l6#6#_1439
<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/assign/instruction59	<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/l6#6#_1439
<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/assign/instruction60	<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>/l6#6#_1439
<java.util.ArrayDeque: java.lang.Object[] toArray()>/assign/instruction3	<java.util.ArrayDeque: java.lang.Object[] toArray()>/$stack1
<java.io.Reader: int read(java.nio.CharBuffer)>/assign/instruction4	<java.io.Reader: int read(java.nio.CharBuffer)>/l2#_98
<java.io.Reader: long skip(long)>/assign/instruction20	<java.io.Reader: long skip(long)>/l3#_179
<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] basicTypes(java.util.List)>/assign/instruction3	<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] basicTypes(java.util.List)>/$stack3
<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] basicTypes(java.lang.String)>/assign/instruction3	<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] basicTypes(java.lang.String)>/$stack3
<java.lang.invoke.LambdaForm$BasicType: byte[] basicTypesOrd(java.lang.invoke.LambdaForm$BasicType[])>/assign/instruction3	<java.lang.invoke.LambdaForm$BasicType: byte[] basicTypesOrd(java.lang.invoke.LambdaForm$BasicType[])>/$stack3
<sun.text.UCompactIntArray: void compact()>/assign/instruction78	<sun.text.UCompactIntArray: void compact()>/l5_$$A_4#_119
<sun.text.normalizer.IntTrie: void unserialize(java.io.InputStream)>/assign/instruction5	<sun.text.normalizer.IntTrie: void unserialize(java.io.InputStream)>/$stack4
<sun.invoke.util.ValueConversions: sun.invoke.util.ValueConversions$WrapperCache[] newWrapperCaches(int)>/assign/instruction2	<sun.invoke.util.ValueConversions: sun.invoke.util.ValueConversions$WrapperCache[] newWrapperCaches(int)>/l0#_0
<java.lang.invoke.BoundMethodHandle: java.lang.Object internalValues()>/assign/instruction4	<java.lang.invoke.BoundMethodHandle: java.lang.Object internalValues()>/$stack4
<java.math.MutableBigInteger: void ones(int)>/assign/instruction6	<java.math.MutableBigInteger: void ones(int)>/l1#_0
<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>/assign/instruction10	<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>/l2#_0
<java.math.MutableBigInteger: void ensureCapacity(int)>/assign/instruction6	<java.math.MutableBigInteger: void ensureCapacity(int)>/l1#_0
<java.math.MutableBigInteger: int[] toIntArray()>/assign/instruction3	<java.math.MutableBigInteger: int[] toIntArray()>/$stack3
<sun.security.jca.ProviderList: sun.security.jca.ProviderList remove(sun.security.jca.ProviderList,java.lang.String)>/assign/instruction8	<sun.security.jca.ProviderList: sun.security.jca.ProviderList remove(sun.security.jca.ProviderList,java.lang.String)>/$stack10
<java.math.MutableBigInteger: void copyValue(java.math.MutableBigInteger)>/assign/instruction7	<java.math.MutableBigInteger: void copyValue(java.math.MutableBigInteger)>/l2#_452
<java.math.MutableBigInteger: void copyValue(int[])>/assign/instruction7	<java.math.MutableBigInteger: void copyValue(int[])>/l2#_465
<sun.security.jca.ProviderList: sun.security.jca.ProviderList newList(java.security.Provider[])>/assign/instruction3	<sun.security.jca.ProviderList: sun.security.jca.ProviderList newList(java.security.Provider[])>/$stack3
<java.math.MutableBigInteger: void leftShift(int)>/assign/instruction27	<java.math.MutableBigInteger: void leftShift(int)>/l5_$$A_2#_588
<sun.security.jca.ProviderList: sun.security.jca.ProviderList removeInvalid()>/assign/instruction7	<sun.security.jca.ProviderList: sun.security.jca.ProviderList removeInvalid()>/l1#_299
<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>/assign/instruction23	<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>/l3#_0
<java.math.MutableBigInteger: void add(java.math.MutableBigInteger)>/assign/instruction17	<java.math.MutableBigInteger: void add(java.math.MutableBigInteger)>/l4#_740
<java.math.MutableBigInteger: void add(java.math.MutableBigInteger)>/assign/instruction123	<java.math.MutableBigInteger: void add(java.math.MutableBigInteger)>/l4_$$A_1#_773
<java.math.MutableBigInteger: void addShifted(java.math.MutableBigInteger,int)>/assign/instruction21	<java.math.MutableBigInteger: void addShifted(java.math.MutableBigInteger,int)>/l5#_803
<java.math.MutableBigInteger: void addShifted(java.math.MutableBigInteger,int)>/assign/instruction155	<java.math.MutableBigInteger: void addShifted(java.math.MutableBigInteger,int)>/l5_$$A_1#_839
<java.util.LinkedList$LLSpliterator: java.util.Spliterator trySplit()>/assign/instruction17	<java.util.LinkedList$LLSpliterator: java.util.Spliterator trySplit()>/l3_$$A_4#_1215
<java.math.MutableBigInteger: void addDisjoint(java.math.MutableBigInteger,int)>/assign/instruction21	<java.math.MutableBigInteger: void addDisjoint(java.math.MutableBigInteger,int)>/l5#_868
<java.math.MutableBigInteger: int subtract(java.math.MutableBigInteger)>/assign/instruction21	<java.math.MutableBigInteger: int subtract(java.math.MutableBigInteger)>/l5#5#_929
<java.math.MutableBigInteger: void multiply(java.math.MutableBigInteger,java.math.MutableBigInteger)>/assign/instruction10	<java.math.MutableBigInteger: void multiply(java.math.MutableBigInteger,java.math.MutableBigInteger)>/l5#_1005
<java.math.MutableBigInteger: void mul(int,java.math.MutableBigInteger)>/assign/instruction19	<java.math.MutableBigInteger: void mul(int,java.math.MutableBigInteger)>/$stack35
<java.math.MutableBigInteger: int divideOneWord(int,java.math.MutableBigInteger)>/assign/instruction36	<java.math.MutableBigInteger: int divideOneWord(int,java.math.MutableBigInteger)>/$stack68
<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>/assign/instruction16	<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>/$stack7
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/assign/instruction51	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/$stack17
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/assign/instruction80	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/$stack91
<sun.security.timestamp.TSResponse: void parse(byte[])>/assign/instruction39	<sun.security.timestamp.TSResponse: void parse(byte[])>/$stack46
<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/assign/instruction11	<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/l5#_1483
<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/assign/instruction23	<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/$stack274
<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/assign/instruction39	<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/$stack249
<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/assign/instruction85	<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/$stack40
<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/assign/instruction125	<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>/l9_$$A_4#_1521
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/assign/instruction24	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/$stack21
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/assign/instruction52	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>/$stack122
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] optimize(java.security.ProtectionDomain[])>/assign/instruction8	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] optimize(java.security.ProtectionDomain[])>/$stack8
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] optimize(java.security.ProtectionDomain[])>/assign/instruction67	<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] optimize(java.security.ProtectionDomain[])>/l3_$$A_1#_459
<java.math.MutableBigInteger: java.math.MutableBigInteger divideLongMagnitude(long,java.math.MutableBigInteger)>/assign/instruction7	<java.math.MutableBigInteger: java.math.MutableBigInteger divideLongMagnitude(long,java.math.MutableBigInteger)>/$stack28
<java.math.MutableBigInteger: java.math.MutableBigInteger divideLongMagnitude(long,java.math.MutableBigInteger)>/assign/instruction26	<java.math.MutableBigInteger: java.math.MutableBigInteger divideLongMagnitude(long,java.math.MutableBigInteger)>/l6#_1690
<java.util.TimSort: void <init>(java.lang.Object[],java.util.Comparator,java.lang.Object[],int,int)>/assign/instruction55	<java.util.TimSort: void <init>(java.lang.Object[],java.util.Comparator,java.lang.Object[],int,int)>/l8#30#_182
<java.util.TimSort: void <init>(java.lang.Object[],java.util.Comparator,java.lang.Object[],int,int)>/assign/instruction57	<java.util.TimSort: void <init>(java.lang.Object[],java.util.Comparator,java.lang.Object[],int,int)>/l8#30#_182
<java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator: java.util.Spliterator trySplit()>/assign/instruction27	<java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator: java.util.Spliterator trySplit()>/l4#_821
<sun.misc.FormattedFloatingDecimal: char[] create(boolean,int)>/assign/instruction5	<sun.misc.FormattedFloatingDecimal: char[] create(boolean,int)>/$stack4
<sun.misc.FormattedFloatingDecimal: char[] create(boolean,int)>/assign/instruction9	<sun.misc.FormattedFloatingDecimal: char[] create(boolean,int)>/l1#_0
<java.util.stream.SliceOps$5: void <clinit>()>/assign/instruction3	<java.util.stream.SliceOps$5: void <clinit>()>/$stack2
<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/assign/instruction12	<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/$stack11
<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/assign/instruction16	<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/$stack14
<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/assign/instruction65	<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/$stack23
<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/assign/instruction70	<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/$stack27
<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/assign/instruction75	<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/$stack31
<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/assign/instruction96	<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset,java.time.ZoneOffset,java.util.List,java.util.List,java.util.List)>/$stack35
<sun.net.idn.StringPrep: void <init>(java.io.InputStream)>/assign/instruction16	<sun.net.idn.StringPrep: void <init>(java.io.InputStream)>/$stack10
<sun.net.idn.StringPrep: void <init>(java.io.InputStream)>/assign/instruction20	<sun.net.idn.StringPrep: void <init>(java.io.InputStream)>/$stack13
<java.time.zone.ZoneRules: void <init>(long[],java.time.ZoneOffset[],long[],java.time.ZoneOffset[],java.time.zone.ZoneOffsetTransitionRule[])>/assign/instruction50	<java.time.zone.ZoneRules: void <init>(long[],java.time.ZoneOffset[],long[],java.time.ZoneOffset[],java.time.zone.ZoneOffsetTransitionRule[])>/$stack15
<sun.security.ssl.SignatureAndHashAlgorithm: java.lang.String[] getAlgorithmNames(java.util.Collection)>/assign/instruction15	<sun.security.ssl.SignatureAndHashAlgorithm: java.lang.String[] getAlgorithmNames(java.util.Collection)>/$stack5
<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/assign/instruction6	<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/l1#_430
<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/assign/instruction19	<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/$stack11
<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/assign/instruction33	<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/l4_$$A_3#_440
<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/assign/instruction46	<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/$stack14
<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/assign/instruction60	<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>/l7#18#_450
<java.util.stream.StreamSpliterators$ArrayBuffer$OfDouble: void <init>(int)>/assign/instruction4	<java.util.stream.StreamSpliterators$ArrayBuffer$OfDouble: void <init>(int)>/l1#_0
<java.time.zone.ZoneRules: java.time.zone.ZoneOffsetTransition[] findTransitionArray(int)>/assign/instruction11	<java.time.zone.ZoneRules: java.time.zone.ZoneOffsetTransition[] findTransitionArray(int)>/$stack9
<java.nio.channels.Channels$ReadableByteChannelImpl: int read(java.nio.ByteBuffer)>/assign/instruction22	<java.nio.channels.Channels$ReadableByteChannelImpl: int read(java.nio.ByteBuffer)>/l6#_377
<java.util.stream.IntPipeline: java.lang.Integer[] lambda$toArray$6(int)>/assign/instruction2	<java.util.stream.IntPipeline: java.lang.Integer[] lambda$toArray$6(int)>/l0#_0
<sun.security.x509.KeyUsageExtension: void set(int,boolean)>/assign/instruction8	<sun.security.x509.KeyUsageExtension: void set(int,boolean)>/$stack7
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAvailableLocales()>/assign/instruction12	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAvailableLocales()>/$stack10
<sun.net.www.MessageHeader: void grow()>/assign/instruction10	<sun.net.www.MessageHeader: void grow()>/$stack5
<sun.net.www.MessageHeader: void grow()>/assign/instruction13	<sun.net.www.MessageHeader: void grow()>/$stack7
<sun.net.www.MessageHeader: void mergeHeader(java.io.InputStream)>/assign/instruction104	<sun.net.www.MessageHeader: void mergeHeader(java.io.InputStream)>/$stack38
<java.util.stream.SortedOps$SizedIntSortingSink: void begin(long)>/assign/instruction10	<java.util.stream.SortedOps$SizedIntSortingSink: void begin(long)>/$stack4
<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream getErrorStream(java.io.InputStream,long,sun.net.www.http.HttpClient)>/assign/instruction30	<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream getErrorStream(java.io.InputStream,long,sun.net.www.http.HttpClient)>/l8#_3597
<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)>/assign/instruction10	<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)>/l4#_48
<java.util.zip.ZipCoder: byte[] getBytes(java.lang.String)>/assign/instruction11	<java.util.zip.ZipCoder: byte[] getBytes(java.lang.String)>/l4#_79
<java.nio.HeapLongBuffer: void <init>(int,int)>/assign/instruction4	<java.nio.HeapLongBuffer: void <init>(int,int)>/l1#_0
<java.net.NetworkInterface$1checkedAddresses: void <init>(java.net.NetworkInterface)>/assign/instruction11	<java.net.NetworkInterface$1checkedAddresses: void <init>(java.net.NetworkInterface)>/$stack7
<sun.security.ssl.RenegotiationInfoExtension: void <init>(byte[],byte[])>/assign/instruction11	<sun.security.ssl.RenegotiationInfoExtension: void <init>(byte[],byte[])>/$stack8
<sun.security.ssl.RenegotiationInfoExtension: void <init>(sun.security.ssl.HandshakeInStream,int)>/assign/instruction34	<sun.security.ssl.RenegotiationInfoExtension: void <init>(sun.security.ssl.HandshakeInStream,int)>/l3#_75
<sun.nio.ch.NativeThreadSet: void <init>(int)>/assign/instruction6	<sun.nio.ch.NativeThreadSet: void <init>(int)>/l1#_0
<sun.nio.ch.NativeThreadSet: int add()>/assign/instruction18	<sun.nio.ch.NativeThreadSet: int add()>/l6#_54
