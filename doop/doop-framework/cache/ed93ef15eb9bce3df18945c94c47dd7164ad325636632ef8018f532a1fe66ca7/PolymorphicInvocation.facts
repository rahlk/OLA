<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>/java.lang.invoke.MethodHandle.type/2	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>/java.lang.invoke.MethodHandle.type/3	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>/java.lang.invoke.MethodHandle.viewAsType/0	viewAsType
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvert(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.viewAsType/0	viewAsType
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.bindTo/0	bindTo
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.bindTo/1	bindTo
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertIndirect(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertIndirect(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertIndirect(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>/java.lang.invoke.MethodHandle.type/2	type
<java.lang.invoke.MethodHandleImpl: java.lang.Object valueConversion(java.lang.Class,java.lang.Class,boolean,boolean)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.Object valueConversion(java.lang.Class,java.lang.Class,boolean,boolean)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleImpl: java.lang.Object valueConversion(java.lang.Class,java.lang.Class,boolean,boolean)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl: java.lang.Object valueConversion(java.lang.Class,java.lang.Class,boolean,boolean)>/java.lang.invoke.MethodHandle.type/2	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.asFixedArity/0	asFixedArity
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeSpreadArguments(java.lang.invoke.MethodHandle,java.lang.Class,int,int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeSpreadArguments(java.lang.invoke.MethodHandle,java.lang.Class,int,int)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeCollectArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,boolean)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeCollectArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,boolean)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/2	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.invokeBasic/1	invokeBasic
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.LambdaForm makeGuardWithCatchForm(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.asFixedArity/0	asFixedArity
<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeWithArguments/0	invokeWithArguments
<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.asFixedArity/1	asFixedArity
<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeWithArguments/1	invokeWithArguments
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle fakeMethodHandleInvoke(java.lang.invoke.MemberName)>/java.lang.invoke.MethodHandle.bindTo/0	bindTo
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle fakeMethodHandleInvoke(java.lang.invoke.MemberName)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle fakeMethodHandleInvoke(java.lang.invoke.MemberName)>/java.lang.invoke.MethodHandle.withInternalMemberName/0	withInternalMemberName
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle fakeMethodHandleInvoke(java.lang.invoke.MemberName)>/java.lang.invoke.MethodHandle.asVarargsCollector/0	asVarargsCollector
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>/java.lang.invoke.MethodHandle.isInvokeSpecial/0	isInvokeSpecial
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>/java.lang.invoke.MethodHandle.intrinsicName/0	intrinsicName
<java.lang.invoke.MethodHandleImpl: boolean assertCorrectArity(java.lang.invoke.MethodHandle,int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildVarargsArray(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int)>/java.lang.invoke.MethodHandle.bindTo/0	bindTo
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildVarargsArray(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int)>/java.lang.invoke.MethodHandle.asCollector/0	asCollector
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildFiller(int)>/java.lang.invoke.MethodHandle.bindTo/0	bindTo
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildFiller(int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildFiller(int)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle varargsArray(java.lang.Class,int)>/java.lang.invoke.MethodHandle.bindTo/0	bindTo
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle varargsArray(java.lang.Class,int)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildArrayProducer(java.lang.Class)>/java.lang.invoke.MethodHandle.bindTo/0	bindTo
<java.lang.invoke.LambdaForm: boolean argumentTypesMatch(java.lang.String,java.lang.Object[])>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.LambdaForm: boolean returnTypesMatch(java.lang.String,java.lang.Object[],java.lang.Object)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.LambdaForm: boolean arityCheck(java.lang.Object[])>/java.lang.invoke.MethodHandle.internalForm/0	internalForm
<java.lang.invoke.LambdaForm: boolean resultCheck(java.lang.Object[],java.lang.Object)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle bindCaller(java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.bindTo/0	bindTo
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle makeInjectedInvoker(java.lang.Class)>/java.lang.invoke.MethodHandle.invokeExact/0	invokeExact
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle makeInjectedInvoker(java.lang.Class)>/java.lang.invoke.MethodHandle.invokeExact/1	invokeExact
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle prepareForInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.asFixedArity/0	asFixedArity
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle prepareForInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle prepareForInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle prepareForInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.internalForm/0	internalForm
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle prepareForInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.asSpreader/0	asSpreader
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle prepareForInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.internalForm/1	internalForm
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.asCollector/0	asCollector
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.isInvokeSpecial/0	isInvokeSpecial
<java.lang.invoke.MethodHandleImpl$BindCaller: void <clinit>()>/java.lang.invoke.MethodHandle.invokeExact/0	invokeExact
<java.lang.invoke.MethodHandleStatics: java.lang.String getNameString(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleStatics: java.lang.String getNameString(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.MethodHandleStatics: java.lang.String getNameString(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleStatics: java.lang.String addTypeString(java.lang.Object,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle makeExactOrGeneralInvoker(boolean)>/java.lang.invoke.MethodHandle.withInternalMemberName/0	withInternalMemberName
<java.lang.invoke.Invokers: boolean checkInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.Invokers: boolean checkInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.Invokers: boolean checkInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.internalMemberName/1	internalMemberName
<java.lang.invoke.Invokers: boolean checkInvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.isVarargsCollector/0	isVarargsCollector
<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle spreadInvoker(int)>/java.lang.invoke.MethodHandle.asSpreader/0	asSpreader
<java.lang.invoke.Invokers: void checkExactType(java.lang.Object,java.lang.Object)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.Invokers: java.lang.Object checkGenericType(java.lang.Object,java.lang.Object)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.Invokers: void maybeCustomize(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.customize/0	customize
<java.lang.invoke.MethodHandle: java.lang.Object invokeWithArguments(java.lang.Object[])>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandle: java.lang.Object invokeWithArguments(java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeExact/0	invokeExact
<java.lang.invoke.MethodHandle: java.lang.Object invokeWithArguments(java.util.List)>/java.lang.invoke.MethodHandle.invokeWithArguments/0	invokeWithArguments
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asType(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asTypeCached/0	asTypeCached
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asType(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asTypeUncached/0	asTypeUncached
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asSpreader(java.lang.Class,int)>/java.lang.invoke.MethodHandle.asSpreaderChecks/0	asSpreaderChecks
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asSpreader(java.lang.Class,int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asSpreader(java.lang.Class,int)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asSpreader(java.lang.Class,int)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType asSpreaderChecks(java.lang.Class,int)>/java.lang.invoke.MethodHandle.spreadArrayChecks/0	spreadArrayChecks
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType asSpreaderChecks(java.lang.Class,int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType asSpreaderChecks(java.lang.Class,int)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType asSpreaderChecks(java.lang.Class,int)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asCollector(java.lang.Class,int)>/java.lang.invoke.MethodHandle.asCollectorChecks/0	asCollectorChecks
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asCollector(java.lang.Class,int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asCollector(java.lang.Class,int)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asCollector(java.lang.Class,int)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asCollector(java.lang.Class,int)>/java.lang.invoke.MethodHandle.type/2	type
<java.lang.invoke.MethodHandle: boolean asCollectorChecks(java.lang.Class,int)>/java.lang.invoke.MethodHandle.spreadArrayChecks/0	spreadArrayChecks
<java.lang.invoke.MethodHandle: boolean asCollectorChecks(java.lang.Class,int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandle: boolean asCollectorChecks(java.lang.Class,int)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asVarargsCollector(java.lang.Class)>/java.lang.invoke.MethodHandle.asCollectorChecks/0	asCollectorChecks
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asVarargsCollector(java.lang.Class)>/java.lang.invoke.MethodHandle.isVarargsCollector/0	isVarargsCollector
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asFixedArity()>/java.lang.invoke.MethodHandle.isVarargsCollector/0	isVarargsCollector
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle bindTo(java.lang.Object)>/java.lang.invoke.MethodHandle.bindArgumentL/0	bindArgumentL
<java.lang.invoke.MethodHandle: java.lang.String toString()>/java.lang.invoke.MethodHandle.debugString/0	debugString
<java.lang.invoke.MethodHandle: java.lang.String toString()>/java.lang.invoke.MethodHandle.standardString/0	standardString
<java.lang.invoke.MethodHandle: java.lang.String debugString()>/java.lang.invoke.MethodHandle.internalForm/0	internalForm
<java.lang.invoke.MethodHandle: java.lang.String debugString()>/java.lang.invoke.MethodHandle.internalProperties/0	internalProperties
<java.lang.invoke.MethodHandle: java.lang.invoke.BoundMethodHandle bindArgumentL(int,java.lang.Object)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle setVarargs(java.lang.invoke.MemberName)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle viewAsType(java.lang.invoke.MethodType,boolean)>/java.lang.invoke.MethodHandle.viewAsTypeChecks/0	viewAsTypeChecks
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle viewAsType(java.lang.invoke.MethodType,boolean)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandle: boolean viewAsTypeChecks(java.lang.invoke.MethodType,boolean)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandle: boolean viewAsTypeChecks(java.lang.invoke.MethodType,boolean)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle withInternalMemberName(java.lang.invoke.MemberName,boolean)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle withInternalMemberName(java.lang.invoke.MemberName,boolean)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle withInternalMemberName(java.lang.invoke.MemberName,boolean)>/java.lang.invoke.MethodHandle.internalMemberName/1	internalMemberName
<java.lang.invoke.MethodHandle: void customize()>/java.lang.invoke.MethodHandle.updateForm/0	updateForm
<java.lang.invoke.MethodHandleImpl$ArrayAccessor: void <clinit>()>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.MethodHandleImpl$ArrayAccessor: void <clinit>()>/java.lang.invoke.MethodHandle.internalMemberName/1	internalMemberName
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle bind(java.lang.Object,java.lang.String,java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.bindArgumentL/0	bindArgumentL
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandleInfo revealDirect(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandleInfo revealDirect(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.isInvokeSpecial/0	isInvokeSpecial
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandleInfo revealDirect(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.internalCallerClass/0	internalCallerClass
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle getDirectMethodCommon(byte,java.lang.Class,java.lang.invoke.MemberName,boolean,boolean,java.lang.Class)>/java.lang.invoke.MethodHandle.setVarargs/0	setVarargs
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle linkMethodHandleConstant(byte,java.lang.Class,java.lang.String,java.lang.Object)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle explicitCastArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle explicitCastArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asFixedArity/0	asFixedArity
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle explicitCastArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandles: void explicitCastArgumentsChecks(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>/java.lang.invoke.MethodHandle.bindTo/0	bindTo
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle identity(java.lang.Class)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle zero(sun.invoke.util.Wrapper,java.lang.Class)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,int,java.lang.Object[])>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandles: java.lang.Class[] insertArgumentsChecks(java.lang.invoke.MethodHandle,int,int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterArgument(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterArgument(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterArgument(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandles: void filterArgumentsCheckArity(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle[])>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: void filterArgumentChecks(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: void filterArgumentChecks(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle collectArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle collectArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle collectArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.intrinsicName/0	intrinsicName
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodType collectArgumentsChecks(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodType collectArgumentsChecks(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterReturnValue(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterReturnValue(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterReturnValue(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/2	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/3	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle catchException(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle catchException(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle catchException(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/2	type
<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm collectArgumentArrayForm(int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm collectArgumentArrayForm(int,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.intrinsicName/0	intrinsicName
<java.lang.invoke.SimpleMethodHandle: java.lang.invoke.BoundMethodHandle copyWithExtendI(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,int)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.SimpleMethodHandle: java.lang.invoke.BoundMethodHandle copyWithExtendJ(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,long)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.SimpleMethodHandle: java.lang.invoke.BoundMethodHandle copyWithExtendF(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,float)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.SimpleMethodHandle: java.lang.invoke.BoundMethodHandle copyWithExtendD(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,double)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.MethodHandleImpl$CountingWrapper: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm,java.util.function.Function,java.util.function.Function,int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl$CountingWrapper: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl$WrappedMember: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl$BindCaller$T: java.lang.Object invoke_V(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeExact/0	invokeExact
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>/java.lang.invoke.MethodHandle.debugString/0	debugString
<java.lang.invoke.InvokerBytecodeGenerator: void emitNewArray(java.lang.invoke.LambdaForm$Name)>/java.lang.invoke.MethodHandle.invoke/0	invoke
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitGuardWithCatch(int)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitGuardWithCatch(int)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle: java.lang.invoke.MethodHandle asCollector(java.lang.Class,int)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.BoundMethodHandle$Factory: java.lang.invoke.MethodHandle[] makeGetters(java.lang.Class,java.lang.String,java.lang.invoke.MethodHandle[])>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWithExtendL(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.Object)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWithExtendI(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,int)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWithExtendJ(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,long)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWithExtendF(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,float)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWithExtendD(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,double)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.AbstractValidatingLambdaMetafactory: void validateMetafactoryArgs()>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.LambdaForm$NamedFunction: void <init>(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.LambdaForm$NamedFunction: void <init>(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke__V(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_L_V(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_LL_V(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_LLL_V(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_LLLL_V(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_LLLLL_V(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke__L(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_L_L(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_LL_L(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_LLL_L(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_LLLL_L(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invoke_LLLLL_L(java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: boolean arityCheck(int,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.LambdaForm$NamedFunction: boolean arityCheck(int,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.LambdaForm$NamedFunction: boolean arityCheck(int,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.invoke.MethodHandle computeInvoker(java.lang.invoke.MethodTypeForm)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.invoke.MethodHandle computeInvoker(java.lang.invoke.MethodTypeForm)>/java.lang.invoke.MethodHandle.debugString/0	debugString
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invokeWithArguments(java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.Object invokeWithArgumentsTracing(java.lang.Object[])>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.invoke.MethodType methodType()>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.LambdaForm$NamedFunction: boolean assertMemberIsConsistent()>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.invoke.MethodHandleImpl$Intrinsic intrinsicName()>/java.lang.invoke.MethodHandle.intrinsicName/0	intrinsicName
<java.lang.invoke.CallSite: void <init>(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.CallSite: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.invokeWithArguments/0	invokeWithArguments
<java.lang.invoke.CallSite: java.lang.invoke.MethodType type()>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.CallSite: void checkTargetChange(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.CallSite: void checkTargetChange(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle makeDynamicInvoker()>/java.lang.invoke.MethodHandle.bindArgumentL/0	bindArgumentL
<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle makeUninitializedCallSite(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle makeUninitializedCallSite(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.viewAsType/0	viewAsType
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invoke/0	invoke
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invoke/1	invoke
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invoke/2	invoke
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invoke/3	invoke
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invoke/4	invoke
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invoke/5	invoke
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invoke/6	invoke
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invoke/7	invoke
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invoke/8	invoke
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.invokeExact/0	invokeExact
<java.lang.invoke.CallSite: java.lang.invoke.CallSite makeSite(java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Class)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleNatives: java.lang.invoke.MemberName linkCallSiteTracing(java.lang.Class,java.lang.invoke.MethodHandle,java.lang.String,java.lang.invoke.MethodType,java.lang.Object,java.lang.Object[])>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.DelegatingMethodHandle: void <init>(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MemberName internalMemberName()>/java.lang.invoke.MethodHandle.internalMemberName/0	internalMemberName
<java.lang.invoke.DelegatingMethodHandle: boolean isInvokeSpecial()>/java.lang.invoke.MethodHandle.isInvokeSpecial/0	isInvokeSpecial
<java.lang.invoke.DelegatingMethodHandle: java.lang.Class internalCallerClass()>/java.lang.invoke.MethodHandle.internalCallerClass/0	internalCallerClass
<java.lang.invoke.DelegatingMethodHandle: java.lang.String internalProperties()>/java.lang.invoke.MethodHandle.debugString/0	debugString
<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.BoundMethodHandle rebind()>/java.lang.invoke.MethodHandle.rebind/0	rebind
<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm chooseDelegatingForm(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.internalForm/0	internalForm
<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: void <init>(java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.Class)>/java.lang.invoke.MethodHandle.asCollector/0	asCollector
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asType/0	asType
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asType/1	asType
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asCollector/0	asCollector
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.type/1	type
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>/java.lang.invoke.MethodHandle.asType/2	asType
<java.lang.invoke.BoundMethodHandle: java.lang.invoke.BoundMethodHandle bindSingle(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.BoundMethodHandle: java.lang.invoke.BoundMethodHandle bindSingle(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>/java.lang.invoke.MethodHandle.invokeBasic/1	invokeBasic
<java.lang.invoke.BoundMethodHandle: java.lang.invoke.BoundMethodHandle bindSingle(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>/java.lang.invoke.MethodHandle.invokeBasic/2	invokeBasic
<java.lang.invoke.BoundMethodHandle: java.lang.invoke.BoundMethodHandle bindSingle(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.LambdaForm$BasicType,java.lang.Object)>/java.lang.invoke.MethodHandle.invokeBasic/3	invokeBasic
<java.lang.invoke.BoundMethodHandle: java.lang.invoke.BoundMethodHandle makeReinvoker(java.lang.invoke.MethodHandle)>/java.lang.invoke.MethodHandle.type/0	type
<java.lang.invoke.BoundMethodHandle: java.lang.Object arg(int)>/java.lang.invoke.MethodHandle.invokeBasic/0	invokeBasic
<java.lang.invoke.BoundMethodHandle: java.lang.Object arg(int)>/java.lang.invoke.MethodHandle.invokeBasic/1	invokeBasic
<java.lang.invoke.BoundMethodHandle: java.lang.Object arg(int)>/java.lang.invoke.MethodHandle.invokeBasic/2	invokeBasic
<java.lang.invoke.BoundMethodHandle: java.lang.Object arg(int)>/java.lang.invoke.MethodHandle.invokeBasic/3	invokeBasic
<java.lang.invoke.BoundMethodHandle: java.lang.Object arg(int)>/java.lang.invoke.MethodHandle.invokeBasic/4	invokeBasic
<sun.invoke.util.ValueConversions: java.lang.invoke.MethodHandle unbox(sun.invoke.util.Wrapper,int)>/java.lang.invoke.MethodHandle.asType/0	asType
<sun.invoke.util.ValueConversions: java.lang.invoke.MethodHandle convertPrimitive(sun.invoke.util.Wrapper,sun.invoke.util.Wrapper)>/java.lang.invoke.MethodHandle.type/0	type
